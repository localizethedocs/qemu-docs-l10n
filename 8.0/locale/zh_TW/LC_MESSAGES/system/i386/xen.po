# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 8.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 10:02+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../system/i386/xen.rst:2
msgid "Xen HVM guest support"
msgstr ""

#: ../../../system/i386/xen.rst:6
msgid "Description"
msgstr ""

#: ../../../system/i386/xen.rst:8
msgid ""
"KVM has support for hosting Xen guests, intercepting Xen hypercalls and "
"event channel (Xen PV interrupt) delivery. This allows guests which expect "
"to be run under Xen to be hosted in QEMU under Linux/KVM instead."
msgstr ""

#: ../../../system/i386/xen.rst:12
msgid "Using the split irqchip is mandatory for Xen support."
msgstr ""

#: ../../../system/i386/xen.rst:15
msgid "Setup"
msgstr ""

#: ../../../system/i386/xen.rst:17
msgid ""
"Xen mode is enabled by setting the ``xen-version`` property of the KVM "
"accelerator, for example for Xen 4.10:"
msgstr ""

#: ../../../system/i386/xen.rst:22
msgid "|qemu_system| --accel kvm,xen-version=0x4000a,kernel-irqchip=split"
msgstr ""

#: ../../../system/i386/xen.rst:24
msgid ""
"Additionally, virtual APIC support can be advertised to the guest through "
"the ``xen-vapic`` CPU flag:"
msgstr ""

#: ../../../system/i386/xen.rst:29
msgid ""
"|qemu_system| --accel kvm,xen-version=0x4000a,kernel-irqchip=split --cpu "
"host,+xen_vapic"
msgstr ""

#: ../../../system/i386/xen.rst:31
msgid ""
"When Xen support is enabled, QEMU changes hypervisor identification (CPUID "
"0x40000000..0x4000000A) to Xen. The KVM identification and features are not "
"advertised to a Xen guest. If Hyper-V is also enabled, the Xen "
"identification moves to leaves 0x40000100..0x4000010A."
msgstr ""

#: ../../../system/i386/xen.rst:36
msgid ""
"The Xen platform device is enabled automatically for a Xen guest. This "
"allows a guest to unplug all emulated devices, in order to use Xen PV block "
"and network drivers instead. Under Xen, the boot disk is typically available "
"both via IDE emulation, and as a PV block device. Guest bootloaders "
"typically use IDE to load the guest kernel, which then unplugs the IDE and "
"continues with the Xen PV block device."
msgstr ""

#: ../../../system/i386/xen.rst:43
msgid "This configuration can be achieved as follows"
msgstr ""

#: ../../../system/i386/xen.rst:47
msgid ""
"|qemu_system| -M pc --accel kvm,xen-version=0x4000a,kernel-irqchip=split \\"
"\\\n"
"     -drive file=${GUEST_IMAGE},if=none,id=disk,file.locking=off -device xen-"
"disk,drive=disk,vdev=xvda \\\\\n"
"     -drive file=${GUEST_IMAGE},index=2,media=disk,file.locking=off,if=ide"
msgstr ""

#: ../../../system/i386/xen.rst:51
msgid ""
"It is necessary to use the pc machine type, as the q35 machine uses AHCI "
"instead of legacy IDE, and AHCI disks are not unplugged through the Xen PV "
"unplug mechanism."
msgstr ""

#: ../../../system/i386/xen.rst:55
msgid ""
"VirtIO devices can also be used; Linux guests may need to be dissuaded from "
"umplugging them by adding 'xen_emul_unplug=never' on their command line."
msgstr ""

#: ../../../system/i386/xen.rst:59
msgid "Properties"
msgstr ""

#: ../../../system/i386/xen.rst:61
msgid "The following properties exist on the KVM accelerator object:"
msgstr ""

#: ../../../system/i386/xen.rst:63
msgid "``xen-version``"
msgstr ""

#: ../../../system/i386/xen.rst:64
msgid ""
"This property contains the Xen version in ``XENVER_version`` form, with the "
"major version in the top 16 bits and the minor version in the low 16 bits. "
"Setting this property enables the Xen guest support."
msgstr ""

#: ../../../system/i386/xen.rst:68
msgid "``xen-evtchn-max-pirq``"
msgstr ""

#: ../../../system/i386/xen.rst:69
msgid ""
"Xen PIRQs represent an emulated physical interrupt, either GSI or MSI, which "
"can be routed to an event channel instead of to the emulated I/O or local "
"APIC. By default, QEMU permits only 256 PIRQs because this allows maximum "
"compatibility with 32-bit MSI where the higher bits of the PIRQ# would need "
"to be in the upper 64 bits of the MSI message. For guests with large numbers "
"of PCI devices (and none which are limited to 32-bit addressing) it may be "
"desirable to increase this value."
msgstr ""

#: ../../../system/i386/xen.rst:77
msgid "``xen-gnttab-max-frames``"
msgstr ""

#: ../../../system/i386/xen.rst:78
msgid ""
"Xen grant tables are the means by which a Xen guest grants access to its "
"memory for PV back ends (disk, network, etc.). Since QEMU only supports v1 "
"grant tables which are 8 bytes in size, each page (each frame) of the grant "
"table can reference 512 pages of guest memory. The default number of frames "
"is 64, allowing for 32768 pages of guest memory to be accessed by PV "
"backends through simultaneous grants. For guests with large numbers of PV "
"devices and high throughput, it may be desirable to increase this value."
msgstr ""

#: ../../../system/i386/xen.rst:87
msgid "OS requirements"
msgstr ""

#: ../../../system/i386/xen.rst:89
msgid ""
"The minimal Xen support in the KVM accelerator requires the host to be "
"running Linux v5.12 or newer. Later versions add optimisations: Linux v5.17 "
"added acceleration of interrupt delivery via the Xen PIRQ mechanism, and "
"Linux v5.19 accelerated Xen PV timers and inter-processor interrupts (IPIs)."
msgstr ""
