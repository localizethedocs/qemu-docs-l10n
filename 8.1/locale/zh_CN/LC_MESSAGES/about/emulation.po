# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 8.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 10:01+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../about/emulation.rst:2
msgid "Emulation"
msgstr ""

#: ../../../about/emulation.rst:4
msgid ""
"QEMU's Tiny Code Generator (TCG) provides the ability to emulate a number of "
"CPU architectures on any supported host platform. Both :ref:`System "
"Emulation` and :ref:`User Mode Emulation` are supported depending on the "
"guest architecture."
msgstr ""

#: ../../../about/emulation.rst:9
msgid "Supported Guest Architectures for Emulation"
msgstr ""

#: ../../../about/emulation.rst:13
msgid "Architecture (qemu name)"
msgstr ""

#: ../../../about/emulation.rst:14 ../../../about/emulation.rst:177
#: ../../../about/emulation.rst:180 ../../../about/emulation.rst:183
#: ../../../about/emulation.rst:189
msgid "System"
msgstr ""

#: ../../../about/emulation.rst:15
msgid "User"
msgstr ""

#: ../../../about/emulation.rst:16
msgid "Notes"
msgstr ""

#: ../../../about/emulation.rst:17
msgid "Alpha"
msgstr ""

#: ../../../about/emulation.rst:18 ../../../about/emulation.rst:19
#: ../../../about/emulation.rst:23 ../../../about/emulation.rst:30
#: ../../../about/emulation.rst:31 ../../../about/emulation.rst:35
#: ../../../about/emulation.rst:38 ../../../about/emulation.rst:39
#: ../../../about/emulation.rst:43 ../../../about/emulation.rst:46
#: ../../../about/emulation.rst:47 ../../../about/emulation.rst:51
#: ../../../about/emulation.rst:54 ../../../about/emulation.rst:55
#: ../../../about/emulation.rst:59 ../../../about/emulation.rst:62
#: ../../../about/emulation.rst:63 ../../../about/emulation.rst:67
#: ../../../about/emulation.rst:71 ../../../about/emulation.rst:75
#: ../../../about/emulation.rst:83 ../../../about/emulation.rst:86
#: ../../../about/emulation.rst:87 ../../../about/emulation.rst:91
#: ../../../about/emulation.rst:94 ../../../about/emulation.rst:99
msgid "Yes"
msgstr ""

#: ../../../about/emulation.rst:20
msgid "Legacy 64 bit RISC ISA developed by DEC"
msgstr ""

#: ../../../about/emulation.rst:21
msgid "Arm (arm, aarch64)"
msgstr ""

#: ../../../about/emulation.rst:22
msgid ":ref:`Yes<ARM-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:24
msgid "Wide range of features, see :ref:`Arm Emulation` for details"
msgstr ""

#: ../../../about/emulation.rst:25
msgid "AVR"
msgstr ""

#: ../../../about/emulation.rst:26
msgid ":ref:`Yes<AVR-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:27 ../../../about/emulation.rst:34
#: ../../../about/emulation.rst:79 ../../../about/emulation.rst:95
msgid "No"
msgstr ""

#: ../../../about/emulation.rst:28
msgid "8 bit micro controller, often used in maker projects"
msgstr ""

#: ../../../about/emulation.rst:29
msgid "Cris"
msgstr ""

#: ../../../about/emulation.rst:32
msgid "Embedded RISC chip developed by AXIS"
msgstr ""

#: ../../../about/emulation.rst:33
msgid "Hexagon"
msgstr ""

#: ../../../about/emulation.rst:36
msgid "Family of DSPs by Qualcomm"
msgstr ""

#: ../../../about/emulation.rst:37
msgid "PA-RISC (hppa)"
msgstr ""

#: ../../../about/emulation.rst:40
msgid "A legacy RISC system used in HP's old minicomputers"
msgstr ""

#: ../../../about/emulation.rst:41
msgid "x86 (i386, x86_64)"
msgstr ""

#: ../../../about/emulation.rst:42
msgid ":ref:`Yes<QEMU-PC-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:44
msgid "The ubiquitous desktop PC CPU architecture, 32 and 64 bit."
msgstr ""

#: ../../../about/emulation.rst:45
msgid "Loongarch"
msgstr ""

#: ../../../about/emulation.rst:48
msgid "A MIPS-like 64bit RISC architecture developed in China"
msgstr ""

#: ../../../about/emulation.rst:49 ../../../about/emulation.rst:176
msgid "m68k"
msgstr ""

#: ../../../about/emulation.rst:50
msgid ":ref:`Yes<ColdFire-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:52
msgid "Motorola 68000 variants and ColdFire"
msgstr ""

#: ../../../about/emulation.rst:53
msgid "Microblaze"
msgstr ""

#: ../../../about/emulation.rst:56
msgid "RISC based soft-core by Xilinx"
msgstr ""

#: ../../../about/emulation.rst:57
msgid "MIPS (mips*)"
msgstr ""

#: ../../../about/emulation.rst:58
msgid ":ref:`Yes<MIPS-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:60
msgid "Venerable RISC architecture originally out of Stanford University"
msgstr ""

#: ../../../about/emulation.rst:61
msgid "Nios2"
msgstr ""

#: ../../../about/emulation.rst:64
msgid "32 bit embedded soft-core by Altera"
msgstr ""

#: ../../../about/emulation.rst:65
msgid "OpenRISC"
msgstr ""

#: ../../../about/emulation.rst:66
msgid ":ref:`Yes<OpenRISC-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:68
msgid "Open source RISC architecture developed by the OpenRISC community"
msgstr ""

#: ../../../about/emulation.rst:69
msgid "Power (ppc, ppc64)"
msgstr ""

#: ../../../about/emulation.rst:70
msgid ":ref:`Yes<PowerPC-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:72
msgid "A general purpose RISC architecture now managed by IBM"
msgstr ""

#: ../../../about/emulation.rst:73 ../../../about/emulation.rst:185
msgid "RISC-V"
msgstr ""

#: ../../../about/emulation.rst:74
msgid ":ref:`Yes<RISC-V-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:76
msgid "An open standard RISC ISA maintained by RISC-V International"
msgstr ""

#: ../../../about/emulation.rst:77
msgid "RX"
msgstr ""

#: ../../../about/emulation.rst:78
msgid ":ref:`Yes<RX-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:80
msgid "A 32 bit micro controller developed by Renesas"
msgstr ""

#: ../../../about/emulation.rst:81
msgid "s390x"
msgstr ""

#: ../../../about/emulation.rst:82
msgid ":ref:`Yes<s390x-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:84
msgid "A 64 bit CPU found in IBM's System Z mainframes"
msgstr ""

#: ../../../about/emulation.rst:85
msgid "sh4"
msgstr ""

#: ../../../about/emulation.rst:88
msgid "A 32 bit RISC embedded CPU developed by Hitachi"
msgstr ""

#: ../../../about/emulation.rst:89
msgid "SPARC (sparc, sparc64)"
msgstr ""

#: ../../../about/emulation.rst:90
msgid ":ref:`Yes<Sparc32-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:92
msgid "A RISC ISA originally developed by Sun Microsystems"
msgstr ""

#: ../../../about/emulation.rst:93
msgid "Tricore"
msgstr ""

#: ../../../about/emulation.rst:96
msgid "A 32 bit RISC/uController/DSP developed by Infineon"
msgstr ""

#: ../../../about/emulation.rst:97 ../../../about/emulation.rst:188
msgid "Xtensa"
msgstr ""

#: ../../../about/emulation.rst:98
msgid ":ref:`Yes<Xtensa-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:100
msgid "A configurable 32 bit soft core now owned by Cadence"
msgstr ""

#: ../../../about/emulation.rst:102
msgid ""
"A number of features are only available when running under emulation "
"including :ref:`Record/Replay<replay>` and :ref:`TCG Plugins`."
msgstr ""

#: ../../../about/emulation.rst:108
msgid "Semihosting"
msgstr ""

#: ../../../about/emulation.rst:110
msgid ""
"Semihosting is a feature defined by the owner of the architecture to allow "
"programs to interact with a debugging host system. On real hardware this is "
"usually provided by an In-circuit emulator (ICE) hooked directly to the "
"board. QEMU's implementation allows for semihosting calls to be passed to "
"the host system or via the ``gdbstub``."
msgstr ""

#: ../../../about/emulation.rst:117
msgid ""
"Generally semihosting makes it easier to bring up low level code before a "
"more fully functional operating system has been enabled. On QEMU it also "
"allows for embedded micro-controller code which typically doesn't have a "
"full libc to be run as \"bare-metal\" code under QEMU's user-mode emulation. "
"It is also useful for writing test cases and indeed a number of compiler "
"suites as well as QEMU itself use semihosting calls to exit test code while "
"reporting the success state."
msgstr ""

#: ../../../about/emulation.rst:125
msgid ""
"Semihosting is only available using TCG emulation. This is because the "
"instructions to trigger a semihosting call are typically reserved causing "
"most hypervisors to trap and fault on them."
msgstr ""

#: ../../../about/emulation.rst:130
msgid ""
"Semihosting inherently bypasses any isolation there may be between the guest "
"and the host. As a result a program using semihosting can happily trash your "
"host system. You should only ever run trusted code with semihosting enabled."
msgstr ""

#: ../../../about/emulation.rst:136
msgid "Redirection"
msgstr ""

#: ../../../about/emulation.rst:138
msgid ""
"Semihosting calls can be re-directed to a (potentially remote) gdb during "
"debugging via the :ref:`gdbstub<GDB usage>`. Output to the semihosting "
"console is configured as a ``chardev`` so can be redirected to a file, pipe "
"or socket like any other ``chardev`` device."
msgstr ""

#: ../../../about/emulation.rst:145
msgid "Supported Targets"
msgstr ""

#: ../../../about/emulation.rst:147
msgid ""
"Most targets offer similar semihosting implementations with some minor "
"changes to define the appropriate instruction to encode the semihosting call "
"and which registers hold the parameters. They tend to presents a simple "
"POSIX-like API which allows your program to read and write files, access the "
"console and some other basic interactions."
msgstr ""

#: ../../../about/emulation.rst:153
msgid ""
"For full details of the ABI for a particular target, and the set of calls it "
"provides, you should consult the semihosting specification for that "
"architecture."
msgstr ""

#: ../../../about/emulation.rst:158
msgid ""
"QEMU makes an implementation decision to implement all file access in "
"``O_BINARY`` mode. The user-visible effect of this is regardless of the text/"
"binary mode the program sets QEMU will always select a binary mode ensuring "
"no line-terminator conversion is performed on input or output. This is "
"because gdb semihosting support doesn't make the distinction between the "
"modes and magically processing line endings can be confusing."
msgstr ""

#: ../../../about/emulation.rst:166
msgid "Guest Architectures supporting Semihosting"
msgstr ""

#: ../../../about/emulation.rst:170
msgid "Architecture"
msgstr ""

#: ../../../about/emulation.rst:171
msgid "Modes"
msgstr ""

#: ../../../about/emulation.rst:172
msgid "Specification"
msgstr ""

#: ../../../about/emulation.rst:173
msgid "Arm"
msgstr ""

#: ../../../about/emulation.rst:174 ../../../about/emulation.rst:186
msgid "System and User-mode"
msgstr ""

#: ../../../about/emulation.rst:175
msgid ""
"https://github.com/ARM-software/abi-aa/blob/main/semihosting/semihosting.rst"
msgstr ""

#: ../../../about/emulation.rst:178
msgid ""
"https://sourceware.org/git/?p=newlib-cygwin.git;a=blob;f=libgloss/m68k/m68k-"
"semi.txt;hb=HEAD"
msgstr ""

#: ../../../about/emulation.rst:179
msgid "MIPS"
msgstr ""

#: ../../../about/emulation.rst:181
msgid "Unified Hosting Interface (MD01069)"
msgstr ""

#: ../../../about/emulation.rst:182
msgid "Nios II"
msgstr ""

#: ../../../about/emulation.rst:184
msgid ""
"https://sourceware.org/git/gitweb.cgi?p=newlib-cygwin.git;a=blob;f=libgloss/"
"nios2/nios2-semi.txt;hb=HEAD"
msgstr ""

#: ../../../about/emulation.rst:187
msgid ""
"https://github.com/riscv/riscv-semihosting-spec/blob/main/riscv-semihosting-"
"spec.adoc"
msgstr ""

#: ../../../about/emulation.rst:190
msgid "Tensilica ISS SIMCALL"
msgstr ""
