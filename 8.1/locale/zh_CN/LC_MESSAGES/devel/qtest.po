# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 8.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 10:01+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../devel/qtest.rst:3
msgid "QTest Device Emulation Testing Framework"
msgstr ""

#: ../../../devel/qtest.rst:9
msgid ""
"QTest is a device emulation testing framework.  It can be very useful to "
"test device models; it could also control certain aspects of QEMU (such as "
"virtual clock stepping), with a special purpose \"qtest\" protocol.  Refer "
"to :ref:`qtest-protocol` for more details of the protocol."
msgstr ""

#: ../../../devel/qtest.rst:14
msgid "QTest cases can be executed with"
msgstr ""

#: ../../../devel/qtest.rst:16
msgid "make check-qtest"
msgstr ""

#: ../../../devel/qtest.rst:20
msgid ""
"The QTest library is implemented by ``tests/qtest/libqtest.c`` and the API "
"is defined in ``tests/qtest/libqtest.h``."
msgstr ""

#: ../../../devel/qtest.rst:23
msgid ""
"Consider adding a new QTest case when you are introducing a new virtual "
"hardware, or extending one if you are adding functionalities to an existing "
"virtual device."
msgstr ""

#: ../../../devel/qtest.rst:27
msgid ""
"On top of libqtest, a higher level library, ``libqos``, was created to "
"encapsulate common tasks of device drivers, such as memory management and "
"communicating with system buses or devices. Many virtual device tests use "
"libqos instead of directly calling into libqtest. Libqos also offers the "
"Qgraph API to increase each test coverage and automate QEMU command line "
"arguments and devices setup. Refer to :ref:`qgraph` for Qgraph explanation "
"and API."
msgstr ""

#: ../../../devel/qtest.rst:35
msgid "Steps to add a new QTest case are:"
msgstr ""

#: ../../../devel/qtest.rst:37
msgid ""
"Create a new source file for the test. (More than one file can be added as "
"necessary.) For example, ``tests/qtest/foo-test.c``."
msgstr ""

#: ../../../devel/qtest.rst:40
msgid ""
"Write the test code with the glib and libqtest/libqos API. See also existing "
"tests and the library headers for reference."
msgstr ""

#: ../../../devel/qtest.rst:43
msgid ""
"Register the new test in ``tests/qtest/meson.build``. Add the test "
"executable name to an appropriate ``qtests_*`` variable. There is one "
"variable per architecture, plus ``qtests_generic`` for tests that can be run "
"for all architectures.  For example::"
msgstr ""

#: ../../../devel/qtest.rst:48
msgid ""
"qtests_generic = [\n"
"  ...\n"
"  'foo-test',\n"
"  ...\n"
"]"
msgstr ""

#: ../../../devel/qtest.rst:54
msgid ""
"If the test has more than one source file or needs to be linked with any "
"dependency other than ``qemuutil`` and ``qos``, list them in the ``qtests`` "
"dictionary.  For example a test that needs to use the ``QIO`` library will "
"have an entry like::"
msgstr ""

#: ../../../devel/qtest.rst:59
msgid ""
"{\n"
"  ...\n"
"  'foo-test': [io],\n"
"  ...\n"
"}"
msgstr ""

#: ../../../devel/qtest.rst:65
msgid ""
"Debugging a QTest failure is slightly harder than the unit test because the "
"tests look up QEMU program names in the environment variables, such as "
"``QTEST_QEMU_BINARY`` and ``QTEST_QEMU_IMG``, and also because it is not "
"easy to attach gdb to the QEMU process spawned from the test. But manual "
"invoking and using gdb on the test is still simple to do: find out the "
"actual command from the output of"
msgstr ""

#: ../../../devel/qtest.rst:72
msgid "make check-qtest V=1"
msgstr ""

#: ../../../devel/qtest.rst:76
msgid "which you can run manually."
msgstr ""

#: ../../../devel/qtest.rst:82
msgid "QTest Protocol"
msgstr ""

#: ../../../../softmmu/qtest.c:65
msgid ""
"Line based protocol, request/response based.  Server can send async messages "
"so clients should always handle many async messages before the response "
"comes in."
msgstr ""

#: ../../../../softmmu/qtest.c:75
msgid ""
"The qtest client is completely in charge of the QEMU_CLOCK_VIRTUAL.  qtest "
"commands let you adjust the value of the clock (monotonically).  All the "
"commands return the current value of the clock in nanoseconds."
msgstr ""

#: ../../../../softmmu/qtest.c:79
msgid ""
"> clock_step\n"
"< OK VALUE"
msgstr ""

#: ../../../../softmmu/qtest.c:84
msgid ""
"Advance the clock to the next deadline.  Useful when waiting for "
"asynchronous events."
msgstr ""

#: ../../../../softmmu/qtest.c:87
msgid ""
"> clock_step NS\n"
"< OK VALUE"
msgstr ""

#: ../../../../softmmu/qtest.c:92
msgid "Advance the clock by NS nanoseconds."
msgstr ""

#: ../../../../softmmu/qtest.c:94
msgid ""
"> clock_set NS\n"
"< OK VALUE"
msgstr ""

#: ../../../../softmmu/qtest.c:99
msgid "Advance the clock to NS nanoseconds (do nothing if it's already past)."
msgstr ""

#: ../../../../softmmu/qtest.c:104
msgid ""
"> outb ADDR VALUE\n"
"< OK"
msgstr ""

#: ../../../../softmmu/qtest.c:109
msgid ""
"> outw ADDR VALUE\n"
"< OK"
msgstr ""

#: ../../../../softmmu/qtest.c:114
msgid ""
"> outl ADDR VALUE\n"
"< OK"
msgstr ""

#: ../../../../softmmu/qtest.c:119
msgid ""
"> inb ADDR\n"
"< OK VALUE"
msgstr ""

#: ../../../../softmmu/qtest.c:124
msgid ""
"> inw ADDR\n"
"< OK VALUE"
msgstr ""

#: ../../../../softmmu/qtest.c:129
msgid ""
"> inl ADDR\n"
"< OK VALUE"
msgstr ""

#: ../../../../softmmu/qtest.c:134
msgid ""
"> writeb ADDR VALUE\n"
"< OK"
msgstr ""

#: ../../../../softmmu/qtest.c:139
msgid ""
"> writew ADDR VALUE\n"
"< OK"
msgstr ""

#: ../../../../softmmu/qtest.c:144
msgid ""
"> writel ADDR VALUE\n"
"< OK"
msgstr ""

#: ../../../../softmmu/qtest.c:149
msgid ""
"> writeq ADDR VALUE\n"
"< OK"
msgstr ""

#: ../../../../softmmu/qtest.c:154
msgid ""
"> readb ADDR\n"
"< OK VALUE"
msgstr ""

#: ../../../../softmmu/qtest.c:159
msgid ""
"> readw ADDR\n"
"< OK VALUE"
msgstr ""

#: ../../../../softmmu/qtest.c:164
msgid ""
"> readl ADDR\n"
"< OK VALUE"
msgstr ""

#: ../../../../softmmu/qtest.c:169
msgid ""
"> readq ADDR\n"
"< OK VALUE"
msgstr ""

#: ../../../../softmmu/qtest.c:174
msgid ""
"> read ADDR SIZE\n"
"< OK DATA"
msgstr ""

#: ../../../../softmmu/qtest.c:179
msgid ""
"> write ADDR SIZE DATA\n"
"< OK"
msgstr ""

#: ../../../../softmmu/qtest.c:184
msgid ""
"> b64read ADDR SIZE\n"
"< OK B64_DATA"
msgstr ""

#: ../../../../softmmu/qtest.c:189
msgid ""
"> b64write ADDR SIZE B64_DATA\n"
"< OK"
msgstr ""

#: ../../../../softmmu/qtest.c:194
msgid ""
"> memset ADDR SIZE VALUE\n"
"< OK"
msgstr ""

#: ../../../../softmmu/qtest.c:199
msgid ""
"ADDR, SIZE, VALUE are all integers parsed with strtoul() with a base of 0. "
"For 'memset' a zero size is permitted and does nothing."
msgstr ""

#: ../../../../softmmu/qtest.c:202
msgid ""
"DATA is an arbitrarily long hex number prefixed with '0x'.  If it's smaller "
"than the expected size, the value will be zero filled at the end of the data "
"sequence."
msgstr ""

#: ../../../../softmmu/qtest.c:206
msgid ""
"B64_DATA is an arbitrarily long base64 encoded string. If the sizes do not "
"match, the data will be truncated."
msgstr ""

#: ../../../../softmmu/qtest.c:212
msgid ""
"> irq_intercept_in QOM-PATH\n"
"< OK"
msgstr ""

#: ../../../../softmmu/qtest.c:217
msgid ""
"> irq_intercept_out QOM-PATH\n"
"< OK"
msgstr ""

#: ../../../../softmmu/qtest.c:222
msgid ""
"Attach to the gpio-in (resp. gpio-out) pins exported by the device at QOM-"
"PATH.  When the pin is triggered, one of the following async messages will "
"be printed to the qtest stream::"
msgstr ""

#: ../../../../softmmu/qtest.c:226
msgid ""
"IRQ raise NUM\n"
"IRQ lower NUM"
msgstr ""

#: ../../../../softmmu/qtest.c:229
msgid ""
"where NUM is an IRQ number.  For the PC, interrupts can be intercepted "
"simply with \"irq_intercept_in ioapic\" (note that IRQ0 comes out with NUM=0 "
"even though it is remapped to GSI 2)."
msgstr ""

#: ../../../../softmmu/qtest.c:236
msgid ""
"> set_irq_in QOM-PATH NAME NUM LEVEL\n"
"< OK"
msgstr ""

#: ../../../../softmmu/qtest.c:241
msgid ""
"where NAME is the name of the irq/gpio list, NUM is an IRQ number and LEVEL "
"is an signed integer IRQ level."
msgstr ""

#: ../../../../softmmu/qtest.c:244
msgid "Forcibly set the given interrupt pin to the given level."
msgstr ""

#: ../../../devel/qtest.rst:89
msgid "libqtest API reference"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:28 ../../../../tests/qtest/libqtest.h:39
#: ../../../../tests/qtest/libqtest.h:51 ../../../../tests/qtest/libqtest.h:60
#: ../../../../tests/qtest/libqtest.h:69 ../../../../tests/qtest/libqtest.h:80
#: ../../../../tests/qtest/libqtest.h:89 ../../../../tests/qtest/libqtest.h:100
#: ../../../../tests/qtest/libqtest.h:109
#: ../../../../tests/qtest/libqtest.h:125
#: ../../../../tests/qtest/libqtest.h:137
#: ../../../../tests/qtest/libqtest.h:149
#: ../../../../tests/qtest/libqtest.h:160
#: ../../../../tests/qtest/libqtest.h:169
#: ../../../../tests/qtest/libqtest.h:186
#: ../../../../tests/qtest/libqtest.h:200
#: ../../../../tests/qtest/libqtest.h:217
#: ../../../../tests/qtest/libqtest.h:230
#: ../../../../tests/qtest/libqtest.h:238
#: ../../../../tests/qtest/libqtest.h:269
#: ../../../../tests/qtest/libqtest.h:280
#: ../../../../tests/qtest/libqtest.h:292
#: ../../../../tests/qtest/libqtest.h:306
#: ../../../../tests/qtest/libqtest.h:319
#: ../../../../tests/qtest/libqtest.h:331
#: ../../../../tests/qtest/libqtest.h:347
#: ../../../../tests/qtest/libqtest.h:356
#: ../../../../tests/qtest/libqtest.h:366
#: ../../../../tests/qtest/libqtest.h:376
#: ../../../../tests/qtest/libqtest.h:389
#: ../../../../tests/qtest/libqtest.h:399
#: ../../../../tests/qtest/libqtest.h:409
#: ../../../../tests/qtest/libqtest.h:419
#: ../../../../tests/qtest/libqtest.h:428
#: ../../../../tests/qtest/libqtest.h:437
#: ../../../../tests/qtest/libqtest.h:446
#: ../../../../tests/qtest/libqtest.h:456
#: ../../../../tests/qtest/libqtest.h:466
#: ../../../../tests/qtest/libqtest.h:476
#: ../../../../tests/qtest/libqtest.h:486
#: ../../../../tests/qtest/libqtest.h:497
#: ../../../../tests/qtest/libqtest.h:508
#: ../../../../tests/qtest/libqtest.h:519
#: ../../../../tests/qtest/libqtest.h:530
#: ../../../../tests/qtest/libqtest.h:541
#: ../../../../tests/qtest/libqtest.h:556
#: ../../../../tests/qtest/libqtest.h:567
#: ../../../../tests/qtest/libqtest.h:578
#: ../../../../tests/qtest/libqtest.h:590
#: ../../../../tests/qtest/libqtest.h:601
#: ../../../../tests/qtest/libqtest.h:611
#: ../../../../tests/qtest/libqtest.h:622
#: ../../../../tests/qtest/libqtest.h:633
#: ../../../../tests/qtest/libqtest.h:641
#: ../../../../tests/qtest/libqtest.h:648
#: ../../../../tests/qtest/libqtest.h:656
#: ../../../../tests/qtest/libqtest.h:667
#: ../../../../tests/qtest/libqtest.h:680
#: ../../../../tests/qtest/libqtest.h:697
#: ../../../../tests/qtest/libqtest.h:717
#: ../../../../tests/qtest/libqtest.h:728
#: ../../../../tests/qtest/libqtest.h:737
#: ../../../../tests/qtest/libqtest.h:752
#: ../../../../tests/qtest/libqtest.h:768
#: ../../../../tests/qtest/libqtest.h:786
#: ../../../../tests/qtest/libqtest.h:804
#: ../../../../tests/qtest/libqtest.h:817
#: ../../../../tests/qtest/libqtest.h:831
#: ../../../../tests/qtest/libqtest.h:848
#: ../../../../tests/qtest/libqtest.h:865
#: ../../../../tests/qtest/libqtest.h:875
#: ../../../../tests/qtest/libqtest.h:883
#: ../../../../tests/qtest/libqtest.h:891
#: ../../../../tests/qtest/libqtest.h:903
#: ../../../../tests/qtest/libqtest.h:917
#: ../../../../tests/qtest/libqtest.h:928
#: ../../../../tests/qtest/libqtest.h:937
#: ../../../../tests/qtest/libqtest.h:947
#: ../../../../tests/qtest/libqtest.h:955
#: ../../../../tests/qtest/libqtest.h:969
#: ../../../../tests/qtest/libqtest.h:981
#: ../../../../tests/qtest/libqtest.h:991
#: ../../../../tests/qtest/libqtest.h:999
#: ../../../../tests/qtest/libqtest.h:1006
msgid "**Parameters**"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:30 ../../../../tests/qtest/libqtest.h:41
#: ../../../../tests/qtest/libqtest.h:113
#: ../../../../tests/qtest/libqtest.h:127
#: ../../../../tests/qtest/libqtest.h:139
#: ../../../../tests/qtest/libqtest.h:151
#: ../../../../tests/qtest/libqtest.h:173
#: ../../../../tests/qtest/libqtest.h:188
#: ../../../../tests/qtest/libqtest.h:204
#: ../../../../tests/qtest/libqtest.h:219
#: ../../../../tests/qtest/libqtest.h:321
#: ../../../../tests/qtest/libqtest.h:333
#: ../../../../tests/qtest/libqtest.h:739
#: ../../../../tests/qtest/libqtest.h:754
#: ../../../../tests/qtest/libqtest.h:772
#: ../../../../tests/qtest/libqtest.h:790
#: ../../../../tests/qtest/libqtest.h:806
#: ../../../../tests/qtest/libqtest.h:819
#: ../../../../tests/qtest/libqtest.h:835
#: ../../../../tests/qtest/libqtest.h:852
#: ../../../../tests/qtest/libqtest.h:907
#: ../../../../tests/qtest/libqtest.h:1008
msgid "``const char *fmt``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:28
msgid ""
"Format for creating other arguments to pass to QEMU, formatted like "
"sprintf()."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:31 ../../../../tests/qtest/libqtest.h:116
#: ../../../../tests/qtest/libqtest.h:130
#: ../../../../tests/qtest/libqtest.h:142
#: ../../../../tests/qtest/libqtest.h:152
#: ../../../../tests/qtest/libqtest.h:322
#: ../../../../tests/qtest/libqtest.h:809
#: ../../../../tests/qtest/libqtest.h:822
#: ../../../../tests/qtest/libqtest.h:838
#: ../../../../tests/qtest/libqtest.h:855
#: ../../../../tests/qtest/libqtest.h:910
msgid "``...``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:32 ../../../../tests/qtest/libqtest.h:117
#: ../../../../tests/qtest/libqtest.h:131
#: ../../../../tests/qtest/libqtest.h:143
#: ../../../../tests/qtest/libqtest.h:153
#: ../../../../tests/qtest/libqtest.h:323
#: ../../../../tests/qtest/libqtest.h:810
#: ../../../../tests/qtest/libqtest.h:823
#: ../../../../tests/qtest/libqtest.h:839
#: ../../../../tests/qtest/libqtest.h:856
#: ../../../../tests/qtest/libqtest.h:911
msgid "variable arguments"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:34 ../../../../tests/qtest/libqtest.h:43
#: ../../../../tests/qtest/libqtest.h:82 ../../../../tests/qtest/libqtest.h:91
#: ../../../../tests/qtest/libqtest.h:102
#: ../../../../tests/qtest/libqtest.h:119
#: ../../../../tests/qtest/libqtest.h:133
#: ../../../../tests/qtest/libqtest.h:145
#: ../../../../tests/qtest/libqtest.h:155
#: ../../../../tests/qtest/libqtest.h:162
#: ../../../../tests/qtest/libqtest.h:177
#: ../../../../tests/qtest/libqtest.h:192
#: ../../../../tests/qtest/libqtest.h:208
#: ../../../../tests/qtest/libqtest.h:223
#: ../../../../tests/qtest/libqtest.h:232
#: ../../../../tests/qtest/libqtest.h:240
#: ../../../../tests/qtest/libqtest.h:273
#: ../../../../tests/qtest/libqtest.h:283
#: ../../../../tests/qtest/libqtest.h:295
#: ../../../../tests/qtest/libqtest.h:309
#: ../../../../tests/qtest/libqtest.h:325
#: ../../../../tests/qtest/libqtest.h:335
#: ../../../../tests/qtest/libqtest.h:359
#: ../../../../tests/qtest/libqtest.h:369
#: ../../../../tests/qtest/libqtest.h:382
#: ../../../../tests/qtest/libqtest.h:393
#: ../../../../tests/qtest/libqtest.h:403
#: ../../../../tests/qtest/libqtest.h:413
#: ../../../../tests/qtest/libqtest.h:422
#: ../../../../tests/qtest/libqtest.h:431
#: ../../../../tests/qtest/libqtest.h:440
#: ../../../../tests/qtest/libqtest.h:450
#: ../../../../tests/qtest/libqtest.h:460
#: ../../../../tests/qtest/libqtest.h:470
#: ../../../../tests/qtest/libqtest.h:480
#: ../../../../tests/qtest/libqtest.h:489
#: ../../../../tests/qtest/libqtest.h:500
#: ../../../../tests/qtest/libqtest.h:511
#: ../../../../tests/qtest/libqtest.h:522
#: ../../../../tests/qtest/libqtest.h:535
#: ../../../../tests/qtest/libqtest.h:548
#: ../../../../tests/qtest/libqtest.h:561
#: ../../../../tests/qtest/libqtest.h:572
#: ../../../../tests/qtest/libqtest.h:583
#: ../../../../tests/qtest/libqtest.h:595
#: ../../../../tests/qtest/libqtest.h:603
#: ../../../../tests/qtest/libqtest.h:614
#: ../../../../tests/qtest/libqtest.h:625
#: ../../../../tests/qtest/libqtest.h:659
#: ../../../../tests/qtest/libqtest.h:671
#: ../../../../tests/qtest/libqtest.h:685
#: ../../../../tests/qtest/libqtest.h:704
#: ../../../../tests/qtest/libqtest.h:720
#: ../../../../tests/qtest/libqtest.h:730
#: ../../../../tests/qtest/libqtest.h:743
#: ../../../../tests/qtest/libqtest.h:758
#: ../../../../tests/qtest/libqtest.h:776
#: ../../../../tests/qtest/libqtest.h:794
#: ../../../../tests/qtest/libqtest.h:812
#: ../../../../tests/qtest/libqtest.h:825
#: ../../../../tests/qtest/libqtest.h:841
#: ../../../../tests/qtest/libqtest.h:858
#: ../../../../tests/qtest/libqtest.h:895
#: ../../../../tests/qtest/libqtest.h:913
#: ../../../../tests/qtest/libqtest.h:921
#: ../../../../tests/qtest/libqtest.h:931
#: ../../../../tests/qtest/libqtest.h:940
#: ../../../../tests/qtest/libqtest.h:958
#: ../../../../tests/qtest/libqtest.h:974
#: ../../../../tests/qtest/libqtest.h:1010
msgid "**Description**"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:31 ../../../../tests/qtest/libqtest.h:43
msgid "Convenience wrapper around qtest_init()."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:33 ../../../../tests/qtest/libqtest.h:45
#: ../../../../tests/qtest/libqtest.h:54 ../../../../tests/qtest/libqtest.h:63
#: ../../../../tests/qtest/libqtest.h:74 ../../../../tests/qtest/libqtest.h:325
#: ../../../../tests/qtest/libqtest.h:338
#: ../../../../tests/qtest/libqtest.h:350
#: ../../../../tests/qtest/libqtest.h:491
#: ../../../../tests/qtest/libqtest.h:502
#: ../../../../tests/qtest/libqtest.h:513
#: ../../../../tests/qtest/libqtest.h:524
#: ../../../../tests/qtest/libqtest.h:605
#: ../../../../tests/qtest/libqtest.h:616
#: ../../../../tests/qtest/libqtest.h:627
#: ../../../../tests/qtest/libqtest.h:635
#: ../../../../tests/qtest/libqtest.h:646
#: ../../../../tests/qtest/libqtest.h:650
#: ../../../../tests/qtest/libqtest.h:877
#: ../../../../tests/qtest/libqtest.h:885
#: ../../../../tests/qtest/libqtest.h:949
#: ../../../../tests/qtest/libqtest.h:985
#: ../../../../tests/qtest/libqtest.h:993
#: ../../../../tests/qtest/libqtest.h:1004
#: ../../../../tests/qtest/libqtest.h:1013
msgid "**Return**"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:33 ../../../../tests/qtest/libqtest.h:45
#: ../../../../tests/qtest/libqtest.h:54 ../../../../tests/qtest/libqtest.h:63
#: ../../../../tests/qtest/libqtest.h:74
msgid ":c:type:`QTestState <QTestState>` instance."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:39
msgid ""
"Format for creating other arguments to pass to QEMU, formatted like "
"vsprintf()."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:42 ../../../../tests/qtest/libqtest.h:176
#: ../../../../tests/qtest/libqtest.h:191
#: ../../../../tests/qtest/libqtest.h:207
#: ../../../../tests/qtest/libqtest.h:222
#: ../../../../tests/qtest/libqtest.h:334
msgid "``va_list ap``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:41
msgid "Format arguments."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:53 ../../../../tests/qtest/libqtest.h:62
#: ../../../../tests/qtest/libqtest.h:71
msgid "``const char *extra_args``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:51 ../../../../tests/qtest/libqtest.h:60
#: ../../../../tests/qtest/libqtest.h:69
msgid ""
"other arguments to pass to QEMU.  CAUTION: these arguments are subject to "
"word splitting and shell evaluation."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:72
msgid "``int *sock_fd``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:71
msgid "pointer to store the socket file descriptor for connection with serial."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:82 ../../../../tests/qtest/libqtest.h:91
#: ../../../../tests/qtest/libqtest.h:102
#: ../../../../tests/qtest/libqtest.h:111
#: ../../../../tests/qtest/libqtest.h:127
#: ../../../../tests/qtest/libqtest.h:139
#: ../../../../tests/qtest/libqtest.h:151
#: ../../../../tests/qtest/libqtest.h:171
#: ../../../../tests/qtest/libqtest.h:188
#: ../../../../tests/qtest/libqtest.h:202
#: ../../../../tests/qtest/libqtest.h:219
#: ../../../../tests/qtest/libqtest.h:232
#: ../../../../tests/qtest/libqtest.h:240
#: ../../../../tests/qtest/libqtest.h:271
#: ../../../../tests/qtest/libqtest.h:282
#: ../../../../tests/qtest/libqtest.h:294
#: ../../../../tests/qtest/libqtest.h:308
#: ../../../../tests/qtest/libqtest.h:321
#: ../../../../tests/qtest/libqtest.h:333
#: ../../../../tests/qtest/libqtest.h:349
#: ../../../../tests/qtest/libqtest.h:358
#: ../../../../tests/qtest/libqtest.h:368
#: ../../../../tests/qtest/libqtest.h:378
#: ../../../../tests/qtest/libqtest.h:391
#: ../../../../tests/qtest/libqtest.h:401
#: ../../../../tests/qtest/libqtest.h:411
#: ../../../../tests/qtest/libqtest.h:421
#: ../../../../tests/qtest/libqtest.h:430
#: ../../../../tests/qtest/libqtest.h:439
#: ../../../../tests/qtest/libqtest.h:448
#: ../../../../tests/qtest/libqtest.h:458
#: ../../../../tests/qtest/libqtest.h:468
#: ../../../../tests/qtest/libqtest.h:478
#: ../../../../tests/qtest/libqtest.h:488
#: ../../../../tests/qtest/libqtest.h:499
#: ../../../../tests/qtest/libqtest.h:510
#: ../../../../tests/qtest/libqtest.h:521
#: ../../../../tests/qtest/libqtest.h:532
#: ../../../../tests/qtest/libqtest.h:543
#: ../../../../tests/qtest/libqtest.h:558
#: ../../../../tests/qtest/libqtest.h:569
#: ../../../../tests/qtest/libqtest.h:580
#: ../../../../tests/qtest/libqtest.h:592
#: ../../../../tests/qtest/libqtest.h:603
#: ../../../../tests/qtest/libqtest.h:613
#: ../../../../tests/qtest/libqtest.h:624
#: ../../../../tests/qtest/libqtest.h:635
#: ../../../../tests/qtest/libqtest.h:949
#: ../../../../tests/qtest/libqtest.h:957
#: ../../../../tests/qtest/libqtest.h:971
#: ../../../../tests/qtest/libqtest.h:983
#: ../../../../tests/qtest/libqtest.h:993
msgid "``QTestState *s``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:80 ../../../../tests/qtest/libqtest.h:89
#: ../../../../tests/qtest/libqtest.h:100
#: ../../../../tests/qtest/libqtest.h:109
#: ../../../../tests/qtest/libqtest.h:125
#: ../../../../tests/qtest/libqtest.h:137
#: ../../../../tests/qtest/libqtest.h:149
#: ../../../../tests/qtest/libqtest.h:169
#: ../../../../tests/qtest/libqtest.h:186
#: ../../../../tests/qtest/libqtest.h:200
#: ../../../../tests/qtest/libqtest.h:217
#: ../../../../tests/qtest/libqtest.h:230
#: ../../../../tests/qtest/libqtest.h:238
#: ../../../../tests/qtest/libqtest.h:280
#: ../../../../tests/qtest/libqtest.h:292
#: ../../../../tests/qtest/libqtest.h:306
#: ../../../../tests/qtest/libqtest.h:319
#: ../../../../tests/qtest/libqtest.h:331
#: ../../../../tests/qtest/libqtest.h:347
#: ../../../../tests/qtest/libqtest.h:356
#: ../../../../tests/qtest/libqtest.h:366
#: ../../../../tests/qtest/libqtest.h:389
#: ../../../../tests/qtest/libqtest.h:399
#: ../../../../tests/qtest/libqtest.h:409
#: ../../../../tests/qtest/libqtest.h:419
#: ../../../../tests/qtest/libqtest.h:428
#: ../../../../tests/qtest/libqtest.h:437
#: ../../../../tests/qtest/libqtest.h:446
#: ../../../../tests/qtest/libqtest.h:456
#: ../../../../tests/qtest/libqtest.h:466
#: ../../../../tests/qtest/libqtest.h:476
#: ../../../../tests/qtest/libqtest.h:486
#: ../../../../tests/qtest/libqtest.h:497
#: ../../../../tests/qtest/libqtest.h:508
#: ../../../../tests/qtest/libqtest.h:519
#: ../../../../tests/qtest/libqtest.h:530
#: ../../../../tests/qtest/libqtest.h:541
#: ../../../../tests/qtest/libqtest.h:556
#: ../../../../tests/qtest/libqtest.h:567
#: ../../../../tests/qtest/libqtest.h:578
#: ../../../../tests/qtest/libqtest.h:590
#: ../../../../tests/qtest/libqtest.h:601
msgid ":c:type:`QTestState <QTestState>` instance to operate on."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:82
msgid ""
"Wait for the QEMU process to terminate. It is safe to call this function "
"multiple times."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:91
msgid ""
"Kill the QEMU process and wait for it to terminate. It is safe to call this "
"function multiple times. Normally qtest_quit() is used instead because it "
"also frees QTestState. Use qtest_kill_qemu() when you just want to kill QEMU "
"and qtest_quit() will be called later."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:102
msgid "Shut down the QEMU process associated to **s**."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:111
#: ../../../../tests/qtest/libqtest.h:171
#: ../../../../tests/qtest/libqtest.h:202
#: ../../../../tests/qtest/libqtest.h:770
#: ../../../../tests/qtest/libqtest.h:788
#: ../../../../tests/qtest/libqtest.h:833
#: ../../../../tests/qtest/libqtest.h:850
msgid "``int *fds``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:110
#: ../../../../tests/qtest/libqtest.h:170
#: ../../../../tests/qtest/libqtest.h:201
msgid "array of file descriptors"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:112
#: ../../../../tests/qtest/libqtest.h:172
#: ../../../../tests/qtest/libqtest.h:203
msgid "``size_t fds_num``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:111
#: ../../../../tests/qtest/libqtest.h:171
#: ../../../../tests/qtest/libqtest.h:202
msgid "number of elements in **fds**"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:112
#: ../../../../tests/qtest/libqtest.h:126
#: ../../../../tests/qtest/libqtest.h:138
#: ../../../../tests/qtest/libqtest.h:738
#: ../../../../tests/qtest/libqtest.h:753
#: ../../../../tests/qtest/libqtest.h:771
#: ../../../../tests/qtest/libqtest.h:789
#: ../../../../tests/qtest/libqtest.h:805
#: ../../../../tests/qtest/libqtest.h:818
#: ../../../../tests/qtest/libqtest.h:834
#: ../../../../tests/qtest/libqtest.h:851
#: ../../../../tests/qtest/libqtest.h:906
msgid ""
"QMP message to send to qemu, formatted like qobject_from_jsonf_nofail().  "
"See parse_interpolation() for what's supported after '%'."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:116
#: ../../../../tests/qtest/libqtest.h:177
msgid "Sends a QMP message to QEMU with fds and returns the response."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:130
#: ../../../../tests/qtest/libqtest.h:192
msgid "Sends a QMP message to QEMU and returns the response."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:142
#: ../../../../tests/qtest/libqtest.h:208
#: ../../../../tests/qtest/libqtest.h:223
msgid "Sends a QMP message to QEMU and leaves the response in the stream."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:150
msgid "text to send, formatted like sprintf()"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:152
msgid ""
"Sends text to the QMP monitor verbatim.  Need not be valid JSON; this is "
"useful for negative tests."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:162
msgid "``const char *socket_path``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:160
msgid "the UNIX domain socket path"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:162
msgid "Create and return a listen socket file descriptor, or abort on failure."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:172
#: ../../../../tests/qtest/libqtest.h:187
#: ../../../../tests/qtest/libqtest.h:203
#: ../../../../tests/qtest/libqtest.h:218
msgid ""
"QMP message to send to QEMU, formatted like qobject_from_jsonf_nofail().  "
"See parse_interpolation() for what's supported after '%'."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:175
#: ../../../../tests/qtest/libqtest.h:190
#: ../../../../tests/qtest/libqtest.h:206
#: ../../../../tests/qtest/libqtest.h:221
msgid "QMP message arguments"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:232
#: ../../../../tests/qtest/libqtest.h:240
msgid "Reads a QMP message from QEMU and returns the response."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:242
msgid ""
"If a callback is registered with qtest_qmp_set_event_callback, it will be "
"invoked for every event seen, otherwise events will be buffered until a call "
"to one of the qtest_qmp_eventwait family of functions."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:269
msgid ":c:type:`QTestSTate <QTestSTate>` instance to operate on"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:271
msgid "``QTestQMPEventCallback cb``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:270
msgid "callback to invoke for events"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:272
msgid "``void *opaque``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:271
msgid "data to pass to **cb**"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:273
msgid "Register a callback to be invoked whenever an event arrives"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:282
#: ../../../../tests/qtest/libqtest.h:294
#: ../../../../tests/qtest/libqtest.h:308
msgid "``const char *event``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:281
#: ../../../../tests/qtest/libqtest.h:293
msgid "event to wait for."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:283
#: ../../../../tests/qtest/libqtest.h:295
msgid ""
"Continuously polls for QMP responses until it receives the desired event."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:285
#: ../../../../tests/qtest/libqtest.h:297
msgid ""
"Any callback registered with qtest_qmp_set_event_callback will be invoked "
"for every event seen."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:300
msgid "Returns a copy of the event for further investigation."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:307
msgid "event to return."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:309
msgid ""
"Removes non-matching events from the buffer that was set by "
"qtest_qmp_receive, until an event bearing the given name is found, and "
"returns it. If no event matches, clears the buffer and returns NULL."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:320
msgid "HMP command to send to QEMU, formats arguments like sprintf()."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:322
#: ../../../../tests/qtest/libqtest.h:335
msgid ""
"Send HMP command to QEMU via QMP's human-monitor-command. QMP events are "
"discarded."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:325
#: ../../../../tests/qtest/libqtest.h:338
msgid "the command's output.  The caller should g_free() it."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:332
msgid "HMP command to send to QEMU, formats arguments like vsprintf()."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:333
msgid "HMP command arguments"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:349
msgid "``int num``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:348
msgid "Interrupt to observe."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:350
msgid "The level of the **num** interrupt."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:358
#: ../../../../tests/qtest/libqtest.h:368
#: ../../../../tests/qtest/libqtest.h:378
msgid "``const char *string``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:357
#: ../../../../tests/qtest/libqtest.h:367
msgid "QOM path of a device."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:359
msgid ""
"Associate qtest irqs with the GPIO-in pins of the device whose path is "
"specified by **string**."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:369
msgid ""
"Associate qtest irqs with the GPIO-out pins of the device whose path is "
"specified by **string**."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:376
#: ../../../../tests/qtest/libqtest.h:611
#: ../../../../tests/qtest/libqtest.h:622
#: ../../../../tests/qtest/libqtest.h:633
#: ../../../../tests/qtest/libqtest.h:947
#: ../../../../tests/qtest/libqtest.h:955
#: ../../../../tests/qtest/libqtest.h:969
#: ../../../../tests/qtest/libqtest.h:981
#: ../../../../tests/qtest/libqtest.h:991
msgid "QTestState instance to operate on."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:377
msgid "QOM path of a device"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:379
#: ../../../../tests/qtest/libqtest.h:543
msgid "``const char *name``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:378
msgid "IRQ name"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:380
msgid "``int irq``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:379
msgid "IRQ number"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:381
msgid "``int level``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:380
msgid "IRQ level"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:382
msgid "Force given device/irq GPIO-in pin to the given level."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:391
#: ../../../../tests/qtest/libqtest.h:401
#: ../../../../tests/qtest/libqtest.h:411
#: ../../../../tests/qtest/libqtest.h:421
#: ../../../../tests/qtest/libqtest.h:430
#: ../../../../tests/qtest/libqtest.h:439
msgid "``uint16_t addr``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:390
#: ../../../../tests/qtest/libqtest.h:400
#: ../../../../tests/qtest/libqtest.h:410
msgid "I/O port to write to."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:392
#: ../../../../tests/qtest/libqtest.h:449
msgid "``uint8_t value``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:391
#: ../../../../tests/qtest/libqtest.h:401
#: ../../../../tests/qtest/libqtest.h:411
#: ../../../../tests/qtest/libqtest.h:448
#: ../../../../tests/qtest/libqtest.h:458
#: ../../../../tests/qtest/libqtest.h:468
#: ../../../../tests/qtest/libqtest.h:478
msgid "Value being written."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:393
msgid "Write an 8-bit value to an I/O port."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:402
#: ../../../../tests/qtest/libqtest.h:459
msgid "``uint16_t value``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:403
msgid "Write a 16-bit value to an I/O port."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:412
#: ../../../../tests/qtest/libqtest.h:469
msgid "``uint32_t value``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:413
msgid "Write a 32-bit value to an I/O port."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:420
#: ../../../../tests/qtest/libqtest.h:429
#: ../../../../tests/qtest/libqtest.h:438
msgid "I/O port to read from."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:422
msgid "Returns an 8-bit value from an I/O port."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:431
msgid "Returns a 16-bit value from an I/O port."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:440
msgid "Returns a 32-bit value from an I/O port."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:448
#: ../../../../tests/qtest/libqtest.h:458
#: ../../../../tests/qtest/libqtest.h:468
#: ../../../../tests/qtest/libqtest.h:478
#: ../../../../tests/qtest/libqtest.h:488
#: ../../../../tests/qtest/libqtest.h:499
#: ../../../../tests/qtest/libqtest.h:510
#: ../../../../tests/qtest/libqtest.h:521
#: ../../../../tests/qtest/libqtest.h:532
#: ../../../../tests/qtest/libqtest.h:558
#: ../../../../tests/qtest/libqtest.h:569
#: ../../../../tests/qtest/libqtest.h:580
#: ../../../../tests/qtest/libqtest.h:592
msgid "``uint64_t addr``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:447
#: ../../../../tests/qtest/libqtest.h:457
#: ../../../../tests/qtest/libqtest.h:467
#: ../../../../tests/qtest/libqtest.h:477
#: ../../../../tests/qtest/libqtest.h:568
#: ../../../../tests/qtest/libqtest.h:579
#: ../../../../tests/qtest/libqtest.h:591
msgid "Guest address to write to."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:450
msgid "Writes an 8-bit value to memory."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:460
msgid "Writes a 16-bit value to memory."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:470
msgid "Writes a 32-bit value to memory."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:479
msgid "``uint64_t value``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:480
msgid "Writes a 64-bit value to memory."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:487
#: ../../../../tests/qtest/libqtest.h:498
#: ../../../../tests/qtest/libqtest.h:509
#: ../../../../tests/qtest/libqtest.h:520
#: ../../../../tests/qtest/libqtest.h:531
#: ../../../../tests/qtest/libqtest.h:557
msgid "Guest address to read from."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:489
msgid "Reads an 8-bit value from memory."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:491
#: ../../../../tests/qtest/libqtest.h:502
#: ../../../../tests/qtest/libqtest.h:513
#: ../../../../tests/qtest/libqtest.h:524
msgid "Value read."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:500
msgid "Reads a 16-bit value from memory."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:511
msgid "Reads a 32-bit value from memory."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:522
msgid "Reads a 64-bit value from memory."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:533
#: ../../../../tests/qtest/libqtest.h:559
#: ../../../../tests/qtest/libqtest.h:682
#: ../../../../tests/qtest/libqtest.h:730
msgid "``void *data``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:532
#: ../../../../tests/qtest/libqtest.h:558
msgid "Pointer to where memory contents will be stored."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:534
#: ../../../../tests/qtest/libqtest.h:560
#: ../../../../tests/qtest/libqtest.h:571
#: ../../../../tests/qtest/libqtest.h:582
#: ../../../../tests/qtest/libqtest.h:594
msgid "``size_t size``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:533
#: ../../../../tests/qtest/libqtest.h:559
msgid "Number of bytes to read."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:535
msgid "Read guest memory into a buffer."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:542
msgid "name of the command to call."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:544
msgid "``uint32_t nargs``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:543
msgid "Number of args."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:545
msgid "``uint64_t args``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:544
msgid "Guest address to read args from."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:546
msgid "``uint32_t nret``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:545
msgid "Number of return value."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:547
msgid "``uint64_t ret``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:546
msgid "Guest address to write return values to."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:548
msgid "Call an RTAS function"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:561
msgid "Read guest memory into a buffer and receive using a base64 encoding."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:570
#: ../../../../tests/qtest/libqtest.h:581
#: ../../../../tests/qtest/libqtest.h:669
#: ../../../../tests/qtest/libqtest.h:719
msgid "``const void *data``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:569
#: ../../../../tests/qtest/libqtest.h:580
msgid "Pointer to the bytes that will be written to guest memory."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:570
#: ../../../../tests/qtest/libqtest.h:581
#: ../../../../tests/qtest/libqtest.h:593
msgid "Number of bytes to write."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:572
msgid "Write a buffer to guest memory."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:583
msgid "Write a buffer to guest memory and transmit using a base64 encoding."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:593
msgid "``uint8_t patt``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:592
msgid "Byte pattern to fill the guest memory region with."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:595
msgid "Write a pattern to guest memory."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:603
msgid "Advance the QEMU_CLOCK_VIRTUAL to the next deadline."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:605
#: ../../../../tests/qtest/libqtest.h:616
#: ../../../../tests/qtest/libqtest.h:627
msgid "The current value of the QEMU_CLOCK_VIRTUAL in nanoseconds."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:613
msgid "``int64_t step``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:612
msgid "Number of nanoseconds to advance the clock by."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:614
msgid "Advance the QEMU_CLOCK_VIRTUAL by **step** nanoseconds."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:624
msgid "``int64_t val``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:623
msgid "Nanoseconds value to advance the clock to."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:625
msgid ""
"Advance the QEMU_CLOCK_VIRTUAL to **val** nanoseconds since the VM was "
"launched."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:635
msgid "True if the architecture under test has a big endian configuration."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:643
#: ../../../../tests/qtest/libqtest.h:1001
msgid "``void``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:644
#: ../../../../tests/qtest/libqtest.h:1002
msgid "no arguments"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:642
msgid "The architecture for the QEMU executable under test."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:650
msgid "``const char *accel_name``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:648
msgid "Accelerator name to check for."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:650
msgid "true if the accelerator is built in."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:658
#: ../../../../tests/qtest/libqtest.h:669
#: ../../../../tests/qtest/libqtest.h:682
msgid "``const char *str``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:656
#: ../../../../tests/qtest/libqtest.h:667
#: ../../../../tests/qtest/libqtest.h:680
msgid "Test case path."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:658
msgid "``void (*fn)(void)``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:657
#: ../../../../tests/qtest/libqtest.h:669
#: ../../../../tests/qtest/libqtest.h:682
#: ../../../../tests/qtest/libqtest.h:701
msgid "Test case function"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:659
msgid ""
"Add a GTester testcase with the given name and function. The path is "
"prefixed with the architecture under test, as returned by qtest_get_arch()."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:668
#: ../../../../tests/qtest/libqtest.h:681
#: ../../../../tests/qtest/libqtest.h:699
msgid "Test case data"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:670
#: ../../../../tests/qtest/libqtest.h:683
msgid "``void (*fn)(const void *)``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:671
#: ../../../../tests/qtest/libqtest.h:685
msgid ""
"Add a GTester testcase with the given name, data and function. The path is "
"prefixed with the architecture under test, as returned by qtest_get_arch()."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:684
msgid "``GDestroyNotify data_free_func``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:683
msgid "GDestroyNotify for data"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:689
msgid "**data** is passed to **data_free_func\\(\\)** on test completion."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:710
msgid "``qtest_add (testpath, Fixture, tdata, fsetup, ftest, fteardown)``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:699
msgid "``testpath``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:697
msgid "Test case path"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:699
msgid "``Fixture``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:698
msgid "Fixture type"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:700
msgid "``tdata``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:701
msgid "``fsetup``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:700
msgid "Test case setup function"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:702
msgid "``ftest``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:703
msgid "``fteardown``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:702
msgid "Test case teardown function"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:704
msgid ""
"Add a GTester testcase with the given name, data and functions. The path is "
"prefixed with the architecture under test, as returned by qtest_get_arch()."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:719
msgid "``GHookFunc fn``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:717
msgid "Handler function"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:718
msgid "Argument that is passed to the handler"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:720
msgid ""
"Add a handler function that is invoked on SIGABRT. This can be used to "
"terminate processes and perform other cleanup. The handler can be removed "
"with qtest_remove_abrt_handler()."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:728
msgid "Argument previously passed to qtest_add_abrt_handler()"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:730
msgid ""
"Remove an abrt handler that was previously added with "
"qtest_add_abrt_handler()."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:739
#: ../../../../tests/qtest/libqtest.h:754
#: ../../../../tests/qtest/libqtest.h:770
#: ../../../../tests/qtest/libqtest.h:788
#: ../../../../tests/qtest/libqtest.h:806
#: ../../../../tests/qtest/libqtest.h:819
#: ../../../../tests/qtest/libqtest.h:833
#: ../../../../tests/qtest/libqtest.h:850
#: ../../../../tests/qtest/libqtest.h:893
#: ../../../../tests/qtest/libqtest.h:905
#: ../../../../tests/qtest/libqtest.h:919
#: ../../../../tests/qtest/libqtest.h:930
#: ../../../../tests/qtest/libqtest.h:939
msgid "``QTestState *qts``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:737
#: ../../../../tests/qtest/libqtest.h:752
#: ../../../../tests/qtest/libqtest.h:768
#: ../../../../tests/qtest/libqtest.h:786
#: ../../../../tests/qtest/libqtest.h:804
#: ../../../../tests/qtest/libqtest.h:817
#: ../../../../tests/qtest/libqtest.h:831
#: ../../../../tests/qtest/libqtest.h:848
#: ../../../../tests/qtest/libqtest.h:891
#: ../../../../tests/qtest/libqtest.h:903
#: ../../../../tests/qtest/libqtest.h:917
#: ../../../../tests/qtest/libqtest.h:928
#: ../../../../tests/qtest/libqtest.h:937
msgid "QTestState instance to operate on"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:742
#: ../../../../tests/qtest/libqtest.h:757
#: ../../../../tests/qtest/libqtest.h:775
#: ../../../../tests/qtest/libqtest.h:793
msgid "``va_list args``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:741
#: ../../../../tests/qtest/libqtest.h:756
#: ../../../../tests/qtest/libqtest.h:774
#: ../../../../tests/qtest/libqtest.h:792
msgid "variable arguments for **fmt**"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:743
#: ../../../../tests/qtest/libqtest.h:809
msgid ""
"Sends a QMP message to QEMU, asserts that a 'return' key is present in the "
"response, and returns the response."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:758
#: ../../../../tests/qtest/libqtest.h:822
msgid ""
"Sends a QMP message to QEMU and asserts that a 'return' key is present in "
"the response."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:769
#: ../../../../tests/qtest/libqtest.h:787
#: ../../../../tests/qtest/libqtest.h:832
#: ../../../../tests/qtest/libqtest.h:849
msgid "the file descriptors to send"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:771
#: ../../../../tests/qtest/libqtest.h:789
#: ../../../../tests/qtest/libqtest.h:834
#: ../../../../tests/qtest/libqtest.h:851
msgid "``size_t nfds``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:770
#: ../../../../tests/qtest/libqtest.h:788
#: ../../../../tests/qtest/libqtest.h:833
#: ../../../../tests/qtest/libqtest.h:850
msgid "number of **fds** to send"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:776
#: ../../../../tests/qtest/libqtest.h:838
msgid ""
"Sends a QMP message with file descriptors to QEMU, asserts that a 'return' "
"key is present in the response, and returns the response."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:794
#: ../../../../tests/qtest/libqtest.h:855
msgid ""
"Sends a QMP message with file descriptors to QEMU and asserts that a "
"'return' key is present in the response."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:867
msgid "``void (*cb)(const char *machine)``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:865
msgid "Pointer to the callback function"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:867
msgid "``bool skip_old_versioned``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:866
msgid "true if versioned old machine types should be skipped"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:868
msgid "Call a callback function for every name of all available machines."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:877
msgid "``const char *machine``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:875
msgid "The machine to look for"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:877
msgid "true if the machine is available in the target binary."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:885
msgid "``const char *device``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:883
msgid "The device to look for"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:885
msgid "true if the device is available in the target binary."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:893
msgid "``const char *drv``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:892
#: ../../../../tests/qtest/libqtest.h:904
msgid "Name of the device that should be added"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:894
msgid "``const QDict *arguments``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:893
msgid "QDict with properties for the device to initialize"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:895
msgid ""
"Generic hot-plugging test via the device_add QMP command with properties "
"supplied in form of QDict. Use NULL for empty properties list."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:905
msgid "``const char *driver``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:906
#: ../../../../tests/qtest/libqtest.h:930
#: ../../../../tests/qtest/libqtest.h:939
msgid "``const char *id``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:905
#: ../../../../tests/qtest/libqtest.h:929
#: ../../../../tests/qtest/libqtest.h:938
msgid "Identification string"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:910
msgid "Generic hot-plugging test via the device_add QMP command."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:919
msgid "``const char *protocol``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:918
msgid "the protocol to add to"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:920
msgid "``int fd``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:919
msgid "the client file-descriptor"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:921
msgid ""
"Call QMP ``getfd`` (on Windows ``get-win32-socket``) followed by "
"``add_client`` with the given **fd**."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:931
msgid "Generic hot-unplugging test via the device_del QMP command."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:940
msgid ""
"Generic hot-unplugging test via the device_del QMP command. Waiting for "
"command completion event."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:949
msgid "true if the child is still alive."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:957
msgid "``int status``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:956
msgid "an expected exit status."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:958
msgid "Set expected exit status of the child."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:971
#: ../../../../tests/qtest/libqtest.h:983
msgid "``const char *path``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:970
msgid "Path to the property being set."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:972
#: ../../../../tests/qtest/libqtest.h:984
msgid "``const char *property``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:971
msgid "Property being set."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:973
msgid "``bool value``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:972
msgid "Value to set the property."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:974
msgid "Set the property with passed in value."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:982
msgid "Path to the property being retrieved."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:983
msgid "Property from where the value is being retrieved."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:985
msgid "Value retrieved from property."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:993
msgid "the PID of the QEMU process, or <= 0"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:1000
msgid "true if \"qemu-img\" is available."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:1008
msgid "``const char *file``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:1006
msgid "File name of the image that should be created"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:1007
msgid "Format, e.g. \"qcow2\" or \"raw\""
msgstr ""

#: ../../../../tests/qtest/libqtest.h:1009
msgid "``unsigned size_mb``"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:1008
msgid "Size of the image in megabytes"
msgstr ""

#: ../../../../tests/qtest/libqtest.h:1010
msgid ""
"Create a disk image with qemu-img. Note that the QTEST_QEMU_IMG environment "
"variable must point to the qemu-img file."
msgstr ""

#: ../../../../tests/qtest/libqtest.h:1013
msgid "true if the image has been created successfully."
msgstr ""
