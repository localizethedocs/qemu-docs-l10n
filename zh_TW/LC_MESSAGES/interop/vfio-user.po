# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 05:37+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../interop/vfio-user.rst:6
msgid "vfio-user Protocol Specification"
msgstr ""

#: ../../../interop/vfio-user.rst:8
msgid "Table of Contents"
msgstr ""

#: ../../../interop/vfio-user.rst:11
msgid "Introduction"
msgstr ""

#: ../../../interop/vfio-user.rst:12
msgid ""
"vfio-user is a protocol that allows a device to be emulated in a separate "
"process outside of a Virtual Machine Monitor (VMM). vfio-user devices "
"consist of a generic VFIO device type, living inside the VMM, which we call "
"the client, and the core device implementation, living outside the VMM, "
"which we call the server."
msgstr ""

#: ../../../interop/vfio-user.rst:18
msgid ""
"The vfio-user specification is partly based on the `Linux VFIO ioctl "
"interface <https://www.kernel.org/doc/html/latest/driver-api/vfio.html>`_."
msgstr ""

#: ../../../interop/vfio-user.rst:21
msgid ""
"VFIO is a mature and stable API, backed by an extensively used framework. "
"The existing VFIO client implementation in QEMU (``qemu/hw/vfio/``) can be "
"largely re-used, though there is nothing in this specification that requires "
"that particular implementation. None of the VFIO kernel modules are required "
"for supporting the protocol, on either the client or server side. Some "
"source definitions in VFIO are re-used for vfio-user."
msgstr ""

#: ../../../interop/vfio-user.rst:28
msgid ""
"The main idea is to allow a virtual device to function in a separate process "
"in the same host over a UNIX domain socket. A UNIX domain socket "
"(``AF_UNIX``) is chosen because file descriptors can be trivially sent over "
"it, which in turn allows:"
msgstr ""

#: ../../../interop/vfio-user.rst:33
msgid "Sharing of client memory for DMA with the server."
msgstr ""

#: ../../../interop/vfio-user.rst:34
msgid "Sharing of server memory with the client for fast MMIO."
msgstr ""

#: ../../../interop/vfio-user.rst:35
msgid "Efficient sharing of eventfd's for triggering interrupts."
msgstr ""

#: ../../../interop/vfio-user.rst:37
msgid ""
"Other socket types could be used which allow the server to run in a separate "
"guest in the same host (``AF_VSOCK``) or remotely (``AF_INET``). "
"Theoretically the underlying transport does not necessarily have to be a "
"socket, however we do not examine such alternatives. In this protocol "
"version we focus on using a UNIX domain socket and introduce basic support "
"for the other two types of sockets without considering performance "
"implications."
msgstr ""

#: ../../../interop/vfio-user.rst:44
msgid ""
"While passing of file descriptors is desirable for performance reasons, "
"support is not necessary for either the client or the server in order to "
"implement the protocol. There is always an in-band, message-passing fall "
"back mechanism."
msgstr ""

#: ../../../interop/vfio-user.rst:49
msgid "Overview"
msgstr "概覽"

#: ../../../interop/vfio-user.rst:51
msgid ""
"VFIO is a framework that allows a physical device to be securely passed "
"through to a user space process; the device-specific kernel driver does not "
"drive the device at all.  Typically, the user space process is a VMM and the "
"device is passed through to it in order to achieve high performance. VFIO "
"provides an API and the required functionality in the kernel. QEMU has "
"adopted VFIO to allow a guest to directly access physical devices, instead "
"of emulating them in software."
msgstr ""

#: ../../../interop/vfio-user.rst:59
msgid ""
"vfio-user reuses the core VFIO concepts defined in its API, but implements "
"them as messages to be sent over a socket. It does not change the kernel-"
"based VFIO in any way, in fact none of the VFIO kernel modules need to be "
"loaded to use vfio-user. It is also possible for the client to concurrently "
"use the current kernel-based VFIO for one device, and vfio-user for another "
"device."
msgstr ""

#: ../../../interop/vfio-user.rst:66
msgid "VFIO Device Model"
msgstr ""

#: ../../../interop/vfio-user.rst:68
msgid ""
"A device under VFIO presents a standard interface to the user process. Many "
"of the VFIO operations in the existing interface use the ``ioctl()`` system "
"call, and references to the existing interface are called the ``ioctl()`` "
"implementation in this document."
msgstr ""

#: ../../../interop/vfio-user.rst:73
msgid ""
"The following sections describe the set of messages that implement the vfio-"
"user interface over a socket. In many cases, the messages are analogous to "
"data structures used in the ``ioctl()`` implementation. Messages derived "
"from the ``ioctl()`` will have a name derived from the ``ioctl()`` command "
"name.  E.g., the ``VFIO_DEVICE_GET_INFO`` ``ioctl()`` command becomes a "
"``VFIO_USER_DEVICE_GET_INFO`` message.  The purpose of this reuse is to "
"share as much code as feasible with the ``ioctl()`` implementation``."
msgstr ""

#: ../../../interop/vfio-user.rst:82
msgid "Connection Initiation"
msgstr ""

#: ../../../interop/vfio-user.rst:84
msgid ""
"After the client connects to the server, the initial client message is "
"``VFIO_USER_VERSION`` to propose a protocol version and set of capabilities "
"to apply to the session. The server replies with a compatible version and "
"set of capabilities it supports, or closes the connection if it cannot "
"support the advertised version."
msgstr ""

#: ../../../interop/vfio-user.rst:91
msgid "Device Information"
msgstr ""

#: ../../../interop/vfio-user.rst:93
msgid ""
"The client uses a ``VFIO_USER_DEVICE_GET_INFO`` message to query the server "
"for information about the device. This information includes:"
msgstr ""

#: ../../../interop/vfio-user.rst:96
msgid "The device type and whether it supports reset (``VFIO_DEVICE_FLAGS_``),"
msgstr ""

#: ../../../interop/vfio-user.rst:97
msgid "the number of device regions, and"
msgstr ""

#: ../../../interop/vfio-user.rst:98
msgid ""
"the device presents to the client the number of interrupt types the device "
"supports."
msgstr ""

#: ../../../interop/vfio-user.rst:102
msgid "Region Information"
msgstr ""

#: ../../../interop/vfio-user.rst:104
msgid ""
"The client uses ``VFIO_USER_DEVICE_GET_REGION_INFO`` messages to query the "
"server for information about the device's regions. This information "
"describes:"
msgstr ""

#: ../../../interop/vfio-user.rst:107
msgid ""
"Read and write permissions, whether it can be memory mapped, and whether it "
"supports additional capabilities (``VFIO_REGION_INFO_CAP_``)."
msgstr ""

#: ../../../interop/vfio-user.rst:109
msgid "Region index, size, and offset."
msgstr ""

#: ../../../interop/vfio-user.rst:111
msgid ""
"When a device region can be mapped by the client, the server provides a file "
"descriptor which the client can ``mmap()``. The server is responsible for "
"polling for client updates to memory mapped regions."
msgstr ""

#: ../../../interop/vfio-user.rst:116
msgid "Region Capabilities"
msgstr ""

#: ../../../interop/vfio-user.rst:118
msgid ""
"Some regions have additional capabilities that cannot be described "
"adequately by the region info data structure. These capabilities are "
"returned in the region info reply in a list similar to PCI capabilities in a "
"PCI device's configuration space."
msgstr ""

#: ../../../interop/vfio-user.rst:124
msgid "Sparse Regions"
msgstr ""

#: ../../../interop/vfio-user.rst:125
msgid ""
"A region can be memory-mappable in whole or in part. When only a subset of a "
"region can be mapped by the client, a ``VFIO_REGION_INFO_CAP_SPARSE_MMAP`` "
"capability is included in the region info reply. This capability describes "
"which portions can be mapped by the client."
msgstr ""

#: ../../../interop/vfio-user.rst:131
msgid ""
"For example, in a virtual NVMe controller, sparse regions can be used so "
"that accesses to the NVMe registers (found in the beginning of BAR0) are "
"trapped (an infrequent event), while allowing direct access to the doorbells "
"(an extremely frequent event as every I/O submission requires a write to "
"BAR0), found in the next page after the NVMe registers in BAR0."
msgstr ""

#: ../../../interop/vfio-user.rst:138
msgid "Device-Specific Regions"
msgstr ""

#: ../../../interop/vfio-user.rst:140
msgid ""
"A device can define regions additional to the standard ones (e.g. PCI "
"indexes 0-8). This is achieved by including a ``VFIO_REGION_INFO_CAP_TYPE`` "
"capability in the region info reply of a device-specific region. Such "
"regions are reflected in ``struct vfio_user_device_info.num_regions``. Thus, "
"for PCI devices this value can be equal to, or higher than, "
"``VFIO_PCI_NUM_REGIONS``."
msgstr ""

#: ../../../interop/vfio-user.rst:147
msgid "Region I/O via file descriptors"
msgstr ""

#: ../../../interop/vfio-user.rst:149
msgid ""
"For unmapped regions, region I/O from the client is done via "
"``VFIO_USER_REGION_READ/WRITE``.  As an optimization, ioeventfds or "
"ioregionfds may be configured for sub-regions of some regions. A client may "
"request information on these sub-regions via "
"``VFIO_USER_DEVICE_GET_REGION_IO_FDS``; by configuring the returned file "
"descriptors as ioeventfds or ioregionfds, the server can be directly "
"notified of I/O (for example, by KVM) without taking a trip through the "
"client."
msgstr ""

#: ../../../interop/vfio-user.rst:158
msgid "Interrupts"
msgstr ""

#: ../../../interop/vfio-user.rst:160
msgid ""
"The client uses ``VFIO_USER_DEVICE_GET_IRQ_INFO`` messages to query the "
"server for the device's interrupt types. The interrupt types are specific to "
"the bus the device is attached to, and the client is expected to know the "
"capabilities of each interrupt type. The server can signal an interrupt by "
"directly injecting interrupts into the guest via an event file descriptor. "
"The client configures how the server signals an interrupt with "
"``VFIO_USER_SET_IRQS`` messages."
msgstr ""

#: ../../../interop/vfio-user.rst:168
msgid "Device Read and Write"
msgstr ""

#: ../../../interop/vfio-user.rst:170
msgid ""
"When the guest executes load or store operations to an unmapped device "
"region, the client forwards these operations to the server with "
"``VFIO_USER_REGION_READ`` or ``VFIO_USER_REGION_WRITE`` messages. The server "
"will reply with data from the device on read operations or an "
"acknowledgement on write operations. See `Read and Write Operations`_."
msgstr ""

#: ../../../interop/vfio-user.rst:177
msgid "Client memory access"
msgstr ""

#: ../../../interop/vfio-user.rst:179
msgid ""
"The client uses ``VFIO_USER_DMA_MAP`` and ``VFIO_USER_DMA_UNMAP`` messages "
"to inform the server of the valid DMA ranges that the server can access on "
"behalf of a device (typically, VM guest memory). DMA memory may be accessed "
"by the server via ``VFIO_USER_DMA_READ`` and ``VFIO_USER_DMA_WRITE`` "
"messages over the socket. In this case, the \"DMA\" part of the naming is a "
"misnomer."
msgstr ""

#: ../../../interop/vfio-user.rst:185
msgid ""
"Actual direct memory access of client memory from the server is possible if "
"the client provides file descriptors the server can ``mmap()``. Note that "
"``mmap()`` privileges cannot be revoked by the client, therefore file "
"descriptors should only be exported in environments where the client trusts "
"the server not to corrupt guest memory."
msgstr ""

#: ../../../interop/vfio-user.rst:191
msgid "See `Read and Write Operations`_."
msgstr ""

#: ../../../interop/vfio-user.rst:194
msgid "Client/server interactions"
msgstr ""

#: ../../../interop/vfio-user.rst:197
msgid "Socket"
msgstr ""

#: ../../../interop/vfio-user.rst:199
msgid "A server can serve:"
msgstr ""

#: ../../../interop/vfio-user.rst:201
msgid "one or more clients, and/or"
msgstr ""

#: ../../../interop/vfio-user.rst:202
msgid "one or more virtual devices, belonging to one or more clients."
msgstr ""

#: ../../../interop/vfio-user.rst:204
msgid ""
"The current protocol specification requires a dedicated socket per client/"
"server connection. It is a server-side implementation detail whether a "
"single server handles multiple virtual devices from the same or multiple "
"clients. The location of the socket is implementation-specific. Multiplexing "
"clients, devices, and servers over the same socket is not supported in this "
"version of the protocol."
msgstr ""

#: ../../../interop/vfio-user.rst:212
msgid "Authentication"
msgstr ""

#: ../../../interop/vfio-user.rst:214
msgid ""
"For ``AF_UNIX``, we rely on OS mandatory access controls on the socket "
"files, therefore it is up to the management layer to set up the socket as "
"required. Socket types that span guests or hosts will require a proper "
"authentication mechanism. Defining that mechanism is deferred to a future "
"version of the protocol."
msgstr ""

#: ../../../interop/vfio-user.rst:221
msgid "Command Concurrency"
msgstr ""

#: ../../../interop/vfio-user.rst:223
msgid ""
"A client may pipeline multiple commands without waiting for previous command "
"replies.  The server will process commands in the order they are received.  "
"A consequence of this is if a client issues a command with the *No_reply* "
"bit, then subsequently issues a command without *No_reply*, the older "
"command will have been processed before the reply to the younger command is "
"sent by the server.  The client must be aware of the device's capability to "
"process concurrent commands if pipelining is used.  For example, pipelining "
"allows multiple client threads to concurrently access device regions; the "
"client must ensure these accesses obey device semantics."
msgstr ""

#: ../../../interop/vfio-user.rst:233
msgid ""
"An example is a frame buffer device, where the device may allow concurrent "
"access to different areas of video memory, but may have indeterminate "
"behavior if concurrent accesses are performed to command or status registers."
msgstr ""

#: ../../../interop/vfio-user.rst:237
msgid ""
"Note that unrelated messages sent from the server to the client can appear "
"in between a client to server request/reply and vice versa."
msgstr ""

#: ../../../interop/vfio-user.rst:240
msgid ""
"Implementers should be prepared for certain commands to exhibit potentially "
"unbounded latencies.  For example, ``VFIO_USER_DEVICE_RESET`` may take an "
"arbitrarily long time to complete; clients should take care not to block "
"unnecessarily."
msgstr ""

#: ../../../interop/vfio-user.rst:246
msgid "Socket Disconnection Behavior"
msgstr ""

#: ../../../interop/vfio-user.rst:247
msgid ""
"The server and the client can disconnect from each other, either "
"intentionally or unexpectedly. Both the client and the server need to know "
"how to handle such events."
msgstr ""

#: ../../../interop/vfio-user.rst:252
msgid "Server Disconnection"
msgstr ""

#: ../../../interop/vfio-user.rst:253
msgid "A server disconnecting from the client may indicate that:"
msgstr ""

#: ../../../interop/vfio-user.rst:255
msgid ""
"A virtual device has been restarted, either intentionally (e.g. because of a "
"device update) or unintentionally (e.g. because of a crash)."
msgstr ""

#: ../../../interop/vfio-user.rst:257
msgid "A virtual device has been shut down with no intention to be restarted."
msgstr ""

#: ../../../interop/vfio-user.rst:259
msgid ""
"It is impossible for the client to know whether or not a failure is "
"intermittent or innocuous and should be retried, therefore the client should "
"reset the VFIO device when it detects the socket has been disconnected. "
"Error recovery will be driven by the guest's device error handling behavior."
msgstr ""

#: ../../../interop/vfio-user.rst:266
msgid "Client Disconnection"
msgstr ""

#: ../../../interop/vfio-user.rst:267
msgid ""
"The client disconnecting from the server primarily means that the client has "
"exited. Currently, this means that the guest is shut down so the device is "
"no longer needed therefore the server can automatically exit. However, there "
"can be cases where a client disconnection should not result in a server exit:"
msgstr ""

#: ../../../interop/vfio-user.rst:272
msgid "A single server serving multiple clients."
msgstr ""

#: ../../../interop/vfio-user.rst:273
msgid ""
"A multi-process QEMU upgrading itself step by step, which is not yet "
"implemented."
msgstr ""

#: ../../../interop/vfio-user.rst:276
msgid ""
"Therefore in order for the protocol to be forward compatible, the server "
"should respond to a client disconnection as follows:"
msgstr ""

#: ../../../interop/vfio-user.rst:279
msgid ""
"all client memory regions are unmapped and cleaned up (including closing any "
"passed file descriptors)"
msgstr ""

#: ../../../interop/vfio-user.rst:281
msgid "all IRQ file descriptors passed from the old client are closed"
msgstr ""

#: ../../../interop/vfio-user.rst:282
msgid "the device state should otherwise be retained"
msgstr ""

#: ../../../interop/vfio-user.rst:284
msgid ""
"The expectation is that when a client reconnects, it will re-establish IRQ "
"and client memory mappings."
msgstr ""

#: ../../../interop/vfio-user.rst:287
msgid ""
"If anything happens to the client (such as qemu really did exit), the "
"control stack will know about it and can clean up resources accordingly."
msgstr ""

#: ../../../interop/vfio-user.rst:291
msgid "Security Considerations"
msgstr ""

#: ../../../interop/vfio-user.rst:293
msgid ""
"Speaking generally, vfio-user clients should not trust servers, and vice "
"versa. Standard tools and mechanisms should be used on both sides to "
"validate input and prevent against denial of service scenarios, buffer "
"overflow, etc."
msgstr ""

#: ../../../interop/vfio-user.rst:298
msgid "Request Retry and Response Timeout"
msgstr ""

#: ../../../interop/vfio-user.rst:299
msgid ""
"A failed command is a command that has been successfully sent and has been "
"responded to with an error code. Failure to send the command in the first "
"place (e.g. because the socket is disconnected) is a different type of error "
"examined earlier in the disconnect section."
msgstr ""

#: ../../../interop/vfio-user.rst:305
msgid ""
"QEMU's VFIO retries certain operations if they fail. While this makes sense "
"for real HW, we don't know for sure whether it makes sense for virtual "
"devices."
msgstr ""

#: ../../../interop/vfio-user.rst:309
msgid ""
"Defining a retry and timeout scheme is deferred to a future version of the "
"protocol."
msgstr ""

#: ../../../interop/vfio-user.rst:313
msgid "Message sizes"
msgstr ""

#: ../../../interop/vfio-user.rst:315
msgid ""
"Some requests have an ``argsz`` field. In a request, it defines the maximum "
"expected reply payload size, which should be at least the size of the fixed "
"reply payload headers defined here. The *request* payload size is defined by "
"the usual ``msg_size`` field in the header, not the ``argsz`` field."
msgstr ""

#: ../../../interop/vfio-user.rst:320
msgid ""
"In a reply, the server sets ``argsz`` field to the size needed for a full "
"payload size. This may be less than the requested maximum size. This may be "
"larger than the requested maximum size: in that case, the full payload is "
"not included in the reply, but the ``argsz`` field in the reply indicates "
"the needed size, allowing a client to allocate a larger buffer for holding "
"the reply before trying again."
msgstr ""

#: ../../../interop/vfio-user.rst:327
msgid ""
"In addition, during negotiation (see  `Version`_), the client and server may "
"each specify a ``max_data_xfer_size`` value; this defines the maximum data "
"that may be read or written via one of the ``VFIO_USER_DMA/REGION_READ/"
"WRITE`` messages; see `Read and Write Operations`_."
msgstr ""

#: ../../../interop/vfio-user.rst:333
msgid "Protocol Specification"
msgstr ""

#: ../../../interop/vfio-user.rst:335
msgid ""
"To distinguish from the base VFIO symbols, all vfio-user symbols are "
"prefixed with ``vfio_user`` or ``VFIO_USER``. In this revision, all data is "
"in the endianness of the host system, although this may be relaxed in future "
"revisions in cases where the client and server run on different hosts with "
"different endianness."
msgstr ""

#: ../../../interop/vfio-user.rst:341
msgid ""
"Unless otherwise specified, all sizes should be presumed to be in bytes."
msgstr ""

#: ../../../interop/vfio-user.rst:346
msgid "Commands"
msgstr ""

#: ../../../interop/vfio-user.rst:347
msgid ""
"The following table lists the VFIO message command IDs, and whether the "
"message command is sent from the client or the server."
msgstr ""

#: ../../../interop/vfio-user.rst:351 ../../../interop/vfio-user.rst:377
#: ../../../interop/vfio-user.rst:470 ../../../interop/vfio-user.rst:481
#: ../../../interop/vfio-user.rst:490 ../../../interop/vfio-user.rst:519
#: ../../../interop/vfio-user.rst:550 ../../../interop/vfio-user.rst:617
#: ../../../interop/vfio-user.rst:656 ../../../interop/vfio-user.rst:682
#: ../../../interop/vfio-user.rst:725 ../../../interop/vfio-user.rst:749
#: ../../../interop/vfio-user.rst:814 ../../../interop/vfio-user.rst:832
#: ../../../interop/vfio-user.rst:852 ../../../interop/vfio-user.rst:902
#: ../../../interop/vfio-user.rst:924 ../../../interop/vfio-user.rst:962
#: ../../../interop/vfio-user.rst:1001 ../../../interop/vfio-user.rst:1050
#: ../../../interop/vfio-user.rst:1081 ../../../interop/vfio-user.rst:1131
#: ../../../interop/vfio-user.rst:1257 ../../../interop/vfio-user.rst:1274
#: ../../../interop/vfio-user.rst:1301 ../../../interop/vfio-user.rst:1321
#: ../../../interop/vfio-user.rst:1344 ../../../interop/vfio-user.rst:1359
#: ../../../interop/vfio-user.rst:1382 ../../../interop/vfio-user.rst:1400
#: ../../../interop/vfio-user.rst:1427 ../../../interop/vfio-user.rst:1441
#: ../../../interop/vfio-user.rst:1462
msgid "Name"
msgstr ""

#: ../../../interop/vfio-user.rst:351 ../../../interop/vfio-user.rst:381
msgid "Command"
msgstr ""

#: ../../../interop/vfio-user.rst:351
msgid "Request Direction"
msgstr ""

#: ../../../interop/vfio-user.rst:353 ../../../interop/vfio-user.rst:437
msgid "``VFIO_USER_VERSION``"
msgstr ""

#: ../../../interop/vfio-user.rst:353 ../../../interop/vfio-user.rst:561
#: ../../../interop/vfio-user.rst:667 ../../../interop/vfio-user.rst:693
#: ../../../interop/vfio-user.rst:760 ../../../interop/vfio-user.rst:1061
#: ../../../interop/vfio-user.rst:1092 ../../../interop/vfio-user.rst:1142
msgid "1"
msgstr ""

#: ../../../interop/vfio-user.rst:353 ../../../interop/vfio-user.rst:354
#: ../../../interop/vfio-user.rst:355 ../../../interop/vfio-user.rst:356
#: ../../../interop/vfio-user.rst:357 ../../../interop/vfio-user.rst:358
#: ../../../interop/vfio-user.rst:359 ../../../interop/vfio-user.rst:360
#: ../../../interop/vfio-user.rst:361 ../../../interop/vfio-user.rst:362
#: ../../../interop/vfio-user.rst:365 ../../../interop/vfio-user.rst:366
msgid "client -> server"
msgstr ""

#: ../../../interop/vfio-user.rst:354 ../../../interop/vfio-user.rst:536
msgid "``VFIO_USER_DMA_MAP``"
msgstr ""

#: ../../../interop/vfio-user.rst:354 ../../../interop/vfio-user.rst:379
#: ../../../interop/vfio-user.rst:381 ../../../interop/vfio-user.rst:472
#: ../../../interop/vfio-user.rst:473 ../../../interop/vfio-user.rst:762
#: ../../../interop/vfio-user.rst:816 ../../../interop/vfio-user.rst:818
#: ../../../interop/vfio-user.rst:1063 ../../../interop/vfio-user.rst:1094
#: ../../../interop/vfio-user.rst:1144
msgid "2"
msgstr ""

#: ../../../interop/vfio-user.rst:355 ../../../interop/vfio-user.rst:603
msgid "``VFIO_USER_DMA_UNMAP``"
msgstr ""

#: ../../../interop/vfio-user.rst:355 ../../../interop/vfio-user.rst:764
#: ../../../interop/vfio-user.rst:1065 ../../../interop/vfio-user.rst:1096
#: ../../../interop/vfio-user.rst:1146
msgid "3"
msgstr ""

#: ../../../interop/vfio-user.rst:356 ../../../interop/vfio-user.rst:647
msgid "``VFIO_USER_DEVICE_GET_INFO``"
msgstr ""

#: ../../../interop/vfio-user.rst:356 ../../../interop/vfio-user.rst:383
#: ../../../interop/vfio-user.rst:385 ../../../interop/vfio-user.rst:392
#: ../../../interop/vfio-user.rst:397 ../../../interop/vfio-user.rst:474
#: ../../../interop/vfio-user.rst:552 ../../../interop/vfio-user.rst:554
#: ../../../interop/vfio-user.rst:619 ../../../interop/vfio-user.rst:621
#: ../../../interop/vfio-user.rst:658 ../../../interop/vfio-user.rst:660
#: ../../../interop/vfio-user.rst:670 ../../../interop/vfio-user.rst:672
#: ../../../interop/vfio-user.rst:684 ../../../interop/vfio-user.rst:686
#: ../../../interop/vfio-user.rst:696 ../../../interop/vfio-user.rst:698
#: ../../../interop/vfio-user.rst:727 ../../../interop/vfio-user.rst:729
#: ../../../interop/vfio-user.rst:731 ../../../interop/vfio-user.rst:733
#: ../../../interop/vfio-user.rst:751 ../../../interop/vfio-user.rst:753
#: ../../../interop/vfio-user.rst:768 ../../../interop/vfio-user.rst:770
#: ../../../interop/vfio-user.rst:820 ../../../interop/vfio-user.rst:854
#: ../../../interop/vfio-user.rst:856 ../../../interop/vfio-user.rst:904
#: ../../../interop/vfio-user.rst:906 ../../../interop/vfio-user.rst:908
#: ../../../interop/vfio-user.rst:910 ../../../interop/vfio-user.rst:926
#: ../../../interop/vfio-user.rst:928 ../../../interop/vfio-user.rst:930
#: ../../../interop/vfio-user.rst:932 ../../../interop/vfio-user.rst:968
#: ../../../interop/vfio-user.rst:970 ../../../interop/vfio-user.rst:972
#: ../../../interop/vfio-user.rst:974 ../../../interop/vfio-user.rst:1007
#: ../../../interop/vfio-user.rst:1009 ../../../interop/vfio-user.rst:1011
#: ../../../interop/vfio-user.rst:1013 ../../../interop/vfio-user.rst:1052
#: ../../../interop/vfio-user.rst:1054 ../../../interop/vfio-user.rst:1068
#: ../../../interop/vfio-user.rst:1070 ../../../interop/vfio-user.rst:1083
#: ../../../interop/vfio-user.rst:1085 ../../../interop/vfio-user.rst:1099
#: ../../../interop/vfio-user.rst:1101 ../../../interop/vfio-user.rst:1133
#: ../../../interop/vfio-user.rst:1135 ../../../interop/vfio-user.rst:1148
#: ../../../interop/vfio-user.rst:1153 ../../../interop/vfio-user.rst:1155
#: ../../../interop/vfio-user.rst:1157 ../../../interop/vfio-user.rst:1261
#: ../../../interop/vfio-user.rst:1263 ../../../interop/vfio-user.rst:1278
#: ../../../interop/vfio-user.rst:1280 ../../../interop/vfio-user.rst:1305
#: ../../../interop/vfio-user.rst:1307 ../../../interop/vfio-user.rst:1325
#: ../../../interop/vfio-user.rst:1327 ../../../interop/vfio-user.rst:1404
#: ../../../interop/vfio-user.rst:1445 ../../../interop/vfio-user.rst:1447
msgid "4"
msgstr ""

#: ../../../interop/vfio-user.rst:357 ../../../interop/vfio-user.rst:715
msgid "``VFIO_USER_DEVICE_GET_REGION_INFO``"
msgstr ""

#: ../../../interop/vfio-user.rst:357 ../../../interop/vfio-user.rst:394
#: ../../../interop/vfio-user.rst:1150
msgid "5"
msgstr ""

#: ../../../interop/vfio-user.rst:358 ../../../interop/vfio-user.rst:876
msgid "``VFIO_USER_DEVICE_GET_REGION_IO_FDS``"
msgstr ""

#: ../../../interop/vfio-user.rst:358
msgid "6"
msgstr ""

#: ../../../interop/vfio-user.rst:359 ../../../interop/vfio-user.rst:1040
msgid "``VFIO_USER_DEVICE_GET_IRQ_INFO``"
msgstr ""

#: ../../../interop/vfio-user.rst:359
msgid "7"
msgstr ""

#: ../../../interop/vfio-user.rst:360 ../../../interop/vfio-user.rst:1121
msgid "``VFIO_USER_DEVICE_SET_IRQS``"
msgstr ""

#: ../../../interop/vfio-user.rst:360 ../../../interop/vfio-user.rst:385
#: ../../../interop/vfio-user.rst:564 ../../../interop/vfio-user.rst:566
#: ../../../interop/vfio-user.rst:568 ../../../interop/vfio-user.rst:623
#: ../../../interop/vfio-user.rst:625 ../../../interop/vfio-user.rst:670
#: ../../../interop/vfio-user.rst:696 ../../../interop/vfio-user.rst:731
#: ../../../interop/vfio-user.rst:735 ../../../interop/vfio-user.rst:737
#: ../../../interop/vfio-user.rst:768 ../../../interop/vfio-user.rst:772
#: ../../../interop/vfio-user.rst:774 ../../../interop/vfio-user.rst:858
#: ../../../interop/vfio-user.rst:860 ../../../interop/vfio-user.rst:908
#: ../../../interop/vfio-user.rst:930 ../../../interop/vfio-user.rst:964
#: ../../../interop/vfio-user.rst:966 ../../../interop/vfio-user.rst:976
#: ../../../interop/vfio-user.rst:1003 ../../../interop/vfio-user.rst:1005
#: ../../../interop/vfio-user.rst:1015 ../../../interop/vfio-user.rst:1068
#: ../../../interop/vfio-user.rst:1099 ../../../interop/vfio-user.rst:1153
#: ../../../interop/vfio-user.rst:1259 ../../../interop/vfio-user.rst:1261
#: ../../../interop/vfio-user.rst:1276 ../../../interop/vfio-user.rst:1278
#: ../../../interop/vfio-user.rst:1303 ../../../interop/vfio-user.rst:1305
#: ../../../interop/vfio-user.rst:1323 ../../../interop/vfio-user.rst:1325
#: ../../../interop/vfio-user.rst:1346 ../../../interop/vfio-user.rst:1348
#: ../../../interop/vfio-user.rst:1361 ../../../interop/vfio-user.rst:1363
#: ../../../interop/vfio-user.rst:1384 ../../../interop/vfio-user.rst:1386
#: ../../../interop/vfio-user.rst:1402 ../../../interop/vfio-user.rst:1404
#: ../../../interop/vfio-user.rst:1429 ../../../interop/vfio-user.rst:1431
#: ../../../interop/vfio-user.rst:1443 ../../../interop/vfio-user.rst:1445
#: ../../../interop/vfio-user.rst:1449 ../../../interop/vfio-user.rst:1464
msgid "8"
msgstr ""

#: ../../../interop/vfio-user.rst:361 ../../../interop/vfio-user.rst:1247
msgid "``VFIO_USER_REGION_READ``"
msgstr ""

#: ../../../interop/vfio-user.rst:361
msgid "9"
msgstr ""

#: ../../../interop/vfio-user.rst:362 ../../../interop/vfio-user.rst:1291
msgid "``VFIO_USER_REGION_WRITE``"
msgstr ""

#: ../../../interop/vfio-user.rst:362
msgid "10"
msgstr ""

#: ../../../interop/vfio-user.rst:363 ../../../interop/vfio-user.rst:1335
msgid "``VFIO_USER_DMA_READ``"
msgstr ""

#: ../../../interop/vfio-user.rst:363
msgid "11"
msgstr ""

#: ../../../interop/vfio-user.rst:363 ../../../interop/vfio-user.rst:364
msgid "server -> client"
msgstr ""

#: ../../../interop/vfio-user.rst:364 ../../../interop/vfio-user.rst:1373
msgid "``VFIO_USER_DMA_WRITE``"
msgstr ""

#: ../../../interop/vfio-user.rst:364 ../../../interop/vfio-user.rst:397
#: ../../../interop/vfio-user.rst:672 ../../../interop/vfio-user.rst:698
#: ../../../interop/vfio-user.rst:733 ../../../interop/vfio-user.rst:770
#: ../../../interop/vfio-user.rst:910 ../../../interop/vfio-user.rst:932
#: ../../../interop/vfio-user.rst:1070 ../../../interop/vfio-user.rst:1101
#: ../../../interop/vfio-user.rst:1155 ../../../interop/vfio-user.rst:1263
#: ../../../interop/vfio-user.rst:1280 ../../../interop/vfio-user.rst:1307
#: ../../../interop/vfio-user.rst:1327 ../../../interop/vfio-user.rst:1447
msgid "12"
msgstr ""

#: ../../../interop/vfio-user.rst:365 ../../../interop/vfio-user.rst:1411
msgid "``VFIO_USER_DEVICE_RESET``"
msgstr ""

#: ../../../interop/vfio-user.rst:365
msgid "13"
msgstr ""

#: ../../../interop/vfio-user.rst:366 ../../../interop/vfio-user.rst:1417
msgid "``VFIO_USER_REGION_WRITE_MULTI``"
msgstr ""

#: ../../../interop/vfio-user.rst:366
msgid "15"
msgstr ""

#: ../../../interop/vfio-user.rst:370
msgid "Header"
msgstr ""

#: ../../../interop/vfio-user.rst:372
msgid ""
"All messages, both command messages and reply messages, are preceded by a 16-"
"byte header that contains basic information about the message. The header is "
"followed by message-specific data described in the sections below."
msgstr ""

#: ../../../interop/vfio-user.rst:377 ../../../interop/vfio-user.rst:470
#: ../../../interop/vfio-user.rst:550 ../../../interop/vfio-user.rst:617
#: ../../../interop/vfio-user.rst:656 ../../../interop/vfio-user.rst:682
#: ../../../interop/vfio-user.rst:725 ../../../interop/vfio-user.rst:749
#: ../../../interop/vfio-user.rst:814 ../../../interop/vfio-user.rst:852
#: ../../../interop/vfio-user.rst:902 ../../../interop/vfio-user.rst:924
#: ../../../interop/vfio-user.rst:962 ../../../interop/vfio-user.rst:1001
#: ../../../interop/vfio-user.rst:1050 ../../../interop/vfio-user.rst:1081
#: ../../../interop/vfio-user.rst:1131 ../../../interop/vfio-user.rst:1257
#: ../../../interop/vfio-user.rst:1274 ../../../interop/vfio-user.rst:1301
#: ../../../interop/vfio-user.rst:1321 ../../../interop/vfio-user.rst:1344
#: ../../../interop/vfio-user.rst:1359 ../../../interop/vfio-user.rst:1382
#: ../../../interop/vfio-user.rst:1400 ../../../interop/vfio-user.rst:1427
#: ../../../interop/vfio-user.rst:1441 ../../../interop/vfio-user.rst:1462
msgid "Offset"
msgstr ""

#: ../../../interop/vfio-user.rst:377 ../../../interop/vfio-user.rst:470
#: ../../../interop/vfio-user.rst:550 ../../../interop/vfio-user.rst:617
#: ../../../interop/vfio-user.rst:656 ../../../interop/vfio-user.rst:682
#: ../../../interop/vfio-user.rst:725 ../../../interop/vfio-user.rst:749
#: ../../../interop/vfio-user.rst:814 ../../../interop/vfio-user.rst:852
#: ../../../interop/vfio-user.rst:902 ../../../interop/vfio-user.rst:924
#: ../../../interop/vfio-user.rst:962 ../../../interop/vfio-user.rst:1001
#: ../../../interop/vfio-user.rst:1050 ../../../interop/vfio-user.rst:1081
#: ../../../interop/vfio-user.rst:1131 ../../../interop/vfio-user.rst:1257
#: ../../../interop/vfio-user.rst:1274 ../../../interop/vfio-user.rst:1301
#: ../../../interop/vfio-user.rst:1321 ../../../interop/vfio-user.rst:1344
#: ../../../interop/vfio-user.rst:1359 ../../../interop/vfio-user.rst:1382
#: ../../../interop/vfio-user.rst:1400 ../../../interop/vfio-user.rst:1427
#: ../../../interop/vfio-user.rst:1441 ../../../interop/vfio-user.rst:1462
msgid "Size"
msgstr ""

#: ../../../interop/vfio-user.rst:379
msgid "Message ID"
msgstr ""

#: ../../../interop/vfio-user.rst:379 ../../../interop/vfio-user.rst:472
#: ../../../interop/vfio-user.rst:552 ../../../interop/vfio-user.rst:559
#: ../../../interop/vfio-user.rst:619 ../../../interop/vfio-user.rst:658
#: ../../../interop/vfio-user.rst:665 ../../../interop/vfio-user.rst:684
#: ../../../interop/vfio-user.rst:691 ../../../interop/vfio-user.rst:727
#: ../../../interop/vfio-user.rst:751 ../../../interop/vfio-user.rst:758
#: ../../../interop/vfio-user.rst:816 ../../../interop/vfio-user.rst:854
#: ../../../interop/vfio-user.rst:904 ../../../interop/vfio-user.rst:926
#: ../../../interop/vfio-user.rst:964 ../../../interop/vfio-user.rst:1003
#: ../../../interop/vfio-user.rst:1052 ../../../interop/vfio-user.rst:1059
#: ../../../interop/vfio-user.rst:1083 ../../../interop/vfio-user.rst:1090
#: ../../../interop/vfio-user.rst:1133 ../../../interop/vfio-user.rst:1140
#: ../../../interop/vfio-user.rst:1259 ../../../interop/vfio-user.rst:1276
#: ../../../interop/vfio-user.rst:1303 ../../../interop/vfio-user.rst:1323
#: ../../../interop/vfio-user.rst:1346 ../../../interop/vfio-user.rst:1361
#: ../../../interop/vfio-user.rst:1384 ../../../interop/vfio-user.rst:1402
#: ../../../interop/vfio-user.rst:1429 ../../../interop/vfio-user.rst:1443
#: ../../../interop/vfio-user.rst:1464
msgid "0"
msgstr ""

#: ../../../interop/vfio-user.rst:383
msgid "Message size"
msgstr ""

#: ../../../interop/vfio-user.rst:385
msgid "Flags"
msgstr ""

#: ../../../interop/vfio-user.rst:388 ../../../interop/vfio-user.rst:557
#: ../../../interop/vfio-user.rst:663 ../../../interop/vfio-user.rst:689
#: ../../../interop/vfio-user.rst:756 ../../../interop/vfio-user.rst:1057
#: ../../../interop/vfio-user.rst:1088 ../../../interop/vfio-user.rst:1138
msgid "Bit"
msgstr ""

#: ../../../interop/vfio-user.rst:388 ../../../interop/vfio-user.rst:557
#: ../../../interop/vfio-user.rst:663 ../../../interop/vfio-user.rst:689
#: ../../../interop/vfio-user.rst:756 ../../../interop/vfio-user.rst:1057
#: ../../../interop/vfio-user.rst:1088 ../../../interop/vfio-user.rst:1138
msgid "Definition"
msgstr ""

#: ../../../interop/vfio-user.rst:390
msgid "0-3"
msgstr ""

#: ../../../interop/vfio-user.rst:390 ../../../interop/vfio-user.rst:481
#: ../../../interop/vfio-user.rst:490 ../../../interop/vfio-user.rst:519
msgid "Type"
msgstr ""

#: ../../../interop/vfio-user.rst:392
msgid "No_reply"
msgstr ""

#: ../../../interop/vfio-user.rst:394 ../../../interop/vfio-user.rst:397
msgid "Error"
msgstr ""

#: ../../../interop/vfio-user.rst:399
msgid "<message data>"
msgstr ""

#: ../../../interop/vfio-user.rst:399 ../../../interop/vfio-user.rst:566
#: ../../../interop/vfio-user.rst:625 ../../../interop/vfio-user.rst:735
#: ../../../interop/vfio-user.rst:772 ../../../interop/vfio-user.rst:860
#: ../../../interop/vfio-user.rst:934 ../../../interop/vfio-user.rst:968
#: ../../../interop/vfio-user.rst:1007 ../../../interop/vfio-user.rst:1157
#: ../../../interop/vfio-user.rst:1282 ../../../interop/vfio-user.rst:1309
#: ../../../interop/vfio-user.rst:1365 ../../../interop/vfio-user.rst:1388
#: ../../../interop/vfio-user.rst:1449
msgid "16"
msgstr ""

#: ../../../interop/vfio-user.rst:399 ../../../interop/vfio-user.rst:1159
#: ../../../interop/vfio-user.rst:1282 ../../../interop/vfio-user.rst:1309
#: ../../../interop/vfio-user.rst:1365 ../../../interop/vfio-user.rst:1388
#: ../../../interop/vfio-user.rst:1431
msgid "variable"
msgstr ""

#: ../../../interop/vfio-user.rst:402
msgid ""
"*Message ID* identifies the message, and is echoed in the command's reply "
"message. Message IDs belong entirely to the sender, can be re-used (even "
"concurrently) and the receiver must not make any assumptions about their "
"uniqueness."
msgstr ""

#: ../../../interop/vfio-user.rst:406
msgid ""
"*Command* specifies the command to be executed, listed in Commands_. It is "
"also set in the reply header."
msgstr ""

#: ../../../interop/vfio-user.rst:408
msgid ""
"*Message size* contains the size of the entire message, including the header."
msgstr ""

#: ../../../interop/vfio-user.rst:409
msgid "*Flags* contains attributes of the message:"
msgstr ""

#: ../../../interop/vfio-user.rst:411
msgid "The *Type* bits indicate the message type."
msgstr ""

#: ../../../interop/vfio-user.rst:413
msgid "*Command* (value 0x0) indicates a command message."
msgstr ""

#: ../../../interop/vfio-user.rst:414
msgid ""
"*Reply* (value 0x1) indicates a reply message acknowledging a previous "
"command with the same message ID."
msgstr ""

#: ../../../interop/vfio-user.rst:416
msgid ""
"*No_reply* in a command message indicates that no reply is needed for this "
"command.  This is commonly used when multiple commands are sent, and only "
"the last needs acknowledgement."
msgstr ""

#: ../../../interop/vfio-user.rst:419
msgid ""
"*Error* in a reply message indicates the command being acknowledged had an "
"error. In this case, the *Error* field will be valid."
msgstr ""

#: ../../../interop/vfio-user.rst:422
msgid ""
"*Error* in a reply message is an optional UNIX errno value. It may be zero "
"even if the Error bit is set in Flags. It is reserved in a command message."
msgstr ""

#: ../../../interop/vfio-user.rst:425
msgid ""
"Each command message in Commands_ must be replied to with a reply message, "
"unless the message sets the *No_Reply* bit.  The reply consists of the "
"header with the *Reply* bit set, plus any additional data."
msgstr ""

#: ../../../interop/vfio-user.rst:429
msgid ""
"If an error occurs, the reply message must only include the reply header."
msgstr ""

#: ../../../interop/vfio-user.rst:431
msgid ""
"As the header is standard in both requests and replies, it is not included "
"in the command-specific specifications below; each message definition should "
"be appended to the standard header, and the offsets are given from the end "
"of the standard header."
msgstr ""

#: ../../../interop/vfio-user.rst:441
msgid ""
"This is the initial message sent by the client after the socket connection "
"is established; the same format is used for the server's reply."
msgstr ""

#: ../../../interop/vfio-user.rst:444
msgid ""
"Upon establishing a connection, the client must send a ``VFIO_USER_VERSION`` "
"message proposing a protocol version and a set of capabilities. The server "
"compares these with the versions and capabilities it supports and sends a "
"``VFIO_USER_VERSION`` reply according to the following rules."
msgstr ""

#: ../../../interop/vfio-user.rst:449
msgid ""
"The major version in the reply must be the same as proposed. If the client "
"does not support the proposed major, it closes the connection."
msgstr ""

#: ../../../interop/vfio-user.rst:451
msgid ""
"The minor version in the reply must be equal to or less than the minor "
"version proposed."
msgstr ""

#: ../../../interop/vfio-user.rst:453
msgid ""
"The capability list must be a subset of those proposed. If the server "
"requires a capability the client did not include, it closes the connection."
msgstr ""

#: ../../../interop/vfio-user.rst:456
msgid ""
"The protocol major version will only change when incompatible protocol "
"changes are made, such as changing the message format. The minor version may "
"change when compatible changes are made, such as adding new messages or "
"capabilities, Both the client and server must support all minor versions "
"less than the maximum minor version it supports. E.g., an implementation "
"that supports version 1.3 must also support 1.0 through 1.2."
msgstr ""

#: ../../../interop/vfio-user.rst:463
msgid ""
"When making a change to this specification, the protocol version number must "
"be included in the form \"added in version X.Y\""
msgstr ""

#: ../../../interop/vfio-user.rst:467 ../../../interop/vfio-user.rst:545
#: ../../../interop/vfio-user.rst:612 ../../../interop/vfio-user.rst:653
#: ../../../interop/vfio-user.rst:722 ../../../interop/vfio-user.rst:899
#: ../../../interop/vfio-user.rst:1047 ../../../interop/vfio-user.rst:1128
#: ../../../interop/vfio-user.rst:1254 ../../../interop/vfio-user.rst:1298
#: ../../../interop/vfio-user.rst:1341 ../../../interop/vfio-user.rst:1379
#: ../../../interop/vfio-user.rst:1424
msgid "Request"
msgstr ""

#: ../../../interop/vfio-user.rst:472
msgid "version major"
msgstr ""

#: ../../../interop/vfio-user.rst:473
msgid "version minor"
msgstr ""

#: ../../../interop/vfio-user.rst:474
msgid "version data"
msgstr ""

#: ../../../interop/vfio-user.rst:474
msgid "variable (including terminating NUL). Optional."
msgstr ""

#: ../../../interop/vfio-user.rst:477
msgid ""
"The version data is an optional UTF-8 encoded JSON byte array with the "
"following format:"
msgstr ""

#: ../../../interop/vfio-user.rst:481 ../../../interop/vfio-user.rst:490
#: ../../../interop/vfio-user.rst:519
msgid "Description"
msgstr ""

#: ../../../interop/vfio-user.rst:483
msgid "capabilities"
msgstr ""

#: ../../../interop/vfio-user.rst:483 ../../../interop/vfio-user.rst:509
msgid "object"
msgstr ""

#: ../../../interop/vfio-user.rst:483
msgid "Contains common capabilities that the sender supports. Optional."
msgstr ""

#: ../../../interop/vfio-user.rst:487
msgid "Capabilities:"
msgstr ""

#: ../../../interop/vfio-user.rst:492
msgid "max_msg_fds"
msgstr ""

#: ../../../interop/vfio-user.rst:492 ../../../interop/vfio-user.rst:497
#: ../../../interop/vfio-user.rst:501 ../../../interop/vfio-user.rst:505
#: ../../../interop/vfio-user.rst:521 ../../../interop/vfio-user.rst:524
msgid "number"
msgstr ""

#: ../../../interop/vfio-user.rst:492
msgid ""
"Maximum number of file descriptors that can be received by the sender in one "
"message. Optional. If not specified then the receiver must assume a value of "
"``1``."
msgstr ""

#: ../../../interop/vfio-user.rst:497
msgid "max_data_xfer_size"
msgstr ""

#: ../../../interop/vfio-user.rst:497
msgid ""
"Maximum ``count`` for data transfer messages; see `Read and Write "
"Operations`_. Optional, with a default value of 1048576 bytes."
msgstr ""

#: ../../../interop/vfio-user.rst:501
msgid "pgsizes"
msgstr ""

#: ../../../interop/vfio-user.rst:501
msgid ""
"Page sizes supported in DMA map operations or'ed together. Optional, with a "
"default value of supporting only 4k pages."
msgstr ""

#: ../../../interop/vfio-user.rst:505
msgid "max_dma_maps"
msgstr ""

#: ../../../interop/vfio-user.rst:505
msgid ""
"Maximum number DMA map windows that can be valid simultaneously.  Optional, "
"with a value of 65535 (64k-1)."
msgstr ""

#: ../../../interop/vfio-user.rst:509
msgid "migration"
msgstr ""

#: ../../../interop/vfio-user.rst:509
msgid ""
"Migration capability parameters. If missing then migration is not supported "
"by the sender."
msgstr ""

#: ../../../interop/vfio-user.rst:512
msgid "write_multiple"
msgstr ""

#: ../../../interop/vfio-user.rst:512
msgid "boolean"
msgstr ""

#: ../../../interop/vfio-user.rst:512
msgid ""
"``VFIO_USER_REGION_WRITE_MULTI`` messages are supported if the value is "
"``true``."
msgstr ""

#: ../../../interop/vfio-user.rst:516
msgid "The migration capability contains the following name/value pairs:"
msgstr ""

#: ../../../interop/vfio-user.rst:521
msgid "pgsize"
msgstr ""

#: ../../../interop/vfio-user.rst:521
msgid ""
"Page size of dirty pages bitmap. The smallest between the client and the "
"server is used."
msgstr ""

#: ../../../interop/vfio-user.rst:524
msgid "max_bitmap_size"
msgstr ""

#: ../../../interop/vfio-user.rst:524
msgid ""
"Maximum bitmap size in ``VFIO_USER_DIRTY_PAGES`` and ``VFIO_DMA_UNMAP`` "
"messages.  Optional, with a default value of 256MB."
msgstr ""

#: ../../../interop/vfio-user.rst:530 ../../../interop/vfio-user.rst:598
#: ../../../interop/vfio-user.rst:637 ../../../interop/vfio-user.rst:679
#: ../../../interop/vfio-user.rst:746 ../../../interop/vfio-user.rst:921
#: ../../../interop/vfio-user.rst:1078 ../../../interop/vfio-user.rst:1234
#: ../../../interop/vfio-user.rst:1271 ../../../interop/vfio-user.rst:1318
#: ../../../interop/vfio-user.rst:1356 ../../../interop/vfio-user.rst:1397
#: ../../../interop/vfio-user.rst:1459
msgid "Reply"
msgstr ""

#: ../../../interop/vfio-user.rst:532
msgid ""
"The same message format is used in the server's reply with the semantics "
"described above."
msgstr ""

#: ../../../interop/vfio-user.rst:538
msgid ""
"This command message is sent by the client to the server to inform it of the "
"memory regions the server can access. It must be sent before the server can "
"perform any DMA to the client. It is normally sent directly after the "
"version handshake is completed, but may also occur when memory is added to "
"the client, or if the client uses a vIOMMU."
msgstr ""

#: ../../../interop/vfio-user.rst:547 ../../../interop/vfio-user.rst:614
msgid ""
"The request payload for this message is a structure of the following format:"
msgstr ""

#: ../../../interop/vfio-user.rst:552 ../../../interop/vfio-user.rst:619
#: ../../../interop/vfio-user.rst:658 ../../../interop/vfio-user.rst:684
#: ../../../interop/vfio-user.rst:727 ../../../interop/vfio-user.rst:751
#: ../../../interop/vfio-user.rst:904 ../../../interop/vfio-user.rst:926
#: ../../../interop/vfio-user.rst:1052 ../../../interop/vfio-user.rst:1083
#: ../../../interop/vfio-user.rst:1133
msgid "argsz"
msgstr ""

#: ../../../interop/vfio-user.rst:554 ../../../interop/vfio-user.rst:621
#: ../../../interop/vfio-user.rst:660 ../../../interop/vfio-user.rst:686
#: ../../../interop/vfio-user.rst:729 ../../../interop/vfio-user.rst:753
#: ../../../interop/vfio-user.rst:906 ../../../interop/vfio-user.rst:928
#: ../../../interop/vfio-user.rst:972 ../../../interop/vfio-user.rst:1011
#: ../../../interop/vfio-user.rst:1054 ../../../interop/vfio-user.rst:1085
#: ../../../interop/vfio-user.rst:1135
msgid "flags"
msgstr ""

#: ../../../interop/vfio-user.rst:559
msgid "readable"
msgstr ""

#: ../../../interop/vfio-user.rst:561
msgid "writeable"
msgstr ""

#: ../../../interop/vfio-user.rst:564 ../../../interop/vfio-user.rst:737
#: ../../../interop/vfio-user.rst:774 ../../../interop/vfio-user.rst:858
#: ../../../interop/vfio-user.rst:964 ../../../interop/vfio-user.rst:1003
#: ../../../interop/vfio-user.rst:1259 ../../../interop/vfio-user.rst:1276
#: ../../../interop/vfio-user.rst:1303 ../../../interop/vfio-user.rst:1323
#: ../../../interop/vfio-user.rst:1443
msgid "offset"
msgstr ""

#: ../../../interop/vfio-user.rst:566 ../../../interop/vfio-user.rst:623
#: ../../../interop/vfio-user.rst:1346 ../../../interop/vfio-user.rst:1361
#: ../../../interop/vfio-user.rst:1384 ../../../interop/vfio-user.rst:1402
msgid "address"
msgstr ""

#: ../../../interop/vfio-user.rst:568 ../../../interop/vfio-user.rst:625
#: ../../../interop/vfio-user.rst:735 ../../../interop/vfio-user.rst:772
#: ../../../interop/vfio-user.rst:860 ../../../interop/vfio-user.rst:966
#: ../../../interop/vfio-user.rst:1005
msgid "size"
msgstr ""

#: ../../../interop/vfio-user.rst:568 ../../../interop/vfio-user.rst:737
#: ../../../interop/vfio-user.rst:774 ../../../interop/vfio-user.rst:972
#: ../../../interop/vfio-user.rst:1011
msgid "24"
msgstr ""

#: ../../../interop/vfio-user.rst:571
msgid ""
"*argsz* is the size of the above structure. Note there is no reply payload, "
"so this field differs from other message types."
msgstr ""

#: ../../../interop/vfio-user.rst:573
msgid "*flags* contains the following region attributes:"
msgstr ""

#: ../../../interop/vfio-user.rst:575
msgid "*readable* indicates that the region can be read from."
msgstr ""

#: ../../../interop/vfio-user.rst:577
msgid "*writeable* indicates that the region can be written to."
msgstr ""

#: ../../../interop/vfio-user.rst:579
msgid ""
"*offset* is the file offset of the region with respect to the associated "
"file descriptor, or zero if the region is not mappable"
msgstr ""

#: ../../../interop/vfio-user.rst:581
msgid "*address* is the base DMA address of the region."
msgstr ""

#: ../../../interop/vfio-user.rst:582 ../../../interop/vfio-user.rst:796
msgid "*size* is the size of the region."
msgstr ""

#: ../../../interop/vfio-user.rst:584
msgid ""
"This structure is 32 bytes in size, so the message size is 16 + 32 bytes."
msgstr ""

#: ../../../interop/vfio-user.rst:586
msgid ""
"If the DMA region being added can be directly mapped by the server, a file "
"descriptor must be sent as part of the message meta-data. The region can be "
"mapped via the mmap() system call. On ``AF_UNIX`` sockets, the file "
"descriptor must be passed as ``SCM_RIGHTS`` type ancillary data.  Otherwise, "
"if the DMA region cannot be directly mapped by the server, no file "
"descriptor must be sent as part of the message meta-data and the DMA region "
"can be accessed by the server using ``VFIO_USER_DMA_READ`` and "
"``VFIO_USER_DMA_WRITE`` messages, explained in `Read and Write Operations`_. "
"A command to map over an existing region must be failed by the server with "
"``EEXIST`` set in error field in the reply."
msgstr ""

#: ../../../interop/vfio-user.rst:600
msgid "There is no payload in the reply message."
msgstr ""

#: ../../../interop/vfio-user.rst:605
msgid ""
"This command message is sent by the client to the server to inform it that a "
"DMA region, previously made available via a ``VFIO_USER_DMA_MAP`` command "
"message, is no longer available for DMA. It typically occurs when memory is "
"subtracted from the client or if the client uses a vIOMMU. The DMA region is "
"described by the following structure:"
msgstr ""

#: ../../../interop/vfio-user.rst:628
msgid "*argsz* is the maximum size of the reply payload."
msgstr ""

#: ../../../interop/vfio-user.rst:629
msgid "*flags* is unused in this version."
msgstr ""

#: ../../../interop/vfio-user.rst:630
msgid "*address* is the base DMA address of the DMA region."
msgstr ""

#: ../../../interop/vfio-user.rst:631
msgid "*size* is the size of the DMA region."
msgstr ""

#: ../../../interop/vfio-user.rst:633
msgid ""
"The address and size of the DMA region being unmapped must match exactly a "
"previous mapping."
msgstr ""

#: ../../../interop/vfio-user.rst:639
msgid ""
"Upon receiving a ``VFIO_USER_DMA_UNMAP`` command, if the file descriptor is "
"mapped then the server must release all references to that DMA region before "
"replying, which potentially includes in-flight DMA transactions."
msgstr ""

#: ../../../interop/vfio-user.rst:643
msgid "The server responds with the original DMA entry in the request."
msgstr ""

#: ../../../interop/vfio-user.rst:649
msgid ""
"This command message is sent by the client to the server to query for basic "
"information about the device."
msgstr ""

#: ../../../interop/vfio-user.rst:665 ../../../interop/vfio-user.rst:691
msgid "VFIO_DEVICE_FLAGS_RESET"
msgstr ""

#: ../../../interop/vfio-user.rst:667 ../../../interop/vfio-user.rst:693
msgid "VFIO_DEVICE_FLAGS_PCI"
msgstr ""

#: ../../../interop/vfio-user.rst:670 ../../../interop/vfio-user.rst:696
msgid "num_regions"
msgstr ""

#: ../../../interop/vfio-user.rst:672 ../../../interop/vfio-user.rst:698
msgid "num_irqs"
msgstr ""

#: ../../../interop/vfio-user.rst:675
msgid "*argsz* is the maximum size of the reply payload"
msgstr ""

#: ../../../interop/vfio-user.rst:676 ../../../interop/vfio-user.rst:743
msgid "all other fields must be zero."
msgstr ""

#: ../../../interop/vfio-user.rst:701 ../../../interop/vfio-user.rst:1104
msgid ""
"*argsz* is the size required for the full reply payload (16 bytes today)"
msgstr ""

#: ../../../interop/vfio-user.rst:702
msgid "*flags* contains the following device attributes."
msgstr ""

#: ../../../interop/vfio-user.rst:704
msgid ""
"``VFIO_DEVICE_FLAGS_RESET`` indicates that the device supports the "
"``VFIO_USER_DEVICE_RESET`` message."
msgstr ""

#: ../../../interop/vfio-user.rst:706
msgid "``VFIO_DEVICE_FLAGS_PCI`` indicates that the device is a PCI device."
msgstr ""

#: ../../../interop/vfio-user.rst:708
msgid "*num_regions* is the number of memory regions that the device exposes."
msgstr ""

#: ../../../interop/vfio-user.rst:709
msgid ""
"*num_irqs* is the number of distinct interrupt types that the device "
"supports."
msgstr ""

#: ../../../interop/vfio-user.rst:711
msgid ""
"This version of the protocol only supports PCI devices. Additional devices "
"may be supported in future versions."
msgstr ""

#: ../../../interop/vfio-user.rst:717
msgid ""
"This command message is sent by the client to the server to query for "
"information about device regions. The VFIO region info structure is defined "
"in ``<linux/vfio.h>`` (``struct vfio_region_info``)."
msgstr ""

#: ../../../interop/vfio-user.rst:731 ../../../interop/vfio-user.rst:768
#: ../../../interop/vfio-user.rst:908 ../../../interop/vfio-user.rst:930
#: ../../../interop/vfio-user.rst:1068 ../../../interop/vfio-user.rst:1099
#: ../../../interop/vfio-user.rst:1153
msgid "index"
msgstr ""

#: ../../../interop/vfio-user.rst:733 ../../../interop/vfio-user.rst:770
msgid "cap_offset"
msgstr ""

#: ../../../interop/vfio-user.rst:740 ../../../interop/vfio-user.rst:913
msgid "*argsz* the maximum size of the reply payload"
msgstr ""

#: ../../../interop/vfio-user.rst:741 ../../../interop/vfio-user.rst:790
msgid ""
"*index* is the index of memory region being queried, it is the only field "
"that is required to be set in the command message."
msgstr ""

#: ../../../interop/vfio-user.rst:758
msgid "VFIO_REGION_INFO_FLAG_READ"
msgstr ""

#: ../../../interop/vfio-user.rst:760
msgid "VFIO_REGION_INFO_FLAG_WRITE"
msgstr ""

#: ../../../interop/vfio-user.rst:762
msgid "VFIO_REGION_INFO_FLAG_MMAP"
msgstr ""

#: ../../../interop/vfio-user.rst:764
msgid "VFIO_REGION_INFO_FLAG_CAPS"
msgstr ""

#: ../../../interop/vfio-user.rst:777
msgid ""
"*argsz* is the size required for the full reply payload (region info "
"structure plus the size of any region capabilities)"
msgstr ""

#: ../../../interop/vfio-user.rst:779
msgid "*flags* are attributes of the region:"
msgstr ""

#: ../../../interop/vfio-user.rst:781
msgid "``VFIO_REGION_INFO_FLAG_READ`` allows client read access to the region."
msgstr ""

#: ../../../interop/vfio-user.rst:782
msgid ""
"``VFIO_REGION_INFO_FLAG_WRITE`` allows client write access to the region."
msgstr ""

#: ../../../interop/vfio-user.rst:783
msgid ""
"``VFIO_REGION_INFO_FLAG_MMAP`` specifies the client can mmap() the region. "
"When this flag is set, the reply will include a file descriptor in its meta-"
"data. On ``AF_UNIX`` sockets, the file descriptors will be passed as "
"``SCM_RIGHTS`` type ancillary data."
msgstr ""

#: ../../../interop/vfio-user.rst:787
msgid ""
"``VFIO_REGION_INFO_FLAG_CAPS`` indicates additional capabilities found in "
"the reply."
msgstr ""

#: ../../../interop/vfio-user.rst:792
msgid ""
"*cap_offset* describes where additional region capabilities can be found. "
"cap_offset is relative to the beginning of the VFIO region info structure. "
"The data structure it points is a VFIO cap header defined in ``<linux/vfio."
"h>``."
msgstr ""

#: ../../../interop/vfio-user.rst:797
msgid ""
"*offset* is the offset that should be given to the mmap() system call for "
"regions with the MMAP attribute. It is also used as the base offset when "
"mapping a VFIO sparse mmap area, described below."
msgstr ""

#: ../../../interop/vfio-user.rst:802
msgid "VFIO region capabilities"
msgstr ""

#: ../../../interop/vfio-user.rst:804
msgid ""
"The VFIO region information can also include a capabilities list. This list "
"is similar to a PCI capability list - each entry has a common header that "
"identifies a capability and where the next capability in the list can be "
"found. The VFIO capability header format is defined in ``<linux/vfio.h>`` "
"(``struct vfio_info_cap_header``)."
msgstr ""

#: ../../../interop/vfio-user.rst:811
msgid "VFIO cap header format"
msgstr ""

#: ../../../interop/vfio-user.rst:816 ../../../interop/vfio-user.rst:834
msgid "id"
msgstr ""

#: ../../../interop/vfio-user.rst:818 ../../../interop/vfio-user.rst:836
msgid "version"
msgstr ""

#: ../../../interop/vfio-user.rst:820 ../../../interop/vfio-user.rst:838
msgid "next"
msgstr ""

#: ../../../interop/vfio-user.rst:823
msgid "*id* is the capability identity."
msgstr ""

#: ../../../interop/vfio-user.rst:824
msgid "*version* is a capability-specific version number."
msgstr ""

#: ../../../interop/vfio-user.rst:825
msgid ""
"*next* specifies the offset of the next capability in the capability list. "
"It is relative to the beginning of the VFIO region info structure."
msgstr ""

#: ../../../interop/vfio-user.rst:829
msgid "VFIO sparse mmap cap header"
msgstr ""

#: ../../../interop/vfio-user.rst:832
msgid "Value"
msgstr ""

#: ../../../interop/vfio-user.rst:834
msgid "VFIO_REGION_INFO_CAP_SPARSE_MMAP"
msgstr ""

#: ../../../interop/vfio-user.rst:836
msgid "0x1"
msgstr ""

#: ../../../interop/vfio-user.rst:838
msgid "<next>"
msgstr ""

#: ../../../interop/vfio-user.rst:840
msgid "sparse mmap info"
msgstr ""

#: ../../../interop/vfio-user.rst:840
msgid "VFIO region info sparse mmap"
msgstr ""

#: ../../../interop/vfio-user.rst:843
msgid ""
"This capability is defined when only a subrange of the region supports "
"direct access by the client via mmap(). The VFIO sparse mmap area is defined "
"in ``<linux/vfio.h>`` (``struct vfio_region_sparse_mmap_area`` and ``struct "
"vfio_region_info_cap_sparse_mmap``)."
msgstr ""

#: ../../../interop/vfio-user.rst:849
msgid "VFIO region info cap sparse mmap"
msgstr ""

#: ../../../interop/vfio-user.rst:854
msgid "nr_areas"
msgstr ""

#: ../../../interop/vfio-user.rst:856
msgid "reserved"
msgstr ""

#: ../../../interop/vfio-user.rst:862 ../../../interop/vfio-user.rst:934
msgid "..."
msgstr ""

#: ../../../interop/vfio-user.rst:865
msgid "*nr_areas* is the number of sparse mmap areas in the region."
msgstr ""

#: ../../../interop/vfio-user.rst:866
msgid ""
"*offset* and size describe a single area that can be mapped by the client. "
"There will be *nr_areas* pairs of offset and size. The offset will be added "
"to the base offset given in the ``VFIO_USER_DEVICE_GET_REGION_INFO`` to form "
"the offset argument of the subsequent mmap() call."
msgstr ""

#: ../../../interop/vfio-user.rst:871
msgid ""
"The VFIO sparse mmap area is defined in ``<linux/vfio.h>`` (``struct "
"vfio_region_info_cap_sparse_mmap``)."
msgstr ""

#: ../../../interop/vfio-user.rst:878
msgid ""
"Clients can access regions via ``VFIO_USER_REGION_READ/WRITE`` or, if "
"provided, by ``mmap()`` of a file descriptor provided by the server."
msgstr ""

#: ../../../interop/vfio-user.rst:881
msgid ""
"``VFIO_USER_DEVICE_GET_REGION_IO_FDS`` provides an alternative access "
"mechanism via file descriptors. This is an optional feature intended for "
"performance improvements where an underlying sub-system (such as KVM) "
"supports communication across such file descriptors to the vfio-user server, "
"without needing to round-trip through the client."
msgstr ""

#: ../../../interop/vfio-user.rst:887
msgid ""
"The server returns an array of sub-regions for the requested region. Each "
"sub-region describes a span (offset and size) of a region, along with the "
"requested file descriptor notification mechanism to use.  Each sub-region in "
"the response message may choose to use a different method, as defined "
"below.  The two mechanisms supported in this specification are ioeventfds "
"and ioregionfds."
msgstr ""

#: ../../../interop/vfio-user.rst:893
msgid ""
"The server in addition returns a file descriptor in the ancillary data; "
"clients are expected to configure each sub-region's file descriptor with the "
"requested notification method. For example, a client could configure KVM "
"with the requested ioeventfd via a ``KVM_IOEVENTFD`` ``ioctl()``."
msgstr ""

#: ../../../interop/vfio-user.rst:910 ../../../interop/vfio-user.rst:932
#: ../../../interop/vfio-user.rst:1070 ../../../interop/vfio-user.rst:1101
#: ../../../interop/vfio-user.rst:1157 ../../../interop/vfio-user.rst:1263
#: ../../../interop/vfio-user.rst:1280 ../../../interop/vfio-user.rst:1307
#: ../../../interop/vfio-user.rst:1327 ../../../interop/vfio-user.rst:1348
#: ../../../interop/vfio-user.rst:1363 ../../../interop/vfio-user.rst:1386
#: ../../../interop/vfio-user.rst:1404 ../../../interop/vfio-user.rst:1447
msgid "count"
msgstr ""

#: ../../../interop/vfio-user.rst:914 ../../../interop/vfio-user.rst:943
msgid "*index* is the index of memory region being queried"
msgstr ""

#: ../../../interop/vfio-user.rst:915 ../../../interop/vfio-user.rst:1075
msgid "all other fields must be zero"
msgstr ""

#: ../../../interop/vfio-user.rst:917
msgid ""
"The client must set ``flags`` to zero and specify the region being queried "
"in the ``index``."
msgstr ""

#: ../../../interop/vfio-user.rst:934
msgid "sub-regions"
msgstr ""

#: ../../../interop/vfio-user.rst:937
msgid ""
"*argsz* is the size of the region IO FD info structure plus the total size "
"of the sub-region array. Thus, each array entry \"i\" is at offset i * "
"((argsz - 32) / count). Note that currently this is 40 bytes for both IO FD "
"types, but this is not to be relied on. As elsewhere, this indicates the "
"full reply payload size needed."
msgstr ""

#: ../../../interop/vfio-user.rst:942
msgid "*flags* must be zero"
msgstr ""

#: ../../../interop/vfio-user.rst:944
msgid "*count* is the number of sub-regions in the array"
msgstr ""

#: ../../../interop/vfio-user.rst:945
msgid "*sub-regions* is the array of Sub-Region IO FD info structures"
msgstr ""

#: ../../../interop/vfio-user.rst:947
msgid ""
"The reply message will additionally include at least one file descriptor in "
"the ancillary data. Note that more than one sub-region may share the same "
"file descriptor."
msgstr ""

#: ../../../interop/vfio-user.rst:951
msgid ""
"Note that it is the client's responsibility to verify the requested values "
"(for example, that the requested offset does not exceed the region's bounds)."
msgstr ""

#: ../../../interop/vfio-user.rst:954
msgid ""
"Each sub-region given in the response has one of two possible structures, "
"depending whether *type* is ``VFIO_USER_IO_FD_TYPE_IOEVENTFD`` or "
"``VFIO_USER_IO_FD_TYPE_IOREGIONFD``:"
msgstr ""

#: ../../../interop/vfio-user.rst:959
msgid "Sub-Region IO FD info format (ioeventfd)"
msgstr ""

#: ../../../interop/vfio-user.rst:968 ../../../interop/vfio-user.rst:1007
msgid "fd_index"
msgstr ""

#: ../../../interop/vfio-user.rst:970 ../../../interop/vfio-user.rst:1009
msgid "type"
msgstr ""

#: ../../../interop/vfio-user.rst:970 ../../../interop/vfio-user.rst:1009
#: ../../../interop/vfio-user.rst:1159
msgid "20"
msgstr ""

#: ../../../interop/vfio-user.rst:974 ../../../interop/vfio-user.rst:1013
msgid "padding"
msgstr ""

#: ../../../interop/vfio-user.rst:974 ../../../interop/vfio-user.rst:1013
msgid "28"
msgstr ""

#: ../../../interop/vfio-user.rst:976
msgid "datamatch"
msgstr ""

#: ../../../interop/vfio-user.rst:976 ../../../interop/vfio-user.rst:1015
msgid "32"
msgstr ""

#: ../../../interop/vfio-user.rst:979 ../../../interop/vfio-user.rst:1018
msgid ""
"*offset* is the offset of the start of the sub-region within the region "
"requested (\"physical address offset\" for the region)"
msgstr ""

#: ../../../interop/vfio-user.rst:981
msgid ""
"*size* is the length of the sub-region. This may be zero if the access size "
"is not relevant, which may allow for optimizations"
msgstr ""

#: ../../../interop/vfio-user.rst:983
msgid ""
"*fd_index* is the index in the ancillary data of the FD to use for ioeventfd "
"notification; it may be shared."
msgstr ""

#: ../../../interop/vfio-user.rst:985
msgid "*type* is ``VFIO_USER_IO_FD_TYPE_IOEVENTFD``"
msgstr ""

#: ../../../interop/vfio-user.rst:986 ../../../interop/vfio-user.rst:1026
msgid "*flags* is any of:"
msgstr ""

#: ../../../interop/vfio-user.rst:988
msgid "``KVM_IOEVENTFD_FLAG_DATAMATCH``"
msgstr ""

#: ../../../interop/vfio-user.rst:989
msgid "``KVM_IOEVENTFD_FLAG_PIO``"
msgstr ""

#: ../../../interop/vfio-user.rst:990
msgid "``KVM_IOEVENTFD_FLAG_VIRTIO_CCW_NOTIFY`` (FIXME: makes sense?)"
msgstr ""

#: ../../../interop/vfio-user.rst:992
msgid "*datamatch* is the datamatch value if needed"
msgstr ""

#: ../../../interop/vfio-user.rst:994
msgid ""
"See https://www.kernel.org/doc/Documentation/virtual/kvm/api.txt, *4.59 "
"KVM_IOEVENTFD* for further context on the ioeventfd-specific fields."
msgstr ""

#: ../../../interop/vfio-user.rst:998
msgid "Sub-Region IO FD info format (ioregionfd)"
msgstr ""

#: ../../../interop/vfio-user.rst:1015
msgid "user_data"
msgstr ""

#: ../../../interop/vfio-user.rst:1020
msgid ""
"*size* is the length of the sub-region. This may be zero if the access size "
"is not relevant, which may allow for optimizations; "
"``KVM_IOREGION_POSTED_WRITES`` must be set in *flags* in this case"
msgstr ""

#: ../../../interop/vfio-user.rst:1023
msgid ""
"*fd_index* is the index in the ancillary data of the FD to use for "
"ioregionfd messages; it may be shared"
msgstr ""

#: ../../../interop/vfio-user.rst:1025
msgid "*type* is ``VFIO_USER_IO_FD_TYPE_IOREGIONFD``"
msgstr ""

#: ../../../interop/vfio-user.rst:1028
msgid "``KVM_IOREGION_PIO``"
msgstr ""

#: ../../../interop/vfio-user.rst:1029
msgid "``KVM_IOREGION_POSTED_WRITES``"
msgstr ""

#: ../../../interop/vfio-user.rst:1031
msgid ""
"*user_data* is an opaque value passed back to the server via a message on "
"the file descriptor"
msgstr ""

#: ../../../interop/vfio-user.rst:1034
msgid ""
"For further information on the ioregionfd-specific fields, see: https://lore."
"kernel.org/kvm/cover.1613828726.git.eafanasova@gmail.com/"
msgstr ""

#: ../../../interop/vfio-user.rst:1037
msgid "(FIXME: update with final API docs.)"
msgstr ""

#: ../../../interop/vfio-user.rst:1042
msgid ""
"This command message is sent by the client to the server to query for "
"information about device interrupt types. The VFIO IRQ info structure is "
"defined in ``<linux/vfio.h>`` (``struct vfio_irq_info``)."
msgstr ""

#: ../../../interop/vfio-user.rst:1059 ../../../interop/vfio-user.rst:1090
msgid "VFIO_IRQ_INFO_EVENTFD"
msgstr ""

#: ../../../interop/vfio-user.rst:1061 ../../../interop/vfio-user.rst:1092
msgid "VFIO_IRQ_INFO_MASKABLE"
msgstr ""

#: ../../../interop/vfio-user.rst:1063 ../../../interop/vfio-user.rst:1094
msgid "VFIO_IRQ_INFO_AUTOMASKED"
msgstr ""

#: ../../../interop/vfio-user.rst:1065 ../../../interop/vfio-user.rst:1096
msgid "VFIO_IRQ_INFO_NORESIZE"
msgstr ""

#: ../../../interop/vfio-user.rst:1073
msgid "*argsz* is the maximum size of the reply payload (16 bytes today)"
msgstr ""

#: ../../../interop/vfio-user.rst:1074
msgid ""
"index is the index of IRQ type being queried (e.g. "
"``VFIO_PCI_MSIX_IRQ_INDEX``)"
msgstr ""

#: ../../../interop/vfio-user.rst:1105
msgid "*flags* defines IRQ attributes:"
msgstr ""

#: ../../../interop/vfio-user.rst:1107
msgid ""
"``VFIO_IRQ_INFO_EVENTFD`` indicates the IRQ type can support server eventfd "
"signalling."
msgstr ""

#: ../../../interop/vfio-user.rst:1109
msgid ""
"``VFIO_IRQ_INFO_MASKABLE`` indicates that the IRQ type supports the ``MASK`` "
"and ``UNMASK`` actions in a ``VFIO_USER_DEVICE_SET_IRQS`` message."
msgstr ""

#: ../../../interop/vfio-user.rst:1111
msgid ""
"``VFIO_IRQ_INFO_AUTOMASKED`` indicates the IRQ type masks itself after being "
"triggered, and the client must send an ``UNMASK`` action to receive new "
"interrupts."
msgstr ""

#: ../../../interop/vfio-user.rst:1114
msgid ""
"``VFIO_IRQ_INFO_NORESIZE`` indicates ``VFIO_USER_SET_IRQS`` operations setup "
"interrupts as a set, and new sub-indexes cannot be enabled without disabling "
"the entire type."
msgstr ""

#: ../../../interop/vfio-user.rst:1117
msgid "index is the index of IRQ type being queried"
msgstr ""

#: ../../../interop/vfio-user.rst:1118
msgid "count describes the number of interrupts of the queried type."
msgstr ""

#: ../../../interop/vfio-user.rst:1123
msgid ""
"This command message is sent by the client to the server to set actions for "
"device interrupt types. The VFIO IRQ set structure is defined in ``<linux/"
"vfio.h>`` (``struct vfio_irq_set``)."
msgstr ""

#: ../../../interop/vfio-user.rst:1140
msgid "VFIO_IRQ_SET_DATA_NONE"
msgstr ""

#: ../../../interop/vfio-user.rst:1142
msgid "VFIO_IRQ_SET_DATA_BOOL"
msgstr ""

#: ../../../interop/vfio-user.rst:1144
msgid "VFIO_IRQ_SET_DATA_EVENTFD"
msgstr ""

#: ../../../interop/vfio-user.rst:1146
msgid "VFIO_IRQ_SET_ACTION_MASK"
msgstr ""

#: ../../../interop/vfio-user.rst:1148
msgid "VFIO_IRQ_SET_ACTION_UNMASK"
msgstr ""

#: ../../../interop/vfio-user.rst:1150
msgid "VFIO_IRQ_SET_ACTION_TRIGGER"
msgstr ""

#: ../../../interop/vfio-user.rst:1155
msgid "start"
msgstr ""

#: ../../../interop/vfio-user.rst:1159 ../../../interop/vfio-user.rst:1282
#: ../../../interop/vfio-user.rst:1309 ../../../interop/vfio-user.rst:1365
#: ../../../interop/vfio-user.rst:1388 ../../../interop/vfio-user.rst:1449
msgid "data"
msgstr ""

#: ../../../interop/vfio-user.rst:1162
msgid ""
"*argsz* is the size of the VFIO IRQ set request payload, including any "
"*data* field. Note there is no reply payload, so this field differs from "
"other message types."
msgstr ""

#: ../../../interop/vfio-user.rst:1165
msgid ""
"*flags* defines the action performed on the interrupt range. The ``DATA`` "
"flags describe the data field sent in the message; the ``ACTION`` flags "
"describe the action to be performed. The flags are mutually exclusive for "
"both sets."
msgstr ""

#: ../../../interop/vfio-user.rst:1170
msgid ""
"``VFIO_IRQ_SET_DATA_NONE`` indicates there is no data field in the command. "
"The action is performed unconditionally."
msgstr ""

#: ../../../interop/vfio-user.rst:1172
msgid ""
"``VFIO_IRQ_SET_DATA_BOOL`` indicates the data field is an array of boolean "
"bytes. The action is performed if the corresponding boolean is true."
msgstr ""

#: ../../../interop/vfio-user.rst:1174
msgid ""
"``VFIO_IRQ_SET_DATA_EVENTFD`` indicates an array of event file descriptors "
"was sent in the message meta-data. These descriptors will be signalled when "
"the action defined by the action flags occurs. In ``AF_UNIX`` sockets, the "
"descriptors are sent as ``SCM_RIGHTS`` type ancillary data. If no file "
"descriptors are provided, this de-assigns the specified previously "
"configured interrupts."
msgstr ""

#: ../../../interop/vfio-user.rst:1180
msgid ""
"``VFIO_IRQ_SET_ACTION_MASK`` indicates a masking event. It can be used with "
"``VFIO_IRQ_SET_DATA_BOOL`` or ``VFIO_IRQ_SET_DATA_NONE`` to mask an "
"interrupt, or with ``VFIO_IRQ_SET_DATA_EVENTFD`` to generate an event when "
"the guest masks the interrupt."
msgstr ""

#: ../../../interop/vfio-user.rst:1184
msgid ""
"``VFIO_IRQ_SET_ACTION_UNMASK`` indicates an unmasking event. It can be used "
"with ``VFIO_IRQ_SET_DATA_BOOL`` or ``VFIO_IRQ_SET_DATA_NONE`` to unmask an "
"interrupt, or with ``VFIO_IRQ_SET_DATA_EVENTFD`` to generate an event when "
"the guest unmasks the interrupt."
msgstr ""

#: ../../../interop/vfio-user.rst:1188
msgid ""
"``VFIO_IRQ_SET_ACTION_TRIGGER`` indicates a triggering event. It can be used "
"with ``VFIO_IRQ_SET_DATA_BOOL`` or ``VFIO_IRQ_SET_DATA_NONE`` to trigger an "
"interrupt, or with ``VFIO_IRQ_SET_DATA_EVENTFD`` to generate an event when "
"the server triggers the interrupt."
msgstr ""

#: ../../../interop/vfio-user.rst:1193
msgid "*index* is the index of IRQ type being setup."
msgstr ""

#: ../../../interop/vfio-user.rst:1194
msgid "*start* is the start of the sub-index being set."
msgstr ""

#: ../../../interop/vfio-user.rst:1195
msgid ""
"*count* describes the number of sub-indexes being set. As a special case, a "
"count (and start) of 0, with data flags of ``VFIO_IRQ_SET_DATA_NONE`` "
"disables all interrupts of the index."
msgstr ""

#: ../../../interop/vfio-user.rst:1198
msgid ""
"*data* is an optional field included when the ``VFIO_IRQ_SET_DATA_BOOL`` "
"flag is present. It contains an array of booleans that specify whether the "
"action is to be performed on the corresponding index. It's used when the "
"action is only performed on a subset of the range specified."
msgstr ""

#: ../../../interop/vfio-user.rst:1204
msgid ""
"Not all interrupt types support every combination of data and action flags. "
"The client must know the capabilities of the device and IRQ index before it "
"sends a ``VFIO_USER_DEVICE_SET_IRQ`` message."
msgstr ""

#: ../../../interop/vfio-user.rst:1208
msgid "In typical operation, a specific IRQ may operate as follows:"
msgstr ""

#: ../../../interop/vfio-user.rst:1210
msgid ""
"The client sends a ``VFIO_USER_DEVICE_SET_IRQ`` message with "
"``flags=(VFIO_IRQ_SET_DATA_EVENTFD|VFIO_IRQ_SET_ACTION_TRIGGER)`` along with "
"an eventfd. This associates the IRQ with a particular eventfd on the server "
"side."
msgstr ""

#: ../../../interop/vfio-user.rst:1215
msgid ""
"The client may send a ``VFIO_USER_DEVICE_SET_IRQ`` message with "
"``flags=(VFIO_IRQ_SET_DATA_EVENTFD|VFIO_IRQ_SET_ACTION_MASK/UNMASK)`` along "
"with another eventfd. This associates the given eventfd with the mask/unmask "
"state on the server side."
msgstr ""

#: ../../../interop/vfio-user.rst:1220
msgid "The server may trigger the IRQ by writing 1 to the eventfd."
msgstr ""

#: ../../../interop/vfio-user.rst:1222
msgid ""
"The server may mask/unmask an IRQ which will write 1 to the corresponding "
"mask/unmask eventfd, if there is one."
msgstr ""

#: ../../../interop/vfio-user.rst:1225
msgid ""
"A client may trigger a device IRQ itself, by sending a "
"``VFIO_USER_DEVICE_SET_IRQ`` message with ``flags=(VFIO_IRQ_SET_DATA_NONE/"
"BOOL|VFIO_IRQ_SET_ACTION_TRIGGER)``."
msgstr ""

#: ../../../interop/vfio-user.rst:1229
msgid ""
"A client may mask or unmask the IRQ, by sending a "
"``VFIO_USER_DEVICE_SET_IRQ`` message with ``flags=(VFIO_IRQ_SET_DATA_NONE/"
"BOOL|VFIO_IRQ_SET_ACTION_MASK/UNMASK)``."
msgstr ""

#: ../../../interop/vfio-user.rst:1236
msgid "There is no payload in the reply."
msgstr ""

#: ../../../interop/vfio-user.rst:1240
msgid ""
"Note that all of these operations must be supported by the client and/or "
"server, even if the corresponding memory or device region has been shared as "
"mappable."
msgstr ""

#: ../../../interop/vfio-user.rst:1243
msgid ""
"The ``count`` field must not exceed the value of ``max_data_xfer_size`` of "
"the peer, for both reads and writes."
msgstr ""

#: ../../../interop/vfio-user.rst:1249
msgid ""
"If a device region is not mappable, it's not directly accessible by the "
"client via ``mmap()`` of the underlying file descriptor. In this case, a "
"client can read from a device region with this message."
msgstr ""

#: ../../../interop/vfio-user.rst:1261 ../../../interop/vfio-user.rst:1278
#: ../../../interop/vfio-user.rst:1305 ../../../interop/vfio-user.rst:1325
#: ../../../interop/vfio-user.rst:1445
msgid "region"
msgstr ""

#: ../../../interop/vfio-user.rst:1266 ../../../interop/vfio-user.rst:1312
#: ../../../interop/vfio-user.rst:1452
msgid "*offset* into the region being accessed."
msgstr ""

#: ../../../interop/vfio-user.rst:1267 ../../../interop/vfio-user.rst:1313
#: ../../../interop/vfio-user.rst:1453
msgid "*region* is the index of the region being accessed."
msgstr ""

#: ../../../interop/vfio-user.rst:1268 ../../../interop/vfio-user.rst:1314
#: ../../../interop/vfio-user.rst:1353 ../../../interop/vfio-user.rst:1393
msgid "*count* is the size of the data to be transferred."
msgstr ""

#: ../../../interop/vfio-user.rst:1285 ../../../interop/vfio-user.rst:1330
msgid "*offset* into the region accessed."
msgstr ""

#: ../../../interop/vfio-user.rst:1286 ../../../interop/vfio-user.rst:1331
msgid "*region* is the index of the region accessed."
msgstr ""

#: ../../../interop/vfio-user.rst:1287 ../../../interop/vfio-user.rst:1332
#: ../../../interop/vfio-user.rst:1369 ../../../interop/vfio-user.rst:1408
msgid "*count* is the size of the data transferred."
msgstr ""

#: ../../../interop/vfio-user.rst:1288
msgid "*data* is the data that was read from the device region."
msgstr ""

#: ../../../interop/vfio-user.rst:1293
msgid ""
"If a device region is not mappable, it's not directly accessible by the "
"client via mmap() of the underlying fd. In this case, a client can write to "
"a device region with this message."
msgstr ""

#: ../../../interop/vfio-user.rst:1315 ../../../interop/vfio-user.rst:1394
msgid "*data* is the data to write"
msgstr ""

#: ../../../interop/vfio-user.rst:1337
msgid ""
"If the client has not shared mappable memory, the server can use this "
"message to read from guest memory."
msgstr ""

#: ../../../interop/vfio-user.rst:1351 ../../../interop/vfio-user.rst:1391
msgid ""
"*address* is the client DMA memory address being accessed. This address must "
"have been previously exported to the server with a ``VFIO_USER_DMA_MAP`` "
"message."
msgstr ""

#: ../../../interop/vfio-user.rst:1368 ../../../interop/vfio-user.rst:1407
msgid "*address* is the client DMA memory address being accessed."
msgstr ""

#: ../../../interop/vfio-user.rst:1370
msgid "*data* is the data read."
msgstr ""

#: ../../../interop/vfio-user.rst:1375
msgid ""
"If the client has not shared mappable memory, the server can use this "
"message to write to guest memory."
msgstr ""

#: ../../../interop/vfio-user.rst:1413
msgid ""
"This command message is sent from the client to the server to reset the "
"device. Neither the request or reply have a payload."
msgstr ""

#: ../../../interop/vfio-user.rst:1419
msgid ""
"This message can be used to coalesce multiple device write operations into a "
"single messgage.  It is only used as an optimization when the outgoing "
"message queue is relatively full."
msgstr ""

#: ../../../interop/vfio-user.rst:1429 ../../../interop/vfio-user.rst:1464
msgid "wr_cnt"
msgstr ""

#: ../../../interop/vfio-user.rst:1431
msgid "wrs"
msgstr ""

#: ../../../interop/vfio-user.rst:1434
msgid "*wr_cnt* is the number of device writes coalesced in the message"
msgstr ""

#: ../../../interop/vfio-user.rst:1435
msgid "*wrs* is an array of device writes defined below"
msgstr ""

#: ../../../interop/vfio-user.rst:1438
msgid "Single Device Write Format"
msgstr ""

#: ../../../interop/vfio-user.rst:1454
msgid ""
"*count* is the size of the data to be transferred.  This format can only "
"describe writes of 8 bytes or less."
msgstr ""

#: ../../../interop/vfio-user.rst:1456
msgid "*data* is the data to write."
msgstr ""

#: ../../../interop/vfio-user.rst:1467
msgid "*wr_cnt* is the number of device writes completed."
msgstr ""

#: ../../../interop/vfio-user.rst:1471
msgid "Appendices"
msgstr ""

#: ../../../interop/vfio-user.rst:1474
msgid "Unused VFIO ``ioctl()`` commands"
msgstr ""

#: ../../../interop/vfio-user.rst:1476
msgid ""
"The following VFIO commands do not have an equivalent vfio-user command:"
msgstr ""

#: ../../../interop/vfio-user.rst:1478
msgid "``VFIO_GET_API_VERSION``"
msgstr ""

#: ../../../interop/vfio-user.rst:1479
msgid "``VFIO_CHECK_EXTENSION``"
msgstr ""

#: ../../../interop/vfio-user.rst:1480
msgid "``VFIO_SET_IOMMU``"
msgstr ""

#: ../../../interop/vfio-user.rst:1481
msgid "``VFIO_GROUP_GET_STATUS``"
msgstr ""

#: ../../../interop/vfio-user.rst:1482
msgid "``VFIO_GROUP_SET_CONTAINER``"
msgstr ""

#: ../../../interop/vfio-user.rst:1483
msgid "``VFIO_GROUP_UNSET_CONTAINER``"
msgstr ""

#: ../../../interop/vfio-user.rst:1484
msgid "``VFIO_GROUP_GET_DEVICE_FD``"
msgstr ""

#: ../../../interop/vfio-user.rst:1485
msgid "``VFIO_IOMMU_GET_INFO``"
msgstr ""

#: ../../../interop/vfio-user.rst:1487
msgid ""
"However, once support for live migration for VFIO devices is finalized some "
"of the above commands may have to be handled by the client in their "
"corresponding vfio-user form. This will be addressed in a future protocol "
"version."
msgstr ""

#: ../../../interop/vfio-user.rst:1493
msgid "VFIO groups and containers"
msgstr ""

#: ../../../interop/vfio-user.rst:1495
msgid ""
"The current VFIO implementation includes group and container idioms that "
"describe how a device relates to the host IOMMU. In the vfio-user "
"implementation, the IOMMU is implemented in SW by the client, and is not "
"visible to the server. The simplest idea would be that the client put each "
"device into its own group and container."
msgstr ""

#: ../../../interop/vfio-user.rst:1502
msgid "Backend Program Conventions"
msgstr ""

#: ../../../interop/vfio-user.rst:1504
msgid "vfio-user backend program conventions are based on the vhost-user ones."
msgstr ""

#: ../../../interop/vfio-user.rst:1506
msgid "The backend program must not daemonize itself."
msgstr ""

#: ../../../interop/vfio-user.rst:1507
msgid ""
"No assumptions must be made as to what access the backend program has on the "
"system."
msgstr ""

#: ../../../interop/vfio-user.rst:1509
msgid ""
"File descriptors 0, 1 and 2 must exist, must have regular stdin/stdout/"
"stderr semantics, and can be redirected."
msgstr ""

#: ../../../interop/vfio-user.rst:1511
msgid "The backend program must honor the SIGTERM signal."
msgstr ""

#: ../../../interop/vfio-user.rst:1512
msgid "The backend program must accept the following commands line options:"
msgstr ""

#: ../../../interop/vfio-user.rst:1514
msgid "``--socket-path=PATH``: path to UNIX domain socket,"
msgstr ""

#: ../../../interop/vfio-user.rst:1515
msgid ""
"``--fd=FDNUM``: file descriptor for UNIX domain socket, incompatible with "
"``--socket-path``"
msgstr ""

#: ../../../interop/vfio-user.rst:1517
msgid ""
"The backend program must be accompanied with a JSON file stored under ``/usr/"
"share/vfio-user``."
msgstr ""

#: ../../../interop/vfio-user.rst:1520
msgid "TODO add schema similar to docs/interop/vhost-user.json."
msgstr ""
