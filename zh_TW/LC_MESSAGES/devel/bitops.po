# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 05:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../devel/bitops.rst:3
msgid "Bitwise operations"
msgstr ""

#: ../../../devel/bitops.rst:5
msgid ""
"The header ``qemu/bitops.h`` provides utility functions for performing "
"bitwise operations."
msgstr ""

#: ../../../../include/qemu/bitops.h:32
msgid "Set a bit in memory"
msgstr ""

#: ../../../../include/qemu/bitops.h:34 ../../../../include/qemu/bitops.h:47
#: ../../../../include/qemu/bitops.h:60 ../../../../include/qemu/bitops.h:73
#: ../../../../include/qemu/bitops.h:86 ../../../../include/qemu/bitops.h:101
#: ../../../../include/qemu/bitops.h:116 ../../../../include/qemu/bitops.h:131
#: ../../../../include/qemu/bitops.h:141 ../../../../include/qemu/bitops.h:152
#: ../../../../include/qemu/bitops.h:165 ../../../../include/qemu/bitops.h:179
#: ../../../../include/qemu/bitops.h:203 ../../../../include/qemu/bitops.h:217
#: ../../../../include/qemu/bitops.h:227 ../../../../include/qemu/bitops.h:237
#: ../../../../include/qemu/bitops.h:247 ../../../../include/qemu/bitops.h:257
#: ../../../../include/qemu/bitops.h:267 ../../../../include/qemu/bitops.h:277
#: ../../../../include/qemu/bitops.h:287 ../../../../include/qemu/bitops.h:297
#: ../../../../include/qemu/bitops.h:306 ../../../../include/qemu/bitops.h:317
#: ../../../../include/qemu/bitops.h:325 ../../../../include/qemu/bitops.h:344
#: ../../../../include/qemu/bitops.h:363 ../../../../include/qemu/bitops.h:382
#: ../../../../include/qemu/bitops.h:401 ../../../../include/qemu/bitops.h:426
#: ../../../../include/qemu/bitops.h:451 ../../../../include/qemu/bitops.h:477
#: ../../../../include/qemu/bitops.h:503 ../../../../include/qemu/bitops.h:532
#: ../../../../include/qemu/bitops.h:562 ../../../../include/qemu/bitops.h:592
msgid "**Parameters**"
msgstr ""

#: ../../../../include/qemu/bitops.h:36 ../../../../include/qemu/bitops.h:49
#: ../../../../include/qemu/bitops.h:62 ../../../../include/qemu/bitops.h:75
#: ../../../../include/qemu/bitops.h:88 ../../../../include/qemu/bitops.h:103
#: ../../../../include/qemu/bitops.h:118 ../../../../include/qemu/bitops.h:133
msgid "``long nr``"
msgstr ""

#: ../../../../include/qemu/bitops.h:33 ../../../../include/qemu/bitops.h:46
msgid "the bit to set"
msgstr ""

#: ../../../../include/qemu/bitops.h:35 ../../../../include/qemu/bitops.h:48
#: ../../../../include/qemu/bitops.h:61 ../../../../include/qemu/bitops.h:74
#: ../../../../include/qemu/bitops.h:87 ../../../../include/qemu/bitops.h:102
#: ../../../../include/qemu/bitops.h:117
msgid "``unsigned long *addr``"
msgstr ""

#: ../../../../include/qemu/bitops.h:34 ../../../../include/qemu/bitops.h:47
msgid "the address to start counting from"
msgstr ""

#: ../../../../include/qemu/bitops.h:45
msgid "Set a bit in memory atomically"
msgstr ""

#: ../../../../include/qemu/bitops.h:58
msgid "Clears a bit in memory"
msgstr ""

#: ../../../../include/qemu/bitops.h:59 ../../../../include/qemu/bitops.h:100
msgid "Bit to clear"
msgstr ""

#: ../../../../include/qemu/bitops.h:60 ../../../../include/qemu/bitops.h:73
#: ../../../../include/qemu/bitops.h:131
msgid "Address to start counting from"
msgstr ""

#: ../../../../include/qemu/bitops.h:71
msgid "Toggle a bit in memory"
msgstr ""

#: ../../../../include/qemu/bitops.h:72 ../../../../include/qemu/bitops.h:115
msgid "Bit to change"
msgstr ""

#: ../../../../include/qemu/bitops.h:84
msgid "Set a bit and return its old value"
msgstr ""

#: ../../../../include/qemu/bitops.h:85
msgid "Bit to set"
msgstr ""

#: ../../../../include/qemu/bitops.h:86 ../../../../include/qemu/bitops.h:101
#: ../../../../include/qemu/bitops.h:116
msgid "Address to count from"
msgstr ""

#: ../../../../include/qemu/bitops.h:99
msgid "Clear a bit and return its old value"
msgstr ""

#: ../../../../include/qemu/bitops.h:114
msgid "Change a bit and return its old value"
msgstr ""

#: ../../../../include/qemu/bitops.h:129
msgid "Determine whether a bit is set"
msgstr ""

#: ../../../../include/qemu/bitops.h:130
msgid "bit number to test"
msgstr ""

#: ../../../../include/qemu/bitops.h:132 ../../../../include/qemu/bitops.h:143
#: ../../../../include/qemu/bitops.h:154 ../../../../include/qemu/bitops.h:167
#: ../../../../include/qemu/bitops.h:181 ../../../../include/qemu/bitops.h:205
msgid "``const unsigned long *addr``"
msgstr ""

#: ../../../../include/qemu/bitops.h:139
msgid "find the last set bit in a memory region"
msgstr ""

#: ../../../../include/qemu/bitops.h:140 ../../../../include/qemu/bitops.h:178
#: ../../../../include/qemu/bitops.h:202
msgid "The address to start the search at"
msgstr ""

#: ../../../../include/qemu/bitops.h:142 ../../../../include/qemu/bitops.h:153
#: ../../../../include/qemu/bitops.h:166 ../../../../include/qemu/bitops.h:180
#: ../../../../include/qemu/bitops.h:204
msgid "``unsigned long size``"
msgstr ""

#: ../../../../include/qemu/bitops.h:141 ../../../../include/qemu/bitops.h:179
#: ../../../../include/qemu/bitops.h:203
msgid "The maximum size to search"
msgstr ""

#: ../../../../include/qemu/bitops.h:143 ../../../../include/qemu/bitops.h:154
#: ../../../../include/qemu/bitops.h:167 ../../../../include/qemu/bitops.h:181
#: ../../../../include/qemu/bitops.h:205 ../../../../include/qemu/bitops.h:329
#: ../../../../include/qemu/bitops.h:348 ../../../../include/qemu/bitops.h:367
#: ../../../../include/qemu/bitops.h:386 ../../../../include/qemu/bitops.h:405
#: ../../../../include/qemu/bitops.h:430 ../../../../include/qemu/bitops.h:456
#: ../../../../include/qemu/bitops.h:482 ../../../../include/qemu/bitops.h:505
#: ../../../../include/qemu/bitops.h:534 ../../../../include/qemu/bitops.h:564
#: ../../../../include/qemu/bitops.h:594
msgid "**Description**"
msgstr ""

#: ../../../../include/qemu/bitops.h:143
msgid ""
"Returns the bit number of the last set bit, or **size** if there is no set "
"bit in the bitmap."
msgstr ""

#: ../../../../include/qemu/bitops.h:150
msgid "find the next set bit in a memory region"
msgstr ""

#: ../../../../include/qemu/bitops.h:151 ../../../../include/qemu/bitops.h:164
msgid "The address to base the search on"
msgstr ""

#: ../../../../include/qemu/bitops.h:153 ../../../../include/qemu/bitops.h:166
msgid "The bitmap size in bits"
msgstr ""

#: ../../../../include/qemu/bitops.h:155 ../../../../include/qemu/bitops.h:168
msgid "``unsigned long offset``"
msgstr ""

#: ../../../../include/qemu/bitops.h:152 ../../../../include/qemu/bitops.h:165
msgid "The bitnumber to start searching at"
msgstr ""

#: ../../../../include/qemu/bitops.h:155
msgid ""
"Returns the bit number of the next set bit, or **size** if there are no "
"further set bits in the bitmap."
msgstr ""

#: ../../../../include/qemu/bitops.h:163
msgid "find the next cleared bit in a memory region"
msgstr ""

#: ../../../../include/qemu/bitops.h:168
msgid ""
"Returns the bit number of the next cleared bit, or **size** if there are no "
"further clear bits in the bitmap."
msgstr ""

#: ../../../../include/qemu/bitops.h:177
msgid "find the first set bit in a memory region"
msgstr ""

#: ../../../../include/qemu/bitops.h:181
msgid ""
"Returns the bit number of the first set bit, or **size** if there is no set "
"bit in the bitmap."
msgstr ""

#: ../../../../include/qemu/bitops.h:201
msgid "find the first cleared bit in a memory region"
msgstr ""

#: ../../../../include/qemu/bitops.h:205
msgid ""
"Returns the bit number of the first cleared bit, or **size** if there is no "
"clear bit in the bitmap."
msgstr ""

#: ../../../../include/qemu/bitops.h:215
msgid "rotate an 8-bit value left"
msgstr ""

#: ../../../../include/qemu/bitops.h:219 ../../../../include/qemu/bitops.h:229
msgid "``uint8_t word``"
msgstr ""

#: ../../../../include/qemu/bitops.h:216 ../../../../include/qemu/bitops.h:226
#: ../../../../include/qemu/bitops.h:236 ../../../../include/qemu/bitops.h:246
#: ../../../../include/qemu/bitops.h:256 ../../../../include/qemu/bitops.h:266
#: ../../../../include/qemu/bitops.h:276 ../../../../include/qemu/bitops.h:286
msgid "value to rotate"
msgstr ""

#: ../../../../include/qemu/bitops.h:218 ../../../../include/qemu/bitops.h:228
#: ../../../../include/qemu/bitops.h:238 ../../../../include/qemu/bitops.h:248
#: ../../../../include/qemu/bitops.h:258 ../../../../include/qemu/bitops.h:268
#: ../../../../include/qemu/bitops.h:278 ../../../../include/qemu/bitops.h:288
msgid "``unsigned int shift``"
msgstr ""

#: ../../../../include/qemu/bitops.h:217 ../../../../include/qemu/bitops.h:227
#: ../../../../include/qemu/bitops.h:237 ../../../../include/qemu/bitops.h:247
#: ../../../../include/qemu/bitops.h:257 ../../../../include/qemu/bitops.h:267
#: ../../../../include/qemu/bitops.h:277 ../../../../include/qemu/bitops.h:287
msgid "bits to roll"
msgstr ""

#: ../../../../include/qemu/bitops.h:225
msgid "rotate an 8-bit value right"
msgstr ""

#: ../../../../include/qemu/bitops.h:235
msgid "rotate a 16-bit value left"
msgstr ""

#: ../../../../include/qemu/bitops.h:239 ../../../../include/qemu/bitops.h:249
msgid "``uint16_t word``"
msgstr ""

#: ../../../../include/qemu/bitops.h:245
msgid "rotate a 16-bit value right"
msgstr ""

#: ../../../../include/qemu/bitops.h:255
msgid "rotate a 32-bit value left"
msgstr ""

#: ../../../../include/qemu/bitops.h:259 ../../../../include/qemu/bitops.h:269
msgid "``uint32_t word``"
msgstr ""

#: ../../../../include/qemu/bitops.h:265
msgid "rotate a 32-bit value right"
msgstr ""

#: ../../../../include/qemu/bitops.h:275
msgid "rotate a 64-bit value left"
msgstr ""

#: ../../../../include/qemu/bitops.h:279 ../../../../include/qemu/bitops.h:289
msgid "``uint64_t word``"
msgstr ""

#: ../../../../include/qemu/bitops.h:285
msgid "rotate a 64-bit value right"
msgstr ""

#: ../../../../include/qemu/bitops.h:295
msgid "swap 16-bit halfwords within a 32-bit value"
msgstr ""

#: ../../../../include/qemu/bitops.h:299
msgid "``uint32_t h``"
msgstr ""

#: ../../../../include/qemu/bitops.h:296 ../../../../include/qemu/bitops.h:305
#: ../../../../include/qemu/bitops.h:316
msgid "value to swap"
msgstr ""

#: ../../../../include/qemu/bitops.h:304
msgid "swap 16-bit halfwords within a 64-bit value"
msgstr ""

#: ../../../../include/qemu/bitops.h:308 ../../../../include/qemu/bitops.h:319
msgid "``uint64_t h``"
msgstr ""

#: ../../../../include/qemu/bitops.h:315
msgid "swap 32-bit words within a 64-bit value"
msgstr ""

#: ../../../../include/qemu/bitops.h:327 ../../../../include/qemu/bitops.h:403
#: ../../../../include/qemu/bitops.h:453
msgid "``uint32_t value``"
msgstr ""

#: ../../../../include/qemu/bitops.h:325 ../../../../include/qemu/bitops.h:344
#: ../../../../include/qemu/bitops.h:363 ../../../../include/qemu/bitops.h:382
#: ../../../../include/qemu/bitops.h:401 ../../../../include/qemu/bitops.h:426
msgid "the value to extract the bit field from"
msgstr ""

#: ../../../../include/qemu/bitops.h:327 ../../../../include/qemu/bitops.h:346
#: ../../../../include/qemu/bitops.h:365 ../../../../include/qemu/bitops.h:384
#: ../../../../include/qemu/bitops.h:403 ../../../../include/qemu/bitops.h:428
#: ../../../../include/qemu/bitops.h:453 ../../../../include/qemu/bitops.h:479
msgid "``int start``"
msgstr ""

#: ../../../../include/qemu/bitops.h:326 ../../../../include/qemu/bitops.h:345
#: ../../../../include/qemu/bitops.h:364 ../../../../include/qemu/bitops.h:383
#: ../../../../include/qemu/bitops.h:402 ../../../../include/qemu/bitops.h:427
#: ../../../../include/qemu/bitops.h:452 ../../../../include/qemu/bitops.h:478
msgid "the lowest bit in the bit field (numbered from 0)"
msgstr ""

#: ../../../../include/qemu/bitops.h:328 ../../../../include/qemu/bitops.h:347
#: ../../../../include/qemu/bitops.h:366 ../../../../include/qemu/bitops.h:385
#: ../../../../include/qemu/bitops.h:404 ../../../../include/qemu/bitops.h:429
#: ../../../../include/qemu/bitops.h:454 ../../../../include/qemu/bitops.h:480
msgid "``int length``"
msgstr ""

#: ../../../../include/qemu/bitops.h:327 ../../../../include/qemu/bitops.h:346
#: ../../../../include/qemu/bitops.h:365 ../../../../include/qemu/bitops.h:384
#: ../../../../include/qemu/bitops.h:403 ../../../../include/qemu/bitops.h:428
#: ../../../../include/qemu/bitops.h:453 ../../../../include/qemu/bitops.h:479
msgid "the length of the bit field"
msgstr ""

#: ../../../../include/qemu/bitops.h:329
msgid ""
"Extract from the 32 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it. The bit field must lie "
"entirely within the 32 bit word. It is valid to request that all 32 bits are "
"returned (ie **length** 32 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:334 ../../../../include/qemu/bitops.h:353
#: ../../../../include/qemu/bitops.h:372 ../../../../include/qemu/bitops.h:391
#: ../../../../include/qemu/bitops.h:412 ../../../../include/qemu/bitops.h:437
#: ../../../../include/qemu/bitops.h:464 ../../../../include/qemu/bitops.h:490
#: ../../../../include/qemu/bitops.h:516 ../../../../include/qemu/bitops.h:545
#: ../../../../include/qemu/bitops.h:575 ../../../../include/qemu/bitops.h:605
msgid "**Return**"
msgstr ""

#: ../../../../include/qemu/bitops.h:334 ../../../../include/qemu/bitops.h:353
#: ../../../../include/qemu/bitops.h:372 ../../../../include/qemu/bitops.h:391
msgid "the value of the bit field extracted from the input value."
msgstr ""

#: ../../../../include/qemu/bitops.h:346
msgid "``uint8_t value``"
msgstr ""

#: ../../../../include/qemu/bitops.h:348
msgid ""
"Extract from the 8 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it. The bit field must lie "
"entirely within the 8 bit word. It is valid to request that all 8 bits are "
"returned (ie **length** 8 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:365
msgid "``uint16_t value``"
msgstr ""

#: ../../../../include/qemu/bitops.h:367
msgid ""
"Extract from the 16 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it. The bit field must lie "
"entirely within the 16 bit word. It is valid to request that all 16 bits are "
"returned (ie **length** 16 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:384 ../../../../include/qemu/bitops.h:428
#: ../../../../include/qemu/bitops.h:479
msgid "``uint64_t value``"
msgstr ""

#: ../../../../include/qemu/bitops.h:386
msgid ""
"Extract from the 64 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it. The bit field must lie "
"entirely within the 64 bit word. It is valid to request that all 64 bits are "
"returned (ie **length** 64 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:405
msgid ""
"Extract from the 32 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it, sign extended to an "
"int32_t (ie with the most significant bit of the field propagated to all the "
"upper bits of the return value). The bit field must lie entirely within the "
"32 bit word. It is valid to request that all 32 bits are returned (ie "
"**length** 32 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:412 ../../../../include/qemu/bitops.h:437
msgid ""
"the sign extended value of the bit field extracted from the input value."
msgstr ""

#: ../../../../include/qemu/bitops.h:430
msgid ""
"Extract from the 64 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it, sign extended to an "
"int64_t (ie with the most significant bit of the field propagated to all the "
"upper bits of the return value). The bit field must lie entirely within the "
"64 bit word. It is valid to request that all 64 bits are returned (ie "
"**length** 64 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:451 ../../../../include/qemu/bitops.h:477
msgid "initial value to insert bit field into"
msgstr ""

#: ../../../../include/qemu/bitops.h:455
msgid "``uint32_t fieldval``"
msgstr ""

#: ../../../../include/qemu/bitops.h:454 ../../../../include/qemu/bitops.h:480
msgid "the value to insert into the bit field"
msgstr ""

#: ../../../../include/qemu/bitops.h:456
msgid ""
"Deposit **fieldval** into the 32 bit **value** at the bit field specified by "
"the **start** and **length** parameters, and return the modified **value**. "
"Bits of **value** outside the bit field are not modified. Bits of "
"**fieldval** above the least significant **length** bits are ignored. The "
"bit field must lie entirely within the 32 bit word. It is valid to request "
"that all 32 bits are modified (ie **length** 32 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:464 ../../../../include/qemu/bitops.h:490
msgid "the modified **value**."
msgstr ""

#: ../../../../include/qemu/bitops.h:481
msgid "``uint64_t fieldval``"
msgstr ""

#: ../../../../include/qemu/bitops.h:482
msgid ""
"Deposit **fieldval** into the 64 bit **value** at the bit field specified by "
"the **start** and **length** parameters, and return the modified **value**. "
"Bits of **value** outside the bit field are not modified. Bits of "
"**fieldval** above the least significant **length** bits are ignored. The "
"bit field must lie entirely within the 64 bit word. It is valid to request "
"that all 64 bits are modified (ie **length** 64 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:505 ../../../../include/qemu/bitops.h:564
msgid "``uint32_t x``"
msgstr ""

#: ../../../../include/qemu/bitops.h:503
msgid "32-bit value (of which only the bottom 16 bits are of interest)"
msgstr ""

#: ../../../../include/qemu/bitops.h:505 ../../../../include/qemu/bitops.h:534
#: ../../../../include/qemu/bitops.h:564 ../../../../include/qemu/bitops.h:594
msgid "Given an input value::"
msgstr ""

#: ../../../../include/qemu/bitops.h:507
msgid "xxxx xxxx xxxx xxxx ABCD EFGH IJKL MNOP"
msgstr ""

#: ../../../../include/qemu/bitops.h:509
msgid ""
"return the value where the bottom 16 bits are spread out into the odd bits "
"in the word, and the even bits are zeroed::"
msgstr ""

#: ../../../../include/qemu/bitops.h:512
msgid "0A0B 0C0D 0E0F 0G0H 0I0J 0K0L 0M0N 0O0P"
msgstr ""

#: ../../../../include/qemu/bitops.h:514 ../../../../include/qemu/bitops.h:543
msgid "Any bits set in the top half of the input are ignored."
msgstr ""

#: ../../../../include/qemu/bitops.h:516 ../../../../include/qemu/bitops.h:545
msgid "the shuffled bits."
msgstr ""

#: ../../../../include/qemu/bitops.h:534 ../../../../include/qemu/bitops.h:594
msgid "``uint64_t x``"
msgstr ""

#: ../../../../include/qemu/bitops.h:532
msgid "64-bit value (of which only the bottom 32 bits are of interest)"
msgstr ""

#: ../../../../include/qemu/bitops.h:536
msgid "xxxx xxxx xxxx .... xxxx xxxx ABCD EFGH IJKL MNOP QRST UVWX YZab cdef"
msgstr ""

#: ../../../../include/qemu/bitops.h:538
msgid ""
"return the value where the bottom 32 bits are spread out into the odd bits "
"in the word, and the even bits are zeroed::"
msgstr ""

#: ../../../../include/qemu/bitops.h:541
msgid "0A0B 0C0D 0E0F 0G0H 0I0J 0K0L 0M0N .... 0U0V 0W0X 0Y0Z 0a0b 0c0d 0e0f"
msgstr ""

#: ../../../../include/qemu/bitops.h:562
msgid "32-bit value (of which only the odd bits are of interest)"
msgstr ""

#: ../../../../include/qemu/bitops.h:566
msgid "xAxB xCxD xExF xGxH xIxJ xKxL xMxN xOxP"
msgstr ""

#: ../../../../include/qemu/bitops.h:568 ../../../../include/qemu/bitops.h:598
msgid ""
"return the value where all the odd bits are compressed down into the low "
"half of the word, and the high half is zeroed::"
msgstr ""

#: ../../../../include/qemu/bitops.h:571
msgid "0000 0000 0000 0000 ABCD EFGH IJKL MNOP"
msgstr ""

#: ../../../../include/qemu/bitops.h:573 ../../../../include/qemu/bitops.h:603
msgid "Any even bits set in the input are ignored."
msgstr ""

#: ../../../../include/qemu/bitops.h:575 ../../../../include/qemu/bitops.h:605
msgid "the unshuffled bits."
msgstr ""

#: ../../../../include/qemu/bitops.h:592
msgid "64-bit value (of which only the odd bits are of interest)"
msgstr ""

#: ../../../../include/qemu/bitops.h:596
msgid "xAxB xCxD xExF xGxH xIxJ xKxL xMxN .... xUxV xWxX xYxZ xaxb xcxd xexf"
msgstr ""

#: ../../../../include/qemu/bitops.h:601
msgid "0000 0000 0000 .... 0000 0000 ABCD EFGH IJKL MNOP QRST UVWX YZab cdef"
msgstr ""
