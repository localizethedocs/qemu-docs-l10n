# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 05:38+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../tools/qemu-storage-daemon.rst:3
msgid "QEMU Storage Daemon"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:6
msgid "Synopsis"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:8
msgid "**qemu-storage-daemon** [options]"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:11
msgid "Description"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:13
msgid ""
"``qemu-storage-daemon`` provides disk image functionality from QEMU, ``qemu-"
"img``, and ``qemu-nbd`` in a long-running process controlled via QMP "
"commands without running a virtual machine. It can export disk images, run "
"block job operations, and perform other disk-related operations. The daemon "
"is controlled via a QMP monitor and initial configuration from the command-"
"line."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:20
msgid "The daemon offers the following subset of QEMU features:"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:22
msgid "Block nodes"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:23
msgid "Block jobs"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:24
msgid "Block exports"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:25
msgid "Throttle groups"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:26
msgid "Character devices"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:27
msgid "Crypto and secrets"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:28
msgid "QMP"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:29
msgid "IOThreads"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:31
msgid ""
"Commands can be sent over a QEMU Monitor Protocol (QMP) connection. See the :"
"manpage:`qemu-storage-daemon-qmp-ref(7)` manual page for a description of "
"the commands."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:35
msgid ""
"The daemon runs until it is stopped using the ``quit`` QMP command or SIGINT/"
"SIGHUP/SIGTERM."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:38
msgid ""
"**Warning:** Never modify images in use by a running virtual machine or any "
"other process; this may destroy the image. Also, be aware that querying an "
"image that is being modified by another process may encounter inconsistent "
"state."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:44
msgid "Options"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:48
msgid "Standard options:"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:52
msgid "Display help and exit"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:56
msgid "Display version information and exit"
msgstr ""

#: ../../../qemu-option-trace.rst.inc:2
msgid "Specify tracing options."
msgstr ""

#: ../../../qemu-option-trace.rst.inc:4
msgid "``[enable=]PATTERN``"
msgstr ""

#: ../../../qemu-option-trace.rst.inc:6
msgid ""
"Immediately enable events matching *PATTERN* (either event name or a "
"globbing pattern).  This option is only available if QEMU has been compiled "
"with the ``simple``, ``log`` or ``ftrace`` tracing backend.  To specify "
"multiple events or patterns, specify the :option:`-trace` option multiple "
"times."
msgstr ""

#: ../../../qemu-option-trace.rst.inc:12
msgid "Use :option:`-trace help` to print a list of names of trace points."
msgstr ""

#: ../../../qemu-option-trace.rst.inc:14
msgid "``events=FILE``"
msgstr ""

#: ../../../qemu-option-trace.rst.inc:16
msgid ""
"Immediately enable events listed in *FILE*. The file must contain one event "
"name (as listed in the ``trace-events-all`` file) per line; globbing "
"patterns are accepted too.  This option is only available if QEMU has been "
"compiled with the ``simple``, ``log`` or ``ftrace`` tracing backend."
msgstr ""

#: ../../../qemu-option-trace.rst.inc:22
msgid "``file=FILE``"
msgstr ""

#: ../../../qemu-option-trace.rst.inc:24
msgid ""
"Log output traces to *FILE*. This option is only available if QEMU has been "
"compiled with the ``simple`` tracing backend."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:64
msgid ""
"is a block node definition. See the :manpage:`qemu(1)` manual page for a "
"description of block node properties and the :manpage:`qemu-block-"
"drivers(7)` manual page for a description of driver-specific parameters."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:70
msgid ""
"is a character device definition. See the :manpage:`qemu(1)` manual page for "
"a description of character device properties. A common character device "
"definition configures a UNIX domain socket::"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:74
msgid "--chardev socket,id=char1,path=/var/run/qsd-qmp.sock,server=on,wait=off"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:82
msgid ""
"is a block export definition. ``node-name`` is the block node that should be "
"exported. ``writable`` determines whether or not the export allows write "
"requests for modifying data (the default is off)."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:86
msgid ""
"The ``nbd`` export type requires ``--nbd-server`` (see below). ``name`` is "
"the NBD export name (if not specified, it defaults to the given ``node-"
"name``). ``bitmap`` is the name of a dirty bitmap reachable from the block "
"node, so the NBD client can use NBD_OPT_SET_META_CONTEXT with the metadata "
"context name \"qemu:dirty-bitmap:BITMAP\" to inspect the bitmap."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:92
msgid ""
"The ``vhost-user-blk`` export type takes a vhost-user socket address on "
"which it accept incoming connections. Both ``addr.type=unix,addr."
"path=<socket-path>`` for UNIX domain sockets and ``addr.type=fd,addr."
"str=<fd>`` for file descriptor passing are supported. ``logical-block-size`` "
"sets the logical block size in bytes (the default is 512). ``num-queues`` "
"sets the number of virtqueues (the default is 1)."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:99
msgid ""
"The ``fuse`` export type takes a mount point, which must be a regular file, "
"on which to export the given block node. That file will not be changed, it "
"will just appear to have the block node's content while the export is active "
"(very much like mounting a filesystem on a directory does not change what "
"the directory contains, it only shows a different content while the "
"filesystem is mounted). Consequently, applications that have opened the "
"given file before the export became active will continue to see its original "
"content. If ``growable`` is set, writes after the end of the exported file "
"will grow the block node to fit.  The ``allow-other`` option controls "
"whether users other than the user running the process will be allowed to "
"access the export.  Note that enabling this option as a non-root user "
"requires enabling the user_allow_other option in the global fuse.conf "
"configuration file.  Setting ``allow-other`` to auto (the default) will try "
"enabling this option, and on error fall back to disabling it."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:114
msgid ""
"The ``vduse-blk`` export type takes a ``name`` (must be unique across the "
"host) to create the VDUSE device. ``num-queues`` sets the number of "
"virtqueues (the default is 1). ``queue-size`` sets the virtqueue descriptor "
"table size (the default is 256)."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:119
msgid ""
"The instantiated VDUSE device must then be added to the vDPA bus using the "
"vdpa(8) command from the iproute2 project::"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:122
msgid "# vdpa dev add name <id> mgmtdev vduse"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:124
msgid "The device can be removed from the vDPA bus later as follows::"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:126
msgid "# vdpa dev del <id>"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:128
msgid ""
"For more information about attaching vDPA devices to the host with "
"virtio_vdpa.ko or attaching them to guests with vhost_vdpa.ko, see https://"
"vdpa-dev.gitlab.io/."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:132
msgid ""
"For more information about VDUSE, see https://docs.kernel.org/userspace-api/"
"vduse.html."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:137
msgid ""
"is a QMP monitor definition. See the :manpage:`qemu(1)` manual page for a "
"description of QMP monitor properties. A common QMP monitor definition "
"configures a monitor on character device ``char1``::"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:141
msgid "--monitor chardev=char1"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:147
msgid ""
"is a server for NBD exports. Both TCP and UNIX domain sockets are supported. "
"A listen socket can be provided via file descriptor passing (see Examples "
"below). TLS encryption can be configured using ``--object`` tls-creds-* and "
"authz-* secrets (see below)."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:152
msgid ""
"To configure an NBD server on UNIX domain socket path ``/var/run/qsd-nbd."
"sock``::"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:155
msgid "--nbd-server addr.type=unix,addr.path=/var/run/qsd-nbd.sock"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:161
msgid ""
"is a QEMU user creatable object definition. List object types with ``help``. "
"List object properties with ``<type>,help``. See the :manpage:`qemu(1)` "
"manual page for a description of the object properties."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:167
msgid ""
"is the path to a file where the daemon writes its pid. This allows scripts "
"to stop the daemon by sending a signal::"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:170
msgid "$ kill -SIGTERM $(<path/to/qsd.pid)"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:172
msgid ""
"A file lock is applied to the file so only one instance of the daemon can "
"run with a given pid file path. The daemon unlinks its pid file when "
"terminating."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:175
msgid ""
"The pid file is written after chardevs, exports, and NBD servers have been "
"created but before accepting connections. The daemon has started "
"successfully when the pid file is written and clients may begin connecting."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:181
msgid ""
"Daemonize the process. The parent process will exit once startup is complete "
"(i.e., after the pid file has been or would have been written) or failure "
"occurs. Its exit code reflects whether the child has started up successfully "
"or failed to do so."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:187
msgid "Examples"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:188
msgid ""
"Launch the daemon with QMP monitor socket ``qmp.sock`` so clients can "
"execute QMP commands::"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:191
msgid ""
"$ qemu-storage-daemon \\\n"
"    --chardev socket,path=qmp.sock,server=on,wait=off,id=char1 \\\n"
"    --monitor chardev=char1"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:195
msgid ""
"Launch the daemon from Python with a QMP monitor socket using file "
"descriptor passing so there is no need to busy wait for the QMP monitor to "
"become available::"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:199
msgid ""
"#!/usr/bin/env python3\n"
"import subprocess\n"
"import socket\n"
"\n"
"sock_path = '/var/run/qmp.sock'\n"
"\n"
"with socket.socket(socket.AF_UNIX, socket.SOCK_STREAM) as listen_sock:\n"
"    listen_sock.bind(sock_path)\n"
"    listen_sock.listen()\n"
"\n"
"    fd = listen_sock.fileno()\n"
"\n"
"    subprocess.Popen(\n"
"        ['qemu-storage-daemon',\n"
"         '--chardev', f'socket,fd={fd},server=on,id=char1',\n"
"         '--monitor', 'chardev=char1'],\n"
"        pass_fds=[fd],\n"
"    )\n"
"\n"
"# listen_sock was automatically closed when leaving the 'with' statement\n"
"# body. If the daemon process terminated early then the following connect()\n"
"# will fail with \"Connection refused\" because no process has the listen\n"
"# socket open anymore. Launch errors can be detected this way.\n"
"\n"
"qmp_sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n"
"qmp_sock.connect(sock_path)\n"
"...QMP interaction..."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:227
msgid ""
"The same socket spawning approach also works with the ``--nbd-server addr."
"type=fd,addr.str=<fd>`` and ``--export type=vhost-user-blk,addr.type=fd,addr."
"str=<fd>`` options."
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:231
msgid ""
"Export raw image file ``disk.img`` over NBD UNIX domain socket ``nbd.sock``::"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:233
msgid ""
"$ qemu-storage-daemon \\\n"
"    --blockdev driver=file,node-name=disk,filename=disk.img \\\n"
"    --nbd-server addr.type=unix,addr.path=nbd.sock \\\n"
"    --export type=nbd,id=export,node-name=disk,writable=on"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:238
msgid ""
"Export a qcow2 image file ``disk.qcow2`` as a vhost-user-blk device over "
"UNIX domain socket ``vhost-user-blk.sock``::"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:241
msgid ""
"$ qemu-storage-daemon \\\n"
"    --blockdev driver=file,node-name=file,filename=disk.qcow2 \\\n"
"    --blockdev driver=qcow2,node-name=qcow2,file=file \\\n"
"    --export type=vhost-user-blk,id=export,addr.type=unix,addr.path=vhost-"
"user-blk.sock,node-name=qcow2"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:246
msgid ""
"Export a qcow2 image file ``disk.qcow2`` via FUSE on itself, so the disk "
"image file will then appear as a raw image::"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:249
msgid ""
"$ qemu-storage-daemon \\\n"
"    --blockdev driver=file,node-name=file,filename=disk.qcow2 \\\n"
"    --blockdev driver=qcow2,node-name=qcow2,file=file \\\n"
"    --export type=fuse,id=export,node-name=qcow2,mountpoint=disk.qcow2,"
"writable=on"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:255
msgid "See also"
msgstr ""

#: ../../../tools/qemu-storage-daemon.rst:257
msgid ""
":manpage:`qemu(1)`, :manpage:`qemu-block-drivers(7)`, :manpage:`qemu-storage-"
"daemon-qmp-ref(7)`"
msgstr ""
