# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 05:37+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../about/emulation.rst:2
msgid "Emulation"
msgstr "仿真"

#: ../../../about/emulation.rst:4
msgid ""
"QEMU's Tiny Code Generator (TCG) provides the ability to emulate a number of "
"CPU architectures on any supported host platform. Both :ref:`System "
"Emulation` and :ref:`User Mode Emulation` are supported depending on the "
"guest architecture."
msgstr ""

#: ../../../about/emulation.rst:9
msgid "Supported Guest Architectures for Emulation"
msgstr ""

#: ../../../about/emulation.rst:13
msgid "Architecture (qemu name)"
msgstr ""

#: ../../../about/emulation.rst:14 ../../../about/emulation.rst:167
#: ../../../about/emulation.rst:170 ../../../about/emulation.rst:176
msgid "System"
msgstr ""

#: ../../../about/emulation.rst:15
msgid "User"
msgstr ""

#: ../../../about/emulation.rst:16
msgid "Notes"
msgstr ""

#: ../../../about/emulation.rst:17
msgid "Alpha"
msgstr ""

#: ../../../about/emulation.rst:18 ../../../about/emulation.rst:19
#: ../../../about/emulation.rst:23 ../../../about/emulation.rst:31
#: ../../../about/emulation.rst:34 ../../../about/emulation.rst:35
#: ../../../about/emulation.rst:39 ../../../about/emulation.rst:42
#: ../../../about/emulation.rst:43 ../../../about/emulation.rst:47
#: ../../../about/emulation.rst:50 ../../../about/emulation.rst:51
#: ../../../about/emulation.rst:55 ../../../about/emulation.rst:59
#: ../../../about/emulation.rst:63 ../../../about/emulation.rst:67
#: ../../../about/emulation.rst:75 ../../../about/emulation.rst:78
#: ../../../about/emulation.rst:79 ../../../about/emulation.rst:83
#: ../../../about/emulation.rst:86 ../../../about/emulation.rst:91
msgid "Yes"
msgstr ""

#: ../../../about/emulation.rst:20
msgid "Legacy 64 bit RISC ISA developed by DEC"
msgstr ""

#: ../../../about/emulation.rst:21
msgid "Arm (arm, aarch64)"
msgstr ""

#: ../../../about/emulation.rst:22
msgid ":ref:`Yes<ARM-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:24
msgid "Wide range of features, see :ref:`Arm Emulation` for details"
msgstr ""

#: ../../../about/emulation.rst:25
msgid "AVR"
msgstr ""

#: ../../../about/emulation.rst:26
msgid ":ref:`Yes<AVR-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:27 ../../../about/emulation.rst:30
#: ../../../about/emulation.rst:71 ../../../about/emulation.rst:87
msgid "No"
msgstr ""

#: ../../../about/emulation.rst:28
msgid "8 bit micro controller, often used in maker projects"
msgstr ""

#: ../../../about/emulation.rst:29
msgid "Hexagon"
msgstr ""

#: ../../../about/emulation.rst:32
msgid "Family of DSPs by Qualcomm"
msgstr ""

#: ../../../about/emulation.rst:33
msgid "PA-RISC (hppa)"
msgstr ""

#: ../../../about/emulation.rst:36
msgid "A legacy RISC system used in HP's old minicomputers"
msgstr ""

#: ../../../about/emulation.rst:37
msgid "x86 (i386, x86_64)"
msgstr ""

#: ../../../about/emulation.rst:38
msgid ":ref:`Yes<QEMU-PC-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:40
msgid "The ubiquitous desktop PC CPU architecture, 32 and 64 bit."
msgstr ""

#: ../../../about/emulation.rst:41
msgid "LoongArch"
msgstr ""

#: ../../../about/emulation.rst:44
msgid "A MIPS-like 64bit RISC architecture developed in China"
msgstr ""

#: ../../../about/emulation.rst:45 ../../../about/emulation.rst:166
msgid "m68k"
msgstr ""

#: ../../../about/emulation.rst:46
msgid ":ref:`Yes<ColdFire-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:48
msgid "Motorola 68000 variants and ColdFire"
msgstr ""

#: ../../../about/emulation.rst:49
msgid "Microblaze"
msgstr ""

#: ../../../about/emulation.rst:52
msgid "RISC based soft-core by Xilinx"
msgstr ""

#: ../../../about/emulation.rst:53
msgid "MIPS (mips*)"
msgstr ""

#: ../../../about/emulation.rst:54
msgid ":ref:`Yes<MIPS-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:56
msgid "Venerable RISC architecture originally out of Stanford University"
msgstr ""

#: ../../../about/emulation.rst:57
msgid "OpenRISC"
msgstr ""

#: ../../../about/emulation.rst:58
msgid ":ref:`Yes<OpenRISC-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:60
msgid "Open source RISC architecture developed by the OpenRISC community"
msgstr ""

#: ../../../about/emulation.rst:61
msgid "Power (ppc, ppc64)"
msgstr ""

#: ../../../about/emulation.rst:62
msgid ":ref:`Yes<PowerPC-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:64
msgid "A general purpose RISC architecture now managed by IBM"
msgstr ""

#: ../../../about/emulation.rst:65 ../../../about/emulation.rst:172
msgid "RISC-V"
msgstr ""

#: ../../../about/emulation.rst:66
msgid ":ref:`Yes<RISC-V-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:68
msgid "An open standard RISC ISA maintained by RISC-V International"
msgstr ""

#: ../../../about/emulation.rst:69
msgid "RX"
msgstr ""

#: ../../../about/emulation.rst:70
msgid ":ref:`Yes<RX-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:72
msgid "A 32 bit micro controller developed by Renesas"
msgstr ""

#: ../../../about/emulation.rst:73
msgid "s390x"
msgstr ""

#: ../../../about/emulation.rst:74
msgid ":ref:`Yes<s390x-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:76
msgid "A 64 bit CPU found in IBM's System Z mainframes"
msgstr ""

#: ../../../about/emulation.rst:77
msgid "sh4"
msgstr ""

#: ../../../about/emulation.rst:80
msgid "A 32 bit RISC embedded CPU developed by Hitachi"
msgstr ""

#: ../../../about/emulation.rst:81
msgid "SPARC (sparc, sparc64)"
msgstr ""

#: ../../../about/emulation.rst:82
msgid ":ref:`Yes<Sparc32-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:84
msgid "A RISC ISA originally developed by Sun Microsystems"
msgstr ""

#: ../../../about/emulation.rst:85
msgid "Tricore"
msgstr ""

#: ../../../about/emulation.rst:88
msgid "A 32 bit RISC/uController/DSP developed by Infineon"
msgstr ""

#: ../../../about/emulation.rst:89 ../../../about/emulation.rst:175
msgid "Xtensa"
msgstr ""

#: ../../../about/emulation.rst:90
msgid ":ref:`Yes<Xtensa-System-emulator>`"
msgstr ""

#: ../../../about/emulation.rst:92
msgid "A configurable 32 bit soft core now owned by Cadence"
msgstr ""

#: ../../../about/emulation.rst:97
msgid "Semihosting"
msgstr ""

#: ../../../about/emulation.rst:99
msgid ""
"Semihosting is a feature defined by the owner of the architecture to allow "
"programs to interact with a debugging host system. On real hardware this is "
"usually provided by an In-circuit emulator (ICE) hooked directly to the "
"board. QEMU's implementation allows for semihosting calls to be passed to "
"the host system or via the ``gdbstub``."
msgstr ""

#: ../../../about/emulation.rst:106
msgid ""
"Generally semihosting makes it easier to bring up low level code before a "
"more fully functional operating system has been enabled. On QEMU it also "
"allows for embedded micro-controller code which typically doesn't have a "
"full libc to be run as \"bare-metal\" code under QEMU's user-mode emulation. "
"It is also useful for writing test cases and indeed a number of compiler "
"suites as well as QEMU itself use semihosting calls to exit test code while "
"reporting the success state."
msgstr ""

#: ../../../about/emulation.rst:114
msgid ""
"Semihosting is only available using TCG emulation. This is because the "
"instructions to trigger a semihosting call are typically reserved causing "
"most hypervisors to trap and fault on them."
msgstr ""

#: ../../../about/emulation.rst:119
msgid ""
"Semihosting inherently bypasses any isolation there may be between the guest "
"and the host. As a result a program using semihosting can happily trash your "
"host system. Some semihosting calls (e.g. ``SYS_READC``) can block execution "
"indefinitely. You should only ever run trusted code with semihosting enabled."
msgstr ""

#: ../../../about/emulation.rst:126
msgid "Redirection"
msgstr ""

#: ../../../about/emulation.rst:128
msgid ""
"Semihosting calls can be re-directed to a (potentially remote) gdb during "
"debugging via the :ref:`gdbstub<GDB usage>`. Output to the semihosting "
"console is configured as a ``chardev`` so can be redirected to a file, pipe "
"or socket like any other ``chardev`` device."
msgstr ""

#: ../../../about/emulation.rst:135
msgid "Supported Targets"
msgstr ""

#: ../../../about/emulation.rst:137
msgid ""
"Most targets offer similar semihosting implementations with some minor "
"changes to define the appropriate instruction to encode the semihosting call "
"and which registers hold the parameters. They tend to presents a simple "
"POSIX-like API which allows your program to read and write files, access the "
"console and some other basic interactions."
msgstr ""

#: ../../../about/emulation.rst:143
msgid ""
"For full details of the ABI for a particular target, and the set of calls it "
"provides, you should consult the semihosting specification for that "
"architecture."
msgstr ""

#: ../../../about/emulation.rst:148
msgid ""
"QEMU makes an implementation decision to implement all file access in "
"``O_BINARY`` mode. The user-visible effect of this is regardless of the text/"
"binary mode the program sets QEMU will always select a binary mode ensuring "
"no line-terminator conversion is performed on input or output. This is "
"because gdb semihosting support doesn't make the distinction between the "
"modes and magically processing line endings can be confusing."
msgstr ""

#: ../../../about/emulation.rst:156
msgid "Guest Architectures supporting Semihosting"
msgstr ""

#: ../../../about/emulation.rst:160
msgid "Architecture"
msgstr ""

#: ../../../about/emulation.rst:161
msgid "Modes"
msgstr ""

#: ../../../about/emulation.rst:162
msgid "Specification"
msgstr "規範"

#: ../../../about/emulation.rst:163
msgid "Arm"
msgstr ""

#: ../../../about/emulation.rst:164 ../../../about/emulation.rst:173
msgid "System and User-mode"
msgstr ""

#: ../../../about/emulation.rst:165
msgid ""
"https://github.com/ARM-software/abi-aa/blob/main/semihosting/semihosting.rst"
msgstr ""

#: ../../../about/emulation.rst:168
msgid ""
"https://sourceware.org/git/?p=newlib-cygwin.git;a=blob;f=libgloss/m68k/m68k-"
"semi.txt;hb=HEAD"
msgstr ""

#: ../../../about/emulation.rst:169
msgid "MIPS"
msgstr ""

#: ../../../about/emulation.rst:171
msgid "Unified Hosting Interface (MD01069)"
msgstr ""

#: ../../../about/emulation.rst:174
msgid ""
"https://github.com/riscv-non-isa/riscv-semihosting/blob/main/riscv-"
"semihosting.adoc"
msgstr ""

#: ../../../about/emulation.rst:177
msgid "Tensilica ISS SIMCALL"
msgstr ""

#: ../../../about/emulation.rst:180
msgid "TCG Plugins"
msgstr ""

#: ../../../about/emulation.rst:182
msgid ""
"QEMU TCG plugins provide a way for users to run experiments taking advantage "
"of the total system control emulation can have over a guest. It provides a "
"mechanism for plugins to subscribe to events during translation and "
"execution and optionally callback into the plugin during these events. TCG "
"plugins are unable to change the system state only monitor it passively. "
"However they can do this down to an individual instruction granularity "
"including potentially subscribing to all load and store operations."
msgstr ""

#: ../../../about/emulation.rst:191
msgid ""
"See the developer section of the manual for details about :ref:`writing "
"plugins<TCG Plugins>`."
msgstr ""

#: ../../../about/emulation.rst:195
msgid "Usage"
msgstr ""

#: ../../../about/emulation.rst:197
msgid ""
"Any QEMU binary with TCG support has plugins enabled by default. Earlier "
"releases needed to be explicitly enabled with::"
msgstr ""

#: ../../../about/emulation.rst:200
msgid "configure --enable-plugins"
msgstr ""

#: ../../../about/emulation.rst:202
msgid ""
"Once built a program can be run with multiple plugins loaded each with their "
"own arguments::"
msgstr ""

#: ../../../about/emulation.rst:205
msgid ""
"$QEMU $OTHER_QEMU_ARGS \\\n"
"    -plugin contrib/plugins/libhowvec.so,inline=on,count=hint \\\n"
"    -plugin contrib/plugins/libhotblocks.so"
msgstr ""

#: ../../../about/emulation.rst:209
msgid ""
"Arguments are plugin specific and can be used to modify their behaviour. In "
"this case the howvec plugin is being asked to use inline ops to count and "
"break down the hint instructions by type."
msgstr ""

#: ../../../about/emulation.rst:213
msgid ""
"Linux user-mode emulation also evaluates the environment variable "
"``QEMU_PLUGIN``::"
msgstr ""

#: ../../../about/emulation.rst:216
msgid ""
"QEMU_PLUGIN=\"file=contrib/plugins/libhowvec.so,inline=on,count=hint\" $QEMU"
msgstr ""

#: ../../../about/emulation.rst:218
msgid ""
"QEMU plugins avoid to write directly to stdin/stderr, and use the log "
"provided by the API (see function ``qemu_plugin_outs``). To show output, you "
"may use this additional parameter::"
msgstr ""

#: ../../../about/emulation.rst:222
msgid ""
"$QEMU $OTHER_QEMU_ARGS \\\n"
"  -d plugin \\\n"
"  -plugin contrib/plugins/libhowvec.so,inline=on,count=hint"
msgstr ""

#: ../../../about/emulation.rst:227
msgid "Example Plugins"
msgstr ""

#: ../../../about/emulation.rst:229
msgid ""
"There are a number of plugins included with QEMU and you are encouraged to "
"contribute your own plugins plugins upstream. There is a ``contrib/plugins`` "
"directory where they can go. There are also some basic plugins that are used "
"to test and exercise the API during the ``make check-tcg`` target in ``tests/"
"tcg/plugins`` that are never the less useful for basic analysis."
msgstr ""

#: ../../../about/emulation.rst:237
msgid "Empty"
msgstr ""

#: ../../../about/emulation.rst:239
msgid "``tests/tcg/plugins/empty.c``"
msgstr ""

#: ../../../about/emulation.rst:241
msgid ""
"Purely a test plugin for measuring the overhead of the plugins system "
"itself. Does no instrumentation."
msgstr ""

#: ../../../about/emulation.rst:245
msgid "Basic Blocks"
msgstr ""

#: ../../../about/emulation.rst:247
msgid "``tests/tcg/plugins/bb.c``"
msgstr ""

#: ../../../about/emulation.rst:249
msgid ""
"A very basic plugin which will measure execution in coarse terms as each "
"basic block is executed. By default the results are shown once execution "
"finishes::"
msgstr ""

#: ../../../about/emulation.rst:253
msgid ""
"$ qemu-aarch64 -plugin tests/plugin/libbb.so \\\n"
"    -d plugin ./tests/tcg/aarch64-linux-user/sha1\n"
"SHA1=15dd99a1991e0b3826fede3deffc1feba42278e6\n"
"bb's: 2277338, insns: 158483046"
msgstr ""

#: ../../../about/emulation.rst:258 ../../../about/emulation.rst:323
#: ../../../about/emulation.rst:369 ../../../about/emulation.rst:417
msgid "Behaviour can be tweaked with the following arguments:"
msgstr ""

#: ../../../about/emulation.rst:260
msgid "Basic Block plugin arguments"
msgstr ""

#: ../../../about/emulation.rst:264 ../../../about/emulation.rst:283
#: ../../../about/emulation.rst:329 ../../../about/emulation.rst:375
#: ../../../about/emulation.rst:423 ../../../about/emulation.rst:489
#: ../../../about/emulation.rst:611 ../../../about/emulation.rst:729
#: ../../../about/emulation.rst:807
msgid "Option"
msgstr ""

#: ../../../about/emulation.rst:265 ../../../about/emulation.rst:284
#: ../../../about/emulation.rst:330 ../../../about/emulation.rst:376
#: ../../../about/emulation.rst:424 ../../../about/emulation.rst:490
#: ../../../about/emulation.rst:612 ../../../about/emulation.rst:730
#: ../../../about/emulation.rst:808
msgid "Description"
msgstr ""

#: ../../../about/emulation.rst:266 ../../../about/emulation.rst:331
#: ../../../about/emulation.rst:377
msgid "inline=true|false"
msgstr ""

#: ../../../about/emulation.rst:267 ../../../about/emulation.rst:332
msgid "Use faster inline addition of a single counter."
msgstr ""

#: ../../../about/emulation.rst:268
msgid "idle=true|false"
msgstr ""

#: ../../../about/emulation.rst:269
msgid "Dump the current execution stats whenever the guest vCPU idles"
msgstr ""

#: ../../../about/emulation.rst:272
msgid "Basic Block Vectors"
msgstr ""

#: ../../../about/emulation.rst:274
msgid "``contrib/plugins/bbv.c``"
msgstr ""

#: ../../../about/emulation.rst:276
msgid ""
"The bbv plugin allows you to generate basic block vectors for use with the "
"`SimPoint <https://cseweb.ucsd.edu/~calder/simpoint/>`__ analysis tool."
msgstr ""

#: ../../../about/emulation.rst:279
msgid "Basic block vectors arguments"
msgstr ""

#: ../../../about/emulation.rst:285
msgid "interval=N"
msgstr ""

#: ../../../about/emulation.rst:286
msgid ""
"The interval to generate a basic block vector specified by the number of "
"instructions (Default: N = 100000000)"
msgstr ""

#: ../../../about/emulation.rst:288
msgid "outfile=PATH"
msgstr ""

#: ../../../about/emulation.rst:289
msgid ""
"The path to output files. It will be suffixed with ``.N.bb`` where ``N`` is "
"a vCPU index."
msgstr ""

#: ../../../about/emulation.rst:292 ../../../about/emulation.rst:452
msgid "Example::"
msgstr ""

#: ../../../about/emulation.rst:294
msgid ""
"$ qemu-aarch64 \\\n"
"  -plugin contrib/plugins/libbbv.so,interval=100,outfile=sha1 \\\n"
"  tests/tcg/aarch64-linux-user/sha1\n"
"SHA1=15dd99a1991e0b3826fede3deffc1feba42278e6\n"
"$ du sha1.0.bb\n"
"23128   sha1.0.bb"
msgstr ""

#: ../../../about/emulation.rst:302
msgid "Instruction"
msgstr ""

#: ../../../about/emulation.rst:304
msgid "``tests/tcg/plugins/insn.c``"
msgstr ""

#: ../../../about/emulation.rst:306
msgid ""
"This is a basic instruction level instrumentation which can count the number "
"of instructions executed on each core/thread::"
msgstr ""

#: ../../../about/emulation.rst:309
msgid ""
"$ qemu-aarch64 -plugin tests/plugin/libinsn.so \\\n"
"    -d plugin ./tests/tcg/aarch64-linux-user/threadcount\n"
"Created 10 threads\n"
"Done\n"
"cpu 0 insns: 46765\n"
"cpu 1 insns: 3694\n"
"cpu 2 insns: 3694\n"
"cpu 3 insns: 2994\n"
"cpu 4 insns: 1497\n"
"cpu 5 insns: 1497\n"
"cpu 6 insns: 1497\n"
"cpu 7 insns: 1497\n"
"total insns: 63135"
msgstr ""

#: ../../../about/emulation.rst:325
msgid "Instruction plugin arguments"
msgstr ""

#: ../../../about/emulation.rst:333
msgid "sizes=true|false"
msgstr ""

#: ../../../about/emulation.rst:334
msgid "Give a summary of the instruction sizes for the execution"
msgstr ""

#: ../../../about/emulation.rst:335
msgid "match=<string>"
msgstr ""

#: ../../../about/emulation.rst:336
msgid "Only instrument instructions matching the string prefix"
msgstr ""

#: ../../../about/emulation.rst:338
msgid ""
"The ``match`` option will show some basic stats including how many "
"instructions have executed since the last execution. For example::"
msgstr ""

#: ../../../about/emulation.rst:342
msgid ""
"$ qemu-aarch64 -plugin tests/plugin/libinsn.so,match=bl \\\n"
"    -d plugin ./tests/tcg/aarch64-linux-user/sha512-vector\n"
"...\n"
"0x40069c, 'bl #0x4002b0', 10 hits, 1093 match hits, Δ+1257 since last match, "
"98 avg insns/match\n"
"0x4006ac, 'bl #0x403690', 10 hits, 1094 match hits, Δ+47 since last match, "
"98 avg insns/match\n"
"0x4037fc, 'bl #0x4002b0', 18 hits, 1095 match hits, Δ+22 since last match, "
"98 avg insns/match\n"
"0x400720, 'bl #0x403690', 10 hits, 1096 match hits, Δ+58 since last match, "
"98 avg insns/match\n"
"0x4037fc, 'bl #0x4002b0', 19 hits, 1097 match hits, Δ+22 since last match, "
"98 avg insns/match\n"
"0x400730, 'bl #0x403690', 10 hits, 1098 match hits, Δ+33 since last match, "
"98 avg insns/match\n"
"0x4037ac, 'bl #0x4002b0', 12 hits, 1099 match hits, Δ+20 since last match, "
"98 avg insns/match\n"
"..."
msgstr ""

#: ../../../about/emulation.rst:354
msgid ""
"For more detailed execution tracing see the ``execlog`` plugin for other "
"options."
msgstr ""

#: ../../../about/emulation.rst:358
msgid "Memory"
msgstr ""

#: ../../../about/emulation.rst:360
msgid "``tests/tcg/plugins/mem.c``"
msgstr ""

#: ../../../about/emulation.rst:362
msgid "Basic instruction level memory instrumentation::"
msgstr ""

#: ../../../about/emulation.rst:364
msgid ""
"$ qemu-aarch64 -plugin tests/plugin/libmem.so,inline=true \\\n"
"    -d plugin ./tests/tcg/aarch64-linux-user/sha1\n"
"SHA1=15dd99a1991e0b3826fede3deffc1feba42278e6\n"
"inline mem accesses: 79525013"
msgstr ""

#: ../../../about/emulation.rst:371
msgid "Memory plugin arguments"
msgstr ""

#: ../../../about/emulation.rst:378
msgid "Use faster inline addition of a single counter"
msgstr ""

#: ../../../about/emulation.rst:379
msgid "callback=true|false"
msgstr ""

#: ../../../about/emulation.rst:380
msgid "Use callbacks on each memory instrumentation."
msgstr ""

#: ../../../about/emulation.rst:381
msgid "hwaddr=true|false"
msgstr ""

#: ../../../about/emulation.rst:382
msgid "Count IO accesses (only for system emulation)"
msgstr ""

#: ../../../about/emulation.rst:385
msgid "System Calls"
msgstr ""

#: ../../../about/emulation.rst:387
msgid "``tests/tcg/plugins/syscall.c``"
msgstr ""

#: ../../../about/emulation.rst:389
msgid ""
"A basic syscall tracing plugin. This only works for user-mode. By default it "
"will give a summary of syscall stats at the end of the run::"
msgstr ""

#: ../../../about/emulation.rst:393
msgid ""
"$ qemu-aarch64 -plugin tests/plugin/libsyscall \\\n"
"    -d plugin ./tests/tcg/aarch64-linux-user/threadcount\n"
"Created 10 threads\n"
"Done\n"
"syscall no.  calls  errors\n"
"226          12     0\n"
"99           11     11\n"
"115          11     0\n"
"222          11     0\n"
"93           10     0\n"
"220          10     0\n"
"233          10     0\n"
"215          8      0\n"
"214          4      0\n"
"134          2      0\n"
"64           2      0\n"
"96           1      0\n"
"94           1      0\n"
"80           1      0\n"
"261          1      0\n"
"78           1      0\n"
"160          1      0\n"
"135          1      0"
msgstr ""

#: ../../../about/emulation.rst:419
msgid "Syscall plugin arguments"
msgstr ""

#: ../../../about/emulation.rst:425
msgid "print=true|false"
msgstr ""

#: ../../../about/emulation.rst:426
msgid "Print the number of times each syscall is called"
msgstr ""

#: ../../../about/emulation.rst:427
msgid "log_writes=true|false"
msgstr ""

#: ../../../about/emulation.rst:428
msgid "Log the buffer of each write syscall in hexdump format"
msgstr ""

#: ../../../about/emulation.rst:431
msgid "Test inline operations"
msgstr ""

#: ../../../about/emulation.rst:433
msgid "``tests/plugins/inline.c``"
msgstr ""

#: ../../../about/emulation.rst:435
msgid ""
"This plugin is used for testing all inline operations, conditional callbacks "
"and scoreboard. It prints a per-cpu summary of all events."
msgstr ""

#: ../../../about/emulation.rst:440
msgid "Hot Blocks"
msgstr ""

#: ../../../about/emulation.rst:442
msgid "``contrib/plugins/hotblocks.c``"
msgstr ""

#: ../../../about/emulation.rst:444
msgid ""
"The hotblocks plugin allows you to examine the where hot paths of execution "
"are in your program. Once the program has finished you will get a sorted "
"list of blocks reporting the starting PC, translation count, number of "
"instructions and execution count. This will work best with linux-user "
"execution as system emulation tends to generate re-translations as blocks "
"from different programs get swapped in and out of system memory."
msgstr ""

#: ../../../about/emulation.rst:454
msgid ""
"$ qemu-aarch64 \\\n"
"  -plugin contrib/plugins/libhotblocks.so -d plugin \\\n"
"  ./tests/tcg/aarch64-linux-user/sha1\n"
"SHA1=15dd99a1991e0b3826fede3deffc1feba42278e6\n"
"collected 903 entries in the hash table\n"
"pc, tcount, icount, ecount\n"
"0x0000000041ed10, 1, 5, 66087\n"
"0x000000004002b0, 1, 4, 66087\n"
"..."
msgstr ""

#: ../../../about/emulation.rst:466
msgid "Hot Pages"
msgstr ""

#: ../../../about/emulation.rst:468
msgid "``contrib/plugins/hotpages.c``"
msgstr ""

#: ../../../about/emulation.rst:470
msgid "Similar to hotblocks but this time tracks memory accesses::"
msgstr ""

#: ../../../about/emulation.rst:472
msgid ""
"$ qemu-aarch64 \\\n"
"  -plugin contrib/plugins/libhotpages.so -d plugin \\\n"
"  ./tests/tcg/aarch64-linux-user/sha1\n"
"SHA1=15dd99a1991e0b3826fede3deffc1feba42278e6\n"
"Addr, RCPUs, Reads, WCPUs, Writes\n"
"0x000055007fe000, 0x0001, 31747952, 0x0001, 8835161\n"
"0x000055007ff000, 0x0001, 29001054, 0x0001, 8780625\n"
"0x00005500800000, 0x0001, 687465, 0x0001, 335857\n"
"0x0000000048b000, 0x0001, 130594, 0x0001, 355\n"
"0x0000000048a000, 0x0001, 1826, 0x0001, 11"
msgstr ""

#: ../../../about/emulation.rst:483
msgid "The hotpages plugin can be configured using the following arguments:"
msgstr ""

#: ../../../about/emulation.rst:485
msgid "Hot pages arguments"
msgstr ""

#: ../../../about/emulation.rst:491
msgid "sortby=reads|writes|address"
msgstr ""

#: ../../../about/emulation.rst:492
msgid ""
"Log the data sorted by either the number of reads, the number of writes, or "
"memory address. (Default: entries are sorted by the sum of reads and writes)"
msgstr ""

#: ../../../about/emulation.rst:494
msgid "io=on"
msgstr ""

#: ../../../about/emulation.rst:495
msgid ""
"Track IO addresses. Only relevant to full system emulation. (Default: off)"
msgstr ""

#: ../../../about/emulation.rst:496
msgid "pagesize=N"
msgstr ""

#: ../../../about/emulation.rst:497
msgid "The page size used. (Default: N = 4096)"
msgstr ""

#: ../../../about/emulation.rst:500
msgid "Instruction Distribution"
msgstr ""

#: ../../../about/emulation.rst:502
msgid "``contrib/plugins/howvec.c``"
msgstr ""

#: ../../../about/emulation.rst:504
msgid ""
"This is an instruction classifier so can be used to count different types of "
"instructions. It has a number of options to refine which get counted. You "
"can give a value to the ``count`` argument for a class of instructions to "
"break it down fully, so for example to see all the system registers "
"accesses::"
msgstr ""

#: ../../../about/emulation.rst:510
msgid ""
"$ qemu-system-aarch64 $(QEMU_ARGS) \\\n"
"  -append \"root=/dev/sda2 systemd.unit=benchmark.service\" \\\n"
"  -smp 4 -plugin ./contrib/plugins/libhowvec.so,count=sreg -d plugin"
msgstr ""

#: ../../../about/emulation.rst:514
msgid "which will lead to a sorted list after the class breakdown::"
msgstr ""

#: ../../../about/emulation.rst:516
msgid ""
"Instruction Classes:\n"
"Class:   UDEF                   not counted\n"
"Class:   SVE                    (68 hits)\n"
"Class:   PCrel addr             (47789483 hits)\n"
"Class:   Add/Sub (imm)          (192817388 hits)\n"
"Class:   Logical (imm)          (93852565 hits)\n"
"Class:   Move Wide (imm)        (76398116 hits)\n"
"Class:   Bitfield               (44706084 hits)\n"
"Class:   Extract                (5499257 hits)\n"
"Class:   Cond Branch (imm)      (147202932 hits)\n"
"Class:   Exception Gen          (193581 hits)\n"
"Class:     NOP                  not counted\n"
"Class:   Hints                  (6652291 hits)\n"
"Class:   Barriers               (8001661 hits)\n"
"Class:   PSTATE                 (1801695 hits)\n"
"Class:   System Insn            (6385349 hits)\n"
"Class:   System Reg             counted individually\n"
"Class:   Branch (reg)           (69497127 hits)\n"
"Class:   Branch (imm)           (84393665 hits)\n"
"Class:   Cmp & Branch           (110929659 hits)\n"
"Class:   Tst & Branch           (44681442 hits)\n"
"Class:   AdvSimd ldstmult       (736 hits)\n"
"Class:   ldst excl              (9098783 hits)\n"
"Class:   Load Reg (lit)         (87189424 hits)\n"
"Class:   ldst noalloc pair      (3264433 hits)\n"
"Class:   ldst pair              (412526434 hits)\n"
"Class:   ldst reg (imm)         (314734576 hits)\n"
"Class: Loads & Stores           (2117774 hits)\n"
"Class: Data Proc Reg            (223519077 hits)\n"
"Class: Scalar FP                (31657954 hits)\n"
"Individual Instructions:\n"
"Instr: mrs x0, sp_el0           (2682661 hits)  (op=0xd5384100/  System "
"Reg)\n"
"Instr: mrs x1, tpidr_el2        (1789339 hits)  (op=0xd53cd041/  System "
"Reg)\n"
"Instr: mrs x2, tpidr_el2        (1513494 hits)  (op=0xd53cd042/  System "
"Reg)\n"
"Instr: mrs x0, tpidr_el2        (1490823 hits)  (op=0xd53cd040/  System "
"Reg)\n"
"Instr: mrs x1, sp_el0           (933793 hits)   (op=0xd5384101/  System "
"Reg)\n"
"Instr: mrs x2, sp_el0           (699516 hits)   (op=0xd5384102/  System "
"Reg)\n"
"Instr: mrs x4, tpidr_el2        (528437 hits)   (op=0xd53cd044/  System "
"Reg)\n"
"Instr: mrs x30, ttbr1_el1       (480776 hits)   (op=0xd538203e/  System "
"Reg)\n"
"Instr: msr ttbr1_el1, x30       (480713 hits)   (op=0xd518203e/  System "
"Reg)\n"
"Instr: msr vbar_el1, x30        (480671 hits)   (op=0xd518c01e/  System "
"Reg)\n"
"..."
msgstr ""

#: ../../../about/emulation.rst:559
msgid ""
"To find the argument shorthand for the class you need to examine the source "
"code of the plugin at the moment, specifically the ``*opt`` argument in the "
"InsnClassExecCount tables."
msgstr ""

#: ../../../about/emulation.rst:564
msgid "Lockstep Execution"
msgstr ""

#: ../../../about/emulation.rst:566
msgid "``contrib/plugins/lockstep.c``"
msgstr ""

#: ../../../about/emulation.rst:568
msgid ""
"This is a debugging tool for developers who want to find out when and where "
"execution diverges after a subtle change to TCG code generation. It is not "
"an exact science and results are likely to be mixed once asynchronous events "
"are introduced. While the use of -icount can introduce determinism to the "
"execution flow it doesn't always follow the translation sequence will be "
"exactly the same. Typically this is caused by a timer firing to service the "
"GUI causing a block to end early. However in some cases it has proved to be "
"useful in pointing people at roughly where execution diverges. The only "
"argument you need for the plugin is a path for the socket the two instances "
"will communicate over::"
msgstr ""

#: ../../../about/emulation.rst:581
msgid ""
"$ qemu-system-sparc -monitor none -parallel none \\\n"
"  -net none -M SS-20 -m 256 -kernel day11/zImage.elf \\\n"
"  -plugin ./contrib/plugins/liblockstep.so,sockpath=lockstep-sparc.sock \\\n"
"  -d plugin,nochain"
msgstr ""

#: ../../../about/emulation.rst:586
msgid "which will eventually report::"
msgstr ""

#: ../../../about/emulation.rst:588
msgid ""
"qemu-system-sparc: warning: nic lance.0 has no peer\n"
"@ 0x000000ffd06678 vs 0x000000ffd001e0 (2/1 since last)\n"
"@ 0x000000ffd07d9c vs 0x000000ffd06678 (3/1 since last)\n"
"Δ insn_count @ 0x000000ffd07d9c (809900609) vs 0x000000ffd06678 (809900612)\n"
"  previously @ 0x000000ffd06678/10 (809900609 insns)\n"
"  previously @ 0x000000ffd001e0/4 (809900599 insns)\n"
"  previously @ 0x000000ffd080ac/2 (809900595 insns)\n"
"  previously @ 0x000000ffd08098/5 (809900593 insns)\n"
"  previously @ 0x000000ffd080c0/1 (809900588 insns)"
msgstr ""

#: ../../../about/emulation.rst:600
msgid "Hardware Profile"
msgstr ""

#: ../../../about/emulation.rst:602
msgid "``contrib/plugins/hwprofile.c``"
msgstr ""

#: ../../../about/emulation.rst:604
msgid ""
"The hwprofile tool can only be used with system emulation and allows the "
"user to see what hardware is accessed how often. It has a number of options:"
msgstr ""

#: ../../../about/emulation.rst:607
msgid "Hardware Profile arguments"
msgstr ""

#: ../../../about/emulation.rst:613
msgid "track=[read|write]"
msgstr ""

#: ../../../about/emulation.rst:614
msgid ""
"By default the plugin tracks both reads and writes. You can use this option "
"to limit the tracking to just one class of accesses."
msgstr ""

#: ../../../about/emulation.rst:616
msgid "source"
msgstr ""

#: ../../../about/emulation.rst:617
msgid ""
"Will include a detailed break down of what the guest PC that made the access "
"was. Not compatible with the pattern option. Example output::"
msgstr ""

#: ../../../about/emulation.rst:620
msgid ""
"cirrus-low-memory @ 0xfffffd00000a0000\n"
" pc:fffffc0000005cdc, 1, 256\n"
" pc:fffffc0000005ce8, 1, 256\n"
" pc:fffffc0000005cec, 1, 256"
msgstr ""

#: ../../../about/emulation.rst:625
msgid "pattern"
msgstr ""

#: ../../../about/emulation.rst:626
msgid ""
"Instead break down the accesses based on the offset into the HW region. This "
"can be useful for seeing the most used registers of a device. Example "
"output::"
msgstr ""

#: ../../../about/emulation.rst:630
msgid ""
"pci0-conf @ 0xfffffd01fe000000\n"
"  off:00000004, 1, 1\n"
"  off:00000010, 1, 3\n"
"  off:00000014, 1, 3\n"
"  off:00000018, 1, 2\n"
"  off:0000001c, 1, 2\n"
"  off:00000020, 1, 2\n"
"  ..."
msgstr ""

#: ../../../about/emulation.rst:641
msgid "Execution Log"
msgstr ""

#: ../../../about/emulation.rst:643
msgid "``contrib/plugins/execlog.c``"
msgstr ""

#: ../../../about/emulation.rst:645
msgid ""
"The execlog tool traces executed instructions with memory access. It can be "
"used for debugging and security analysis purposes. Please be aware that this "
"will generate a lot of output."
msgstr ""

#: ../../../about/emulation.rst:649
msgid "The plugin needs default argument::"
msgstr ""

#: ../../../about/emulation.rst:651
msgid ""
"$ qemu-system-arm $(QEMU_ARGS) \\\n"
"  -plugin ./contrib/plugins/libexeclog.so -d plugin"
msgstr ""

#: ../../../about/emulation.rst:654
msgid "which will output an execution trace following this structure::"
msgstr ""

#: ../../../about/emulation.rst:656
msgid ""
"# vCPU, vAddr, opcode, disassembly[, load/store, memory addr, device]...\n"
"0, 0xa12, 0xf8012400, \"movs r4, #0\"\n"
"0, 0xa14, 0xf87f42b4, \"cmp r4, r6\"\n"
"0, 0xa16, 0xd206, \"bhs #0xa26\"\n"
"0, 0xa18, 0xfff94803, \"ldr r0, [pc, #0xc]\", load, 0x00010a28, RAM\n"
"0, 0xa1a, 0xf989f000, \"bl #0xd30\"\n"
"0, 0xd30, 0xfff9b510, \"push {r4, lr}\", store, 0x20003ee0, RAM, store, "
"0x20003ee4, RAM\n"
"0, 0xd32, 0xf9893014, \"adds r0, #0x14\"\n"
"0, 0xd34, 0xf9c8f000, \"bl #0x10c8\"\n"
"0, 0x10c8, 0xfff96c43, \"ldr r3, [r0, #0x44]\", load, 0x200000e4, RAM"
msgstr ""

#: ../../../about/emulation.rst:667
msgid ""
"Please note that you need to configure QEMU with Capstone support to get "
"disassembly."
msgstr ""

#: ../../../about/emulation.rst:669
msgid ""
"The output can be filtered to only track certain instructions or addresses "
"using the ``ifilter`` or ``afilter`` options. You can stack the arguments if "
"required::"
msgstr ""

#: ../../../about/emulation.rst:673
msgid ""
"$ qemu-system-arm $(QEMU_ARGS) \\\n"
"  -plugin ./contrib/plugins/libexeclog.so,ifilter=st1w,afilter=0x40001808 -d "
"plugin"
msgstr ""

#: ../../../about/emulation.rst:676
msgid ""
"This plugin can also dump registers when they change value. Specify the name "
"of the registers with multiple ``reg`` options. You can also use glob style "
"matching if you wish::"
msgstr ""

#: ../../../about/emulation.rst:679
msgid ""
"$ qemu-system-arm $(QEMU_ARGS) \\\n"
"  -plugin ./contrib/plugins/libexeclog.so,reg=\\*_el2,reg=sp -d plugin"
msgstr ""

#: ../../../about/emulation.rst:682
msgid ""
"Be aware that each additional register to check will slow down execution "
"quite considerably. You can optimise the number of register checks done by "
"using the rdisas option. This will only instrument instructions that mention "
"the registers in question in disassembly. This is not foolproof as some "
"instructions implicitly change instructions. You can use the ifilter to "
"catch these cases::"
msgstr ""

#: ../../../about/emulation.rst:689
msgid ""
"$ qemu-system-arm $(QEMU_ARGS) \\\n"
"  -plugin ./contrib/plugins/libexeclog.so,ifilter=msr,ifilter=blr,reg=x30,"
"reg=\\*_el1,rdisas=on"
msgstr ""

#: ../../../about/emulation.rst:693
msgid "Cache Modelling"
msgstr ""

#: ../../../about/emulation.rst:695
msgid "``contrib/plugins/cache.c``"
msgstr ""

#: ../../../about/emulation.rst:697
msgid ""
"Cache modelling plugin that measures the performance of a given L1 cache "
"configuration, and optionally a unified L2 per-core cache when a given "
"working set is run::"
msgstr ""

#: ../../../about/emulation.rst:701
msgid ""
"$ qemu-x86_64 -plugin ./contrib/plugins/libcache.so \\\n"
"    -d plugin -D cache.log ./tests/tcg/x86_64-linux-user/float_convs"
msgstr ""

#: ../../../about/emulation.rst:704
msgid "will report the following::"
msgstr ""

#: ../../../about/emulation.rst:706
msgid ""
"core #, data accesses, data misses, dmiss rate, insn accesses, insn misses, "
"imiss rate\n"
"0       996695         508             0.0510%  2642799        "
"18617           0.7044%\n"
"\n"
"address, data misses, instruction\n"
"0x424f1e (_int_malloc), 109, movq %rax, 8(%rcx)\n"
"0x41f395 (_IO_default_xsputn), 49, movb %dl, (%rdi, %rax)\n"
"0x42584d (ptmalloc_init.part.0), 33, movaps %xmm0, (%rax)\n"
"0x454d48 (__tunables_init), 20, cmpb $0, (%r8)\n"
"...\n"
"\n"
"address, fetch misses, instruction\n"
"0x4160a0 (__vfprintf_internal), 744, movl $1, %ebx\n"
"0x41f0a0 (_IO_setb), 744, endbr64\n"
"0x415882 (__vfprintf_internal), 744, movq %r12, %rdi\n"
"0x4268a0 (__malloc), 696, andq $0xfffffffffffffff0, %rax\n"
"..."
msgstr ""

#: ../../../about/emulation.rst:723
msgid "The plugin has a number of arguments, all of them are optional:"
msgstr ""

#: ../../../about/emulation.rst:725
msgid "Cache modelling arguments"
msgstr ""

#: ../../../about/emulation.rst:731
msgid "limit=N"
msgstr ""

#: ../../../about/emulation.rst:732
msgid ""
"Print top N icache and dcache thrashing instructions along with their "
"address, number of misses, and its disassembly. (default: 32)"
msgstr ""

#: ../../../about/emulation.rst:734
msgid "icachesize=N iblksize=B iassoc=A"
msgstr ""

#: ../../../about/emulation.rst:737
msgid ""
"Instruction cache configuration arguments. They specify the cache size, "
"block size, and associativity of the instruction cache, respectively. "
"(default: N = 16384, B = 64, A = 8)"
msgstr ""

#: ../../../about/emulation.rst:740
msgid "dcachesize=N"
msgstr ""

#: ../../../about/emulation.rst:741
msgid "Data cache size (default: 16834)"
msgstr ""

#: ../../../about/emulation.rst:742
msgid "dblksize=B"
msgstr ""

#: ../../../about/emulation.rst:743
msgid "Data cache block size (default: 64)"
msgstr ""

#: ../../../about/emulation.rst:744
msgid "dassoc=A"
msgstr ""

#: ../../../about/emulation.rst:745
msgid "Data cache associativity (default: 8)"
msgstr ""

#: ../../../about/emulation.rst:746
msgid "evict=POLICY"
msgstr ""

#: ../../../about/emulation.rst:747
msgid ""
"Sets the eviction policy to POLICY. Available policies are: ``lru``, "
"``fifo``, and ``rand``. The plugin will use the specified policy for both "
"instruction and data caches. (default: POLICY = ``lru``)"
msgstr ""

#: ../../../about/emulation.rst:751
msgid "cores=N"
msgstr ""

#: ../../../about/emulation.rst:752
msgid ""
"Sets the number of cores for which we maintain separate icache and dcache. "
"(default: for linux-user, N = 1, for full system emulation: N = cores "
"available to guest)"
msgstr ""

#: ../../../about/emulation.rst:755
msgid "l2=on"
msgstr ""

#: ../../../about/emulation.rst:756
msgid ""
"Simulates a unified L2 cache (stores blocks for both instructions and data) "
"using the default L2 configuration (cache size = 2MB, associativity = 16-"
"way, block size = 64B)."
msgstr ""

#: ../../../about/emulation.rst:759
msgid "l2cachesize=N"
msgstr ""

#: ../../../about/emulation.rst:760
msgid "L2 cache size (default: 2097152 (2MB)), implies ``l2=on``"
msgstr ""

#: ../../../about/emulation.rst:761
msgid "l2blksize=B"
msgstr ""

#: ../../../about/emulation.rst:762
msgid "L2 cache block size (default: 64), implies ``l2=on``"
msgstr ""

#: ../../../about/emulation.rst:763
msgid "l2assoc=A"
msgstr ""

#: ../../../about/emulation.rst:764
msgid "L2 cache associativity (default: 16), implies ``l2=on``"
msgstr ""

#: ../../../about/emulation.rst:767
msgid "Stop on Trigger"
msgstr ""

#: ../../../about/emulation.rst:769
msgid "``contrib/plugins/stoptrigger.c``"
msgstr ""

#: ../../../about/emulation.rst:771
msgid ""
"The stoptrigger plugin allows to setup triggers to stop emulation. It can be "
"used for research purposes to launch some code and precisely stop it and "
"understand where its execution flow went."
msgstr ""

#: ../../../about/emulation.rst:775
msgid ""
"Two types of triggers can be configured: a count of instructions to stop at, "
"or an address to stop at. Multiple triggers can be set at once."
msgstr ""

#: ../../../about/emulation.rst:778
msgid ""
"By default, QEMU will exit with return code 0. A custom return code can be "
"configured for each trigger using ``:CODE`` syntax."
msgstr ""

#: ../../../about/emulation.rst:781
msgid ""
"For example, to stop at the 20-th instruction with return code 41, at "
"address 0xd4 with return code 0 or at address 0xd8 with return code 42::"
msgstr ""

#: ../../../about/emulation.rst:784
msgid ""
"$ qemu-system-aarch64 $(QEMU_ARGS) \\\n"
"  -plugin ./contrib/plugins/libstoptrigger.so,icount=20:41,addr=0xd4,"
"addr=0xd8:42 -d plugin"
msgstr ""

#: ../../../about/emulation.rst:787
msgid "The plugin will log the reason of exit, for example::"
msgstr ""

#: ../../../about/emulation.rst:789
msgid "0xd4 reached, exiting"
msgstr ""

#: ../../../about/emulation.rst:792
msgid "Limit instructions per second"
msgstr ""

#: ../../../about/emulation.rst:794
msgid ""
"This plugin can limit the number of Instructions Per Second that are "
"executed::"
msgstr ""

#: ../../../about/emulation.rst:796
msgid ""
"# get number of instructions\n"
"$ num_insn=$(./build/qemu-x86_64 -plugin ./build/tests/plugin/libinsn.so -d "
"plugin /bin/true |& grep total | sed -e 's/.*: //')\n"
"# limit speed to execute in 10 seconds\n"
"$ time ./build/qemu-x86_64 -plugin ./build/contrib/plugins/libips.so,"
"ips=$(($num_insn/10)) /bin/true\n"
"real 10.000s"
msgstr ""

#: ../../../about/emulation.rst:803
msgid "IPS arguments"
msgstr ""

#: ../../../about/emulation.rst:809
msgid "ips=N"
msgstr ""

#: ../../../about/emulation.rst:810
msgid ""
"Maximum number of instructions per cpu that can be executed in one second. "
"The plugin will sleep when the given number of instructions is reached."
msgstr ""

#: ../../../about/emulation.rst:814
msgid "Other emulation features"
msgstr ""

#: ../../../about/emulation.rst:816
msgid ""
"When running system emulation you can also enable deterministic execution "
"which allows for repeatable record/replay debugging. See :ref:`Record/"
"Replay<replay>` for more details."
msgstr ""
