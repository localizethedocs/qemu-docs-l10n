# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 05:37+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../system/arm/aspeed.rst:2
msgid ""
"Aspeed family boards (``ast2500-evb``, ``ast2600-evb``, ``ast2700-evb``, "
"``bletchley-bmc``, ``fuji-bmc``, ``gb200nvl-bmc``, ``fby35-bmc``, ``fp5280g2-"
"bmc``, ``g220a-bmc``, ``palmetto-bmc``, ``qcom-dc-scm-v1-bmc``, ``qcom-"
"firework-bmc``, ``quanta-q71l-bmc``, ``rainier-bmc``, ``romulus-bmc``, "
"``sonorapass-bmc``, ``supermicrox11-bmc``, ``supermicrox11spi-bmc``, "
"``tiogapass-bmc``, ``witherspoon-bmc``, ``yosemitev2-bmc``)"
msgstr ""

#: ../../../system/arm/aspeed.rst:4
msgid ""
"The QEMU Aspeed machines model BMCs of various OpenPOWER systems and Aspeed "
"evaluation boards. They are based on different releases of the Aspeed SoC : "
"the AST2400 integrating an ARM926EJ-S CPU (400MHz), the AST2500 with an "
"ARM1176JZS CPU (800MHz), the AST2600 with dual cores ARM Cortex-A7 CPUs "
"(1.2GHz)."
msgstr ""

#: ../../../system/arm/aspeed.rst:10 ../../../system/arm/aspeed.rst:253
msgid ""
"The SoC comes with RAM, Gigabit ethernet, USB, SD/MMC, USB, SPI, I2C, etc."
msgstr ""

#: ../../../system/arm/aspeed.rst:13
msgid "AST2400 SoC based machines :"
msgstr ""

#: ../../../system/arm/aspeed.rst:15
msgid "``palmetto-bmc``         OpenPOWER Palmetto POWER8 BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:16
msgid "``quanta-q71l-bmc``      OpenBMC Quanta BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:17
msgid "``supermicrox11-bmc``    Supermicro X11 BMC (ARM926EJ-S)"
msgstr ""

#: ../../../system/arm/aspeed.rst:18
msgid "``supermicrox11spi-bmc``    Supermicro X11 SPI BMC (ARM1176)"
msgstr ""

#: ../../../system/arm/aspeed.rst:20
msgid "AST2500 SoC based machines :"
msgstr ""

#: ../../../system/arm/aspeed.rst:22
msgid "``ast2500-evb``          Aspeed AST2500 Evaluation board"
msgstr ""

#: ../../../system/arm/aspeed.rst:23
msgid "``romulus-bmc``          OpenPOWER Romulus POWER9 BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:24
msgid "``witherspoon-bmc``      OpenPOWER Witherspoon POWER9 BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:25
msgid "``sonorapass-bmc``       OCP SonoraPass BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:26
msgid "``fp5280g2-bmc``         Inspur FP5280G2 BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:27
msgid "``g220a-bmc``            Bytedance G220A BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:28
msgid "``yosemitev2-bmc``       Facebook YosemiteV2 BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:29
msgid "``tiogapass-bmc``        Facebook Tiogapass BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:31
msgid "AST2600 SoC based machines :"
msgstr ""

#: ../../../system/arm/aspeed.rst:33
msgid "``ast2600-evb``          Aspeed AST2600 Evaluation board (Cortex-A7)"
msgstr ""

#: ../../../system/arm/aspeed.rst:34
msgid "``rainier-bmc``          IBM Rainier POWER10 BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:35
msgid "``fuji-bmc``             Facebook Fuji BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:36
msgid "``bletchley-bmc``        Facebook Bletchley BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:37
msgid "``fby35-bmc``            Facebook fby35 BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:38
msgid "``gb200nvl-bmc``         Nvidia GB200nvl BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:39
msgid "``qcom-dc-scm-v1-bmc``   Qualcomm DC-SCM V1 BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:40
msgid "``qcom-firework-bmc``    Qualcomm Firework BMC"
msgstr ""

#: ../../../system/arm/aspeed.rst:43 ../../../system/arm/aspeed.rst:262
#: ../../../system/arm/aspeed.rst:434
msgid "Supported devices"
msgstr "支援的裝置"

#: ../../../system/arm/aspeed.rst:45
msgid "SMP (for the AST2600 Cortex-A7)"
msgstr ""

#: ../../../system/arm/aspeed.rst:46 ../../../system/arm/aspeed.rst:437
msgid "Interrupt Controller (VIC)"
msgstr ""

#: ../../../system/arm/aspeed.rst:47 ../../../system/arm/aspeed.rst:264
#: ../../../system/arm/aspeed.rst:438
msgid "Timer Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:48 ../../../system/arm/aspeed.rst:265
msgid "RTC Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:49
msgid "I2C Controller, including the new register interface of the AST2600"
msgstr ""

#: ../../../system/arm/aspeed.rst:50 ../../../system/arm/aspeed.rst:267
#: ../../../system/arm/aspeed.rst:440
msgid "System Control Unit (SCU)"
msgstr ""

#: ../../../system/arm/aspeed.rst:51 ../../../system/arm/aspeed.rst:268
#: ../../../system/arm/aspeed.rst:441
msgid "SRAM mapping"
msgstr ""

#: ../../../system/arm/aspeed.rst:52 ../../../system/arm/aspeed.rst:269
msgid "X-DMA Controller (basic interface)"
msgstr ""

#: ../../../system/arm/aspeed.rst:53 ../../../system/arm/aspeed.rst:270
#: ../../../system/arm/aspeed.rst:442
msgid "Static Memory Controller (SMC or FMC) - Only SPI Flash support"
msgstr ""

#: ../../../system/arm/aspeed.rst:54 ../../../system/arm/aspeed.rst:271
#: ../../../system/arm/aspeed.rst:443
msgid "SPI Memory Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:55 ../../../system/arm/aspeed.rst:272
#: ../../../system/arm/aspeed.rst:444
msgid "USB 2.0 Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:56 ../../../system/arm/aspeed.rst:273
msgid "SD/MMC storage controllers"
msgstr ""

#: ../../../system/arm/aspeed.rst:57 ../../../system/arm/aspeed.rst:274
msgid "SDRAM controller (dummy interface for basic settings and training)"
msgstr ""

#: ../../../system/arm/aspeed.rst:58 ../../../system/arm/aspeed.rst:275
#: ../../../system/arm/aspeed.rst:445
msgid "Watchdog Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:59 ../../../system/arm/aspeed.rst:276
#: ../../../system/arm/aspeed.rst:446
msgid "GPIO Controller (Master only)"
msgstr ""

#: ../../../system/arm/aspeed.rst:60 ../../../system/arm/aspeed.rst:277
#: ../../../system/arm/aspeed.rst:447
msgid "UART"
msgstr ""

#: ../../../system/arm/aspeed.rst:61 ../../../system/arm/aspeed.rst:278
msgid "Ethernet controllers"
msgstr ""

#: ../../../system/arm/aspeed.rst:62 ../../../system/arm/aspeed.rst:279
msgid "Front LEDs (PCA9552 on I2C bus)"
msgstr ""

#: ../../../system/arm/aspeed.rst:63 ../../../system/arm/aspeed.rst:280
#: ../../../system/arm/aspeed.rst:448
msgid "LPC Peripheral Controller (a subset of subdevices are supported)"
msgstr ""

#: ../../../system/arm/aspeed.rst:64 ../../../system/arm/aspeed.rst:449
msgid "Hash/Crypto Engine (HACE) - Hash support only. TODO: HMAC and RSA"
msgstr ""

#: ../../../system/arm/aspeed.rst:65 ../../../system/arm/aspeed.rst:282
#: ../../../system/arm/aspeed.rst:450
msgid "ADC"
msgstr ""

#: ../../../system/arm/aspeed.rst:66
msgid "Secure Boot Controller (AST2600)"
msgstr ""

#: ../../../system/arm/aspeed.rst:67 ../../../system/arm/aspeed.rst:283
msgid "eMMC Boot Controller (dummy)"
msgstr ""

#: ../../../system/arm/aspeed.rst:68 ../../../system/arm/aspeed.rst:284
#: ../../../system/arm/aspeed.rst:452
msgid "PECI Controller (minimal)"
msgstr ""

#: ../../../system/arm/aspeed.rst:69 ../../../system/arm/aspeed.rst:285
#: ../../../system/arm/aspeed.rst:463
msgid "I3C Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:70 ../../../system/arm/aspeed.rst:286
msgid "Internal Bridge Controller (SLI dummy)"
msgstr ""

#: ../../../system/arm/aspeed.rst:74 ../../../system/arm/aspeed.rst:289
#: ../../../system/arm/aspeed.rst:456
msgid "Missing devices"
msgstr ""

#: ../../../system/arm/aspeed.rst:76
msgid "Coprocessor support"
msgstr ""

#: ../../../system/arm/aspeed.rst:77 ../../../system/arm/aspeed.rst:290
#: ../../../system/arm/aspeed.rst:458
msgid "PWM and Fan Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:78 ../../../system/arm/aspeed.rst:291
#: ../../../system/arm/aspeed.rst:459
msgid "Slave GPIO Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:79 ../../../system/arm/aspeed.rst:292
msgid "Super I/O Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:80 ../../../system/arm/aspeed.rst:293
msgid "PCI-Express 1 Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:81 ../../../system/arm/aspeed.rst:294
msgid "Graphic Display Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:82 ../../../system/arm/aspeed.rst:295
msgid "MCTP Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:83 ../../../system/arm/aspeed.rst:296
#: ../../../system/arm/aspeed.rst:460
msgid "Mailbox Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:84 ../../../system/arm/aspeed.rst:297
#: ../../../system/arm/aspeed.rst:461
msgid "Virtual UART"
msgstr ""

#: ../../../system/arm/aspeed.rst:85 ../../../system/arm/aspeed.rst:298
#: ../../../system/arm/aspeed.rst:462
msgid "eSPI Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:88 ../../../system/arm/aspeed.rst:301
#: ../../../system/arm/aspeed.rst:466
msgid "Boot options"
msgstr "開機選項"

#: ../../../system/arm/aspeed.rst:90
msgid ""
"The Aspeed machines can be started using the ``-kernel`` and ``-dtb`` "
"options to load a Linux kernel or from a firmware. Images can be downloaded "
"from the OpenBMC jenkins :"
msgstr ""

#: ../../../system/arm/aspeed.rst:94
msgid "https://jenkins.openbmc.org/job/ci-openbmc/lastSuccessfulBuild/"
msgstr ""

#: ../../../system/arm/aspeed.rst:96
msgid "or directly from the OpenBMC GitHub release repository :"
msgstr ""

#: ../../../system/arm/aspeed.rst:98
msgid "https://github.com/openbmc/openbmc/releases"
msgstr ""

#: ../../../system/arm/aspeed.rst:100
msgid "or directly from the ASPEED Forked OpenBMC GitHub release repository :"
msgstr ""

#: ../../../system/arm/aspeed.rst:102 ../../../system/arm/aspeed.rst:305
msgid "https://github.com/AspeedTech-BMC/openbmc/releases"
msgstr ""

#: ../../../system/arm/aspeed.rst:105
msgid "Booting from a kernel image"
msgstr ""

#: ../../../system/arm/aspeed.rst:107
msgid "To boot a kernel directly from a Linux build tree:"
msgstr ""

#: ../../../system/arm/aspeed.rst:109
msgid ""
"$ qemu-system-arm -M ast2600-evb -nographic \\\n"
"      -kernel arch/arm/boot/zImage \\\n"
"      -dtb arch/arm/boot/dts/aspeed-ast2600-evb.dtb \\\n"
"      -initrd rootfs.cpio"
msgstr ""

#: ../../../system/arm/aspeed.rst:117
msgid "Booting from a flash image"
msgstr ""

#: ../../../system/arm/aspeed.rst:119
msgid "The machine options specific to Aspeed to boot from a flash image are :"
msgstr ""

#: ../../../system/arm/aspeed.rst:121
msgid ""
"``execute-in-place`` which emulates the boot from the CE0 flash device by "
"using the FMC controller to load the instructions, and not simply from RAM. "
"This takes a little longer."
msgstr ""

#: ../../../system/arm/aspeed.rst:125
msgid ""
"``fmc-model`` to change the default FMC Flash model. FW needs support for "
"the chip model to boot."
msgstr ""

#: ../../../system/arm/aspeed.rst:128
msgid "``spi-model`` to change the default SPI Flash model."
msgstr ""

#: ../../../system/arm/aspeed.rst:130
msgid "To boot the machine from the flash image, use an MTD drive :"
msgstr ""

#: ../../../system/arm/aspeed.rst:132
msgid ""
"$ qemu-system-arm -M romulus-bmc -nic user \\\n"
"      -drive file=obmc-phosphor-image-romulus.static.mtd,format=raw,if=mtd -"
"nographic"
msgstr ""

#: ../../../system/arm/aspeed.rst:137
msgid ""
"To use other flash models, for instance a different FMC chip and a bigger "
"(64M) SPI for the ``ast2500-evb`` machine, run :"
msgstr ""

#: ../../../system/arm/aspeed.rst:140
msgid "-M ast2500-evb,fmc-model=mx25l25635e,spi-model=mx66u51235f"
msgstr ""

#: ../../../system/arm/aspeed.rst:144
msgid ""
"When more flexibility is needed to define the flash devices, to use "
"different flash models or define all flash devices (up to 8), the ``-"
"nodefaults`` QEMU option can be used to avoid creating the default flash "
"devices."
msgstr ""

#: ../../../system/arm/aspeed.rst:149
msgid ""
"Flash devices should then be created from the command line and attached to a "
"block device :"
msgstr ""

#: ../../../system/arm/aspeed.rst:152
msgid ""
"$ qemu-system-arm -M ast2600-evb \\\n"
"      -blockdev node-name=fmc0,driver=file,filename=/path/to/fmc0.img \\\n"
"      -device mx66u51235f,bus=ssi.0,cs=0x0,drive=fmc0 \\\n"
"      -blockdev node-name=fmc1,driver=file,filename=/path/to/fmc1.img \\\n"
"      -device mx66u51235f,bus=ssi.0,cs=0x1,drive=fmc1 \\\n"
"      -blockdev node-name=spi1,driver=file,filename=/path/to/spi1.img \\\n"
"      -device mx66u51235f,cs=0x0,bus=ssi.1,drive=spi1 \\\n"
"      -nographic -nodefaults"
msgstr ""

#: ../../../system/arm/aspeed.rst:163
msgid ""
"In that case, the machine boots fetching instructions from the FMC0 device. "
"It is slower to start but closer to what HW does. Using the machine option "
"``execute-in-place`` has a similar effect."
msgstr ""

#: ../../../system/arm/aspeed.rst:168
msgid "Booting from an eMMC image"
msgstr ""

#: ../../../system/arm/aspeed.rst:170
msgid ""
"The machine options specific to Aspeed machines to boot from an eMMC image "
"are :"
msgstr ""

#: ../../../system/arm/aspeed.rst:173
msgid "``boot-emmc`` to set or unset boot from eMMC (AST2600)."
msgstr ""

#: ../../../system/arm/aspeed.rst:175
msgid ""
"Only the ``ast2600-evb`` and ``rainier-emmc`` machines have support to boot "
"from an eMMC device. In this case, the machine assumes that the eMMC image "
"includes special boot partitions. Such an image can be built this way :"
msgstr ""

#: ../../../system/arm/aspeed.rst:180
msgid ""
"$ dd if=/dev/zero of=mmc-bootarea.img count=2 bs=1M\n"
"$ dd if=u-boot-spl.bin of=mmc-bootarea.img conv=notrunc\n"
"$ dd if=u-boot.bin of=mmc-bootarea.img conv=notrunc count=64 bs=1K\n"
"$ cat mmc-bootarea.img obmc-phosphor-image.wic > mmc.img\n"
"$ truncate --size 16GB mmc.img"
msgstr ""

#: ../../../system/arm/aspeed.rst:188
msgid "Boot the machine ``rainier-emmc`` with :"
msgstr ""

#: ../../../system/arm/aspeed.rst:190
msgid ""
"$ qemu-system-arm -M rainier-bmc \\\n"
"      -drive file=mmc.img,format=raw,if=sd,index=2 \\\n"
"      -nographic"
msgstr ""

#: ../../../system/arm/aspeed.rst:196
msgid ""
"The ``boot-emmc`` option can be set or unset, to change the default boot "
"mode of machine: SPI or eMMC. This can be useful to boot the ``ast2600-evb`` "
"machine from an eMMC device (default being SPI) or to boot the ``rainier-"
"bmc`` machine from a flash device (default being eMMC)."
msgstr ""

#: ../../../system/arm/aspeed.rst:202
msgid ""
"As an example, here is how to to boot the ``rainier-bmc`` machine from the "
"flash device with ``boot-emmc=false`` and let the machine use an eMMC image :"
msgstr ""

#: ../../../system/arm/aspeed.rst:206
msgid ""
"$ qemu-system-arm -M rainier-bmc,boot-emmc=false \\\n"
"     -drive file=flash.img,format=raw,if=mtd \\\n"
"     -drive file=mmc.img,format=raw,if=sd,index=2 \\\n"
"     -nographic"
msgstr ""

#: ../../../system/arm/aspeed.rst:213
msgid ""
"It should be noted that in this case the eMMC device must not have boot "
"partitions, otherwise the contents will not be accessible to the machine.  "
"This limitation is due to the use of the ``-drive`` interface."
msgstr ""

#: ../../../system/arm/aspeed.rst:218
msgid ""
"Ideally, one should be able to define the eMMC device and the associated "
"backend directly on the command line, such as :"
msgstr ""

#: ../../../system/arm/aspeed.rst:221
msgid ""
"-blockdev node-name=emmc0,driver=file,filename=mmc.img \\\n"
"-device emmc,bus=sdhci-bus.2,drive=emmc0,boot-partition-size=1048576,boot-"
"config=8"
msgstr ""

#: ../../../system/arm/aspeed.rst:226
msgid ""
"This is not yet supported (as of QEMU-10.0). Work is needed to refactor the "
"sdhci bus model."
msgstr ""

#: ../../../system/arm/aspeed.rst:230
msgid "Other booting options"
msgstr ""

#: ../../../system/arm/aspeed.rst:232
msgid "Other machine options specific to Aspeed machines are :"
msgstr ""

#: ../../../system/arm/aspeed.rst:234
msgid ""
"``bmc-console`` to change the default console device. Most of the machines "
"use the ``UART5`` device for a boot console, which is mapped on ``/dev/"
"ttyS4`` under Linux, but it is not always the case."
msgstr ""

#: ../../../system/arm/aspeed.rst:239
msgid ""
"To change the boot console and use device ``UART3`` (``/dev/ttyS2`` under "
"Linux), use :"
msgstr ""

#: ../../../system/arm/aspeed.rst:242
msgid "-M ast2500-evb,bmc-console=uart3"
msgstr ""

#: ../../../system/arm/aspeed.rst:247
msgid "Aspeed 2700 family boards (``ast2700-evb``)"
msgstr ""

#: ../../../system/arm/aspeed.rst:249
msgid ""
"The QEMU Aspeed machines model BMCs of Aspeed evaluation boards. They are "
"based on different releases of the Aspeed SoC : the AST2700 with quad cores "
"ARM Cortex-A35 64 bits CPUs (1.6GHz)."
msgstr ""

#: ../../../system/arm/aspeed.rst:256
msgid "AST2700 SoC based machines :"
msgstr ""

#: ../../../system/arm/aspeed.rst:258
msgid "``ast2700-evb``          Aspeed AST2700 Evaluation board (Cortex-A35)"
msgstr ""

#: ../../../system/arm/aspeed.rst:259
msgid ""
"``ast2700fc``            Aspeed AST2700 Evaluation board (Cortex-A35 + "
"Cortex-M4)"
msgstr ""

#: ../../../system/arm/aspeed.rst:263
msgid "Interrupt Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:266 ../../../system/arm/aspeed.rst:439
msgid "I2C Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:281
msgid "Hash/Crypto Engine (HACE) - Hash support only. TODO: Crypto"
msgstr ""

#: ../../../system/arm/aspeed.rst:303
msgid ""
"Images can be downloaded from the ASPEED Forked OpenBMC GitHub release "
"repository :"
msgstr ""

#: ../../../system/arm/aspeed.rst:308
msgid "Booting the ast2700-evb machine"
msgstr ""

#: ../../../system/arm/aspeed.rst:310
msgid "Boot the AST2700 machine from the flash image."
msgstr ""

#: ../../../system/arm/aspeed.rst:312
msgid ""
"There are two supported methods for booting the AST2700 machine with a flash "
"image:"
msgstr ""

#: ../../../system/arm/aspeed.rst:314
msgid "Manual boot using ``-device loader``:"
msgstr ""

#: ../../../system/arm/aspeed.rst:316
msgid ""
"It causes all 4 CPU cores to start execution from address ``0x430000000``, "
"which corresponds to the BL31 image load address."
msgstr ""

#: ../../../system/arm/aspeed.rst:319
msgid ""
"IMGDIR=ast2700-default\n"
"UBOOT_SIZE=$(stat --format=%s -L ${IMGDIR}/u-boot-nodtb.bin)\n"
"\n"
"$ qemu-system-aarch64 -M ast2700-evb \\\n"
"     -device loader,force-raw=on,addr=0x400000000,file=${IMGDIR}/u-boot-"
"nodtb.bin \\\n"
"     -device loader,force-raw=on,addr=$((0x400000000 + ${UBOOT_SIZE})),"
"file=${IMGDIR}/u-boot.dtb \\\n"
"     -device loader,force-raw=on,addr=0x430000000,file=${IMGDIR}/bl31.bin "
"\\\n"
"     -device loader,force-raw=on,addr=0x430080000,file=${IMGDIR}/optee/tee-"
"raw.bin \\\n"
"     -device loader,cpu-num=0,addr=0x430000000 \\\n"
"     -device loader,cpu-num=1,addr=0x430000000 \\\n"
"     -device loader,cpu-num=2,addr=0x430000000 \\\n"
"     -device loader,cpu-num=3,addr=0x430000000 \\\n"
"     -smp 4 \\\n"
"     -drive file=${IMGDIR}/image-bmc,format=raw,if=mtd \\\n"
"     -nographic"
msgstr ""

#: ../../../system/arm/aspeed.rst:337
msgid "Boot using a virtual boot ROM (``-bios``):"
msgstr ""

#: ../../../system/arm/aspeed.rst:339
msgid ""
"If users do not specify the ``-bios option``, QEMU will attempt to load the "
"default vbootrom image ``ast27x0_bootrom.bin`` from either the current "
"working directory or the ``pc-bios`` directory within the QEMU source tree."
msgstr ""

#: ../../../system/arm/aspeed.rst:343
msgid ""
"$ qemu-system-aarch64 -M ast2700-evb \\\n"
"    -drive file=image-bmc,format=raw,if=mtd \\\n"
"    -nographic"
msgstr ""

#: ../../../system/arm/aspeed.rst:349
msgid ""
"The ``-bios`` option allows users to specify a custom path for the vbootrom "
"image to be loaded during boot. This will load the vbootrom image from the "
"specified path in the ${HOME} directory."
msgstr ""

#: ../../../system/arm/aspeed.rst:353
msgid "-bios ${HOME}/ast27x0_bootrom.bin"
msgstr ""

#: ../../../system/arm/aspeed.rst:358
msgid "Booting the ast2700fc machine"
msgstr ""

#: ../../../system/arm/aspeed.rst:360
msgid ""
"AST2700 features four Cortex-A35 primary processors and two Cortex-M4 "
"coprocessors. **ast2700-evb** machine focuses on emulating the four Cortex-"
"A35 primary processors, **ast2700fc** machine extends **ast2700-evb** by "
"adding support for the two Cortex-M4 coprocessors."
msgstr ""

#: ../../../system/arm/aspeed.rst:364
msgid "Steps to boot the AST2700fc machine:"
msgstr ""

#: ../../../system/arm/aspeed.rst:366
msgid ""
"Ensure you have the following AST2700A1 binaries available in a directory"
msgstr ""

#: ../../../system/arm/aspeed.rst:368
msgid "u-boot-nodtb.bin"
msgstr ""

#: ../../../system/arm/aspeed.rst:369
msgid "u-boot.dtb"
msgstr ""

#: ../../../system/arm/aspeed.rst:370
msgid "bl31.bin"
msgstr ""

#: ../../../system/arm/aspeed.rst:371
msgid "optee/tee-raw.bin"
msgstr ""

#: ../../../system/arm/aspeed.rst:372
msgid "image-bmc"
msgstr ""

#: ../../../system/arm/aspeed.rst:373
msgid "zephyr-aspeed-ssp.elf (for SSP firmware, CPU 5)"
msgstr ""

#: ../../../system/arm/aspeed.rst:374
msgid "zephyr-aspeed-tsp.elf (for TSP firmware, CPU 6)"
msgstr ""

#: ../../../system/arm/aspeed.rst:376
msgid "Execute the following command to start ``ast2700fc`` machine:"
msgstr ""

#: ../../../system/arm/aspeed.rst:378
msgid ""
"IMGDIR=ast2700-default\n"
"UBOOT_SIZE=$(stat --format=%s -L ${IMGDIR}/u-boot-nodtb.bin)\n"
"\n"
"$ qemu-system-aarch64 -M ast2700fc \\\n"
"     -device loader,force-raw=on,addr=0x400000000,file=${IMGDIR}/u-boot-"
"nodtb.bin \\\n"
"     -device loader,force-raw=on,addr=$((0x400000000 + ${UBOOT_SIZE})),"
"file=${IMGDIR}/u-boot.dtb \\\n"
"     -device loader,force-raw=on,addr=0x430000000,file=${IMGDIR}/bl31.bin "
"\\\n"
"     -device loader,force-raw=on,addr=0x430080000,file=${IMGDIR}/optee/tee-"
"raw.bin \\\n"
"     -device loader,cpu-num=0,addr=0x430000000 \\\n"
"     -device loader,cpu-num=1,addr=0x430000000 \\\n"
"     -device loader,cpu-num=2,addr=0x430000000 \\\n"
"     -device loader,cpu-num=3,addr=0x430000000 \\\n"
"     -drive file=${IMGDIR}/image-bmc,if=mtd,format=raw \\\n"
"     -device loader,file=${IMGDIR}/zephyr-aspeed-ssp.elf,cpu-num=4 \\\n"
"     -device loader,file=${IMGDIR}/zephyr-aspeed-tsp.elf,cpu-num=5 \\\n"
"     -serial pty -serial pty -serial pty \\\n"
"     -snapshot \\\n"
"     -S -nographic"
msgstr ""

#: ../../../system/arm/aspeed.rst:399
msgid ""
"After launching QEMU, serial devices will be automatically redirected. "
"Example output:"
msgstr ""

#: ../../../system/arm/aspeed.rst:402
msgid ""
"char device redirected to /dev/pts/55 (label serial0)\n"
"char device redirected to /dev/pts/56 (label serial1)\n"
"char device redirected to /dev/pts/57 (label serial2)"
msgstr ""

#: ../../../system/arm/aspeed.rst:408
msgid "serial0: Console for the four Cortex-A35 primary processors."
msgstr ""

#: ../../../system/arm/aspeed.rst:409
msgid "serial1 and serial2: Consoles for the two Cortex-M4 coprocessors."
msgstr ""

#: ../../../system/arm/aspeed.rst:411
msgid "Use ``tio`` or another terminal emulator to connect to the consoles:"
msgstr ""

#: ../../../system/arm/aspeed.rst:413
msgid ""
"$ tio /dev/pts/55\n"
"$ tio /dev/pts/56\n"
"$ tio /dev/pts/57"
msgstr ""

#: ../../../system/arm/aspeed.rst:421
msgid "Aspeed minibmc family boards (``ast1030-evb``)"
msgstr ""

#: ../../../system/arm/aspeed.rst:423
msgid ""
"The QEMU Aspeed machines model mini BMCs of various Aspeed evaluation "
"boards. They are based on different releases of the Aspeed SoC : the AST1030 "
"integrating an ARM Cortex M4F CPU (200MHz)."
msgstr ""

#: ../../../system/arm/aspeed.rst:427
msgid "The SoC comes with SRAM, SPI, I2C, etc."
msgstr ""

#: ../../../system/arm/aspeed.rst:429
msgid "AST1030 SoC based machines :"
msgstr ""

#: ../../../system/arm/aspeed.rst:431
msgid "``ast1030-evb``          Aspeed AST1030 Evaluation board (Cortex-M4F)"
msgstr ""

#: ../../../system/arm/aspeed.rst:436
msgid "SMP (for the AST1030 Cortex-M4F)"
msgstr ""

#: ../../../system/arm/aspeed.rst:451
msgid "Secure Boot Controller"
msgstr ""

#: ../../../system/arm/aspeed.rst:468
msgid ""
"The Aspeed machines can be started using the ``-kernel`` to load a Zephyr OS "
"or from a firmware. Images can be downloaded from the ASPEED GitHub release "
"repository :"
msgstr ""

#: ../../../system/arm/aspeed.rst:472
msgid "https://github.com/AspeedTech-BMC/zephyr/releases"
msgstr ""

#: ../../../system/arm/aspeed.rst:474
msgid "To boot a kernel directly from a Zephyr build tree:"
msgstr ""

#: ../../../system/arm/aspeed.rst:476
msgid ""
"$ qemu-system-arm -M ast1030-evb -nographic \\\n"
"      -kernel zephyr.elf"
msgstr ""
