# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 05:37+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../system/arm/max78000.rst:4
msgid "Analog Devices max78000 board (``max78000fthr``)"
msgstr ""

#: ../../../system/arm/max78000.rst:6
msgid ""
"The max78000 is a Cortex-M4 based SOC with a RISC-V coprocessor. The RISC-V "
"coprocessor is not supported."
msgstr ""

#: ../../../system/arm/max78000.rst:9
msgid "Supported devices"
msgstr ""

#: ../../../system/arm/max78000.rst:11
msgid "Instruction Cache Controller"
msgstr ""

#: ../../../system/arm/max78000.rst:12
msgid "UART"
msgstr ""

#: ../../../system/arm/max78000.rst:13
msgid "Global Control Register"
msgstr ""

#: ../../../system/arm/max78000.rst:14
msgid "True Random Number Generator"
msgstr ""

#: ../../../system/arm/max78000.rst:15
msgid "AES"
msgstr ""

#: ../../../system/arm/max78000.rst:18
msgid "Notable unsupported devices"
msgstr ""

#: ../../../system/arm/max78000.rst:20
msgid "I2C"
msgstr ""

#: ../../../system/arm/max78000.rst:21
msgid "CNN"
msgstr ""

#: ../../../system/arm/max78000.rst:22
msgid "CRC"
msgstr ""

#: ../../../system/arm/max78000.rst:23
msgid "SPI"
msgstr ""

#: ../../../system/arm/max78000.rst:26
msgid "Boot options"
msgstr ""

#: ../../../system/arm/max78000.rst:28
msgid ""
"The max78000 can be started using the ``-kernel`` option to load a firmware "
"at address 0 as the ROM. As the ROM normally jumps to software loaded from "
"the internal flash at address 0x10000000, loading your program there is "
"generally advisable. If you don't have a copy of the ROM, the interrupt "
"vector table from user firmware will do. Example:"
msgstr ""

#: ../../../system/arm/max78000.rst:35
msgid ""
"$ qemu-system-arm -machine max78000fthr -kernel max78000.bin -device loader,"
"file=max78000.bin,addr=0x10000000"
msgstr ""
