# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 05:37+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../system/s390x/cpu-topology.rst:4
msgid "CPU topology on s390x"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:6
msgid ""
"Since QEMU 8.2, CPU topology on s390x provides up to 3 levels of topology "
"containers: drawers, books and sockets. They define a tree-shaped hierarchy."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:10
msgid ""
"The socket container has one or more CPU entries. Each of these CPU entries "
"consists of a bitmap and three CPU attributes:"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:13
msgid "CPU type"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:14
msgid "entitlement"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:15
msgid "dedication"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:17
msgid ""
"Each bit set in the bitmap correspond to a core-id of a vCPU with matching "
"attributes."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:20
msgid ""
"This documentation provides general information on S390 CPU topology, how to "
"enable it and explains the new CPU attributes. For information on how to "
"modify the S390 CPU topology and how to monitor polarization changes, see "
"``docs/devel/s390-cpu-topology.rst``."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:26
msgid "Prerequisites"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:28
msgid ""
"To use the CPU topology, you currently need to choose the KVM accelerator. "
"See :ref:`Accelerators` for more details about accelerators and how to "
"select them."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:31
msgid ""
"The s390x host needs to use a Linux kernel v6.0 or newer (which provides the "
"so-called ``KVM_CAP_S390_CPU_TOPOLOGY`` capability that allows QEMU to "
"signal the CPU topology facility via the so-called STFLE bit 11 to the VM)."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:36
msgid "Enabling CPU topology"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:38
msgid ""
"Currently, CPU topology is enabled by default only in the \"host\" CPU model."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:40
msgid ""
"Enabling CPU topology in another CPU model is done by setting the CPU flag "
"``ctop`` to ``on`` as in:"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:43
msgid "-cpu gen16b,ctop=on"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:47
msgid ""
"Having the topology disabled by default allows migration between old and new "
"QEMU without adding new flags."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:51
msgid "Default topology usage"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:53
msgid ""
"The CPU topology can be specified on the QEMU command line with the ``-smp`` "
"or the ``-device`` QEMU command arguments."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:56
msgid ""
"Note also that since 7.2 threads are no longer supported in the topology and "
"the ``-smp`` command line argument accepts only ``threads=1``."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:59
msgid ""
"If none of the containers attributes (drawers, books, sockets) are specified "
"for the ``-smp`` flag, the number of these containers is 1."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:63
msgid "Thus the following two options will result in the same topology:"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:65
msgid "-smp cpus=5,drawer=1,books=1,sockets=8,cores=4,maxcpus=32"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:69
msgid "and"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:71
msgid "-smp cpus=5,sockets=8,cores=4,maxcpus=32"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:75
msgid ""
"When a CPU is defined by the ``-smp`` command argument, its position inside "
"the topology is calculated by adding the CPUs to the topology based on the "
"core-id starting with core-0 at position 0 of socket-0, book-0, drawer-0 and "
"filling all CPUs of socket-0 before filling socket-1 of book-0 and so on up "
"to the last socket of the last book of the last drawer."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:82
msgid ""
"When a CPU is defined by the ``-device`` command argument, the tree topology "
"attributes must all be defined or all not defined."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:85
msgid "-device gen16b-s390x-cpu,drawer-id=1,book-id=1,socket-id=2,core-id=1"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:89
msgid "or"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:91
msgid "-device gen16b-s390x-cpu,core-id=1,dedicated=true"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:95
msgid ""
"If none of the tree attributes (drawer, book, sockets), are specified for "
"the ``-device`` argument, like for all CPUs defined with the ``-smp`` "
"command argument the topology tree attributes will be set by simply adding "
"the CPUs to the topology based on the core-id."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:100
msgid ""
"QEMU will not try to resolve collisions and will report an error if the CPU "
"topology defined explicitly or implicitly on a ``-device`` argument collides "
"with the definition of a CPU implicitly defined on the ``-smp`` argument."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:105
msgid ""
"When the topology modifier attributes are not defined for the ``-device`` "
"command argument they takes following default values:"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:108
msgid "dedicated: ``false``"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:109
msgid "entitlement: ``medium``"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:113
msgid "Hot plug"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:115
msgid "New CPUs can be plugged using the device_add hmp command as in:"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:117
#: ../../../system/s390x/cpu-topology.rst:144
msgid "(qemu) device_add gen16b-s390x-cpu,core-id=9"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:121
msgid ""
"The placement of the CPU is derived from the core-id as described above."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:123
msgid "The topology can of course also be fully defined:"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:125
msgid ""
"(qemu) device_add gen16b-s390x-cpu,drawer-id=1,book-id=1,socket-id=2,core-"
"id=1"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:131
msgid "Examples"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:133
msgid "In the following machine we define 8 sockets with 4 cores each."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:135
msgid ""
"$ qemu-system-s390x -accel kvm -m 2G \\\n"
"  -cpu gen16b,ctop=on \\\n"
"  -smp cpus=5,sockets=8,cores=4,maxcpus=32 \\\n"
"  -device host-s390x-cpu,core-id=14 \\"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:142
msgid "A new CPUs can be plugged using the device_add hmp command as before:"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:148
msgid ""
"The core-id defines the placement of the core in the topology by starting "
"with core 0 in socket 0 up to maxcpus."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:151
msgid "In the example above:"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:153
msgid ""
"There are 5 CPUs provided to the guest with the ``-smp`` command line They "
"will take the core-ids 0,1,2,3,4 As we have 4 cores in a socket, we have 4 "
"CPUs provided to the guest in socket 0, with core-ids 0,1,2,3. The last CPU, "
"with core-id 4, will be on socket 1."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:159
msgid ""
"the core with ID 14 provided by the ``-device`` command line will be placed "
"in socket 3, with core-id 14"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:162
msgid ""
"the core with ID 9 provided by the ``device_add`` qmp command will be placed "
"in socket 2, with core-id 9"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:167
msgid "Polarization, entitlement and dedication"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:170
msgid "Polarization"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:172
msgid ""
"The polarization affects how the CPUs of a shared host are utilized/"
"distributed among guests. The guest determines the polarization by using the "
"PTF instruction."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:176
msgid ""
"Polarization defines two models of CPU provisioning: horizontal and vertical."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:179
msgid ""
"The horizontal polarization is the default model on boot and after subsystem "
"reset. When horizontal polarization is in effect all vCPUs should have about "
"equal resource provisioning."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:183
msgid ""
"In the vertical polarization model vCPUs are unequal, but overall more "
"resources might be available. The guest can make use of the vCPU entitlement "
"information provided by the host to optimize kernel thread scheduling."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:188
msgid ""
"A subsystem reset puts all vCPU of the configuration into the horizontal "
"polarization."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:192
msgid "Entitlement"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:194
msgid ""
"The vertical polarization specifies that the guest's vCPU can get different "
"real CPU provisioning:"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:197
msgid ""
"a vCPU with vertical high entitlement specifies that this vCPU gets 100% of "
"the real CPU provisioning."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:200
msgid ""
"a vCPU with vertical medium entitlement specifies that this vCPU shares the "
"real CPU with other vCPUs."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:203
msgid ""
"a vCPU with vertical low entitlement specifies that this vCPU only gets real "
"CPU provisioning when no other vCPUs needs it."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:206
msgid ""
"In the case a vCPU with vertical high entitlement does not use the real CPU, "
"the unused \"slack\" can be dispatched to other vCPU with medium or low "
"entitlement."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:210
msgid ""
"A vCPU can be \"dedicated\" in which case the vCPU is fully dedicated to a "
"single real CPU."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:213
msgid ""
"The dedicated bit is an indication of affinity of a vCPU for a real CPU "
"while the entitlement indicates the sharing or exclusivity of use."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:217
msgid "Defining the topology on the command line"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:219
msgid ""
"The topology can entirely be defined using -device cpu statements, with the "
"exception of CPU 0 which must be defined with the -smp argument."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:223
msgid ""
"For example, here we set the position of the cores 1,2,3 to drawer 1, book "
"1, socket 2 and cores 0,9 and 14 to drawer 0, book 0, socket 0 without "
"defining entitlement or dedication. Core 4 will be set on its default "
"position on socket 1 (since we have 4 core per socket) and we define it as "
"dedicated and with vertical high entitlement."
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:230
msgid ""
"$ qemu-system-s390x -accel kvm -m 2G \\\n"
"  -cpu gen16b,ctop=on \\\n"
"  -smp cpus=1,sockets=8,cores=4,maxcpus=32 \\\n"
"  \\\n"
"  -device gen16b-s390x-cpu,drawer-id=1,book-id=1,socket-id=2,core-id=1 \\\n"
"  -device gen16b-s390x-cpu,drawer-id=1,book-id=1,socket-id=2,core-id=2 \\\n"
"  -device gen16b-s390x-cpu,drawer-id=1,book-id=1,socket-id=2,core-id=3 \\\n"
"  \\\n"
"  -device gen16b-s390x-cpu,drawer-id=0,book-id=0,socket-id=0,core-id=9 \\\n"
"  -device gen16b-s390x-cpu,drawer-id=0,book-id=0,socket-id=0,core-id=14 \\\n"
"  \\\n"
"  -device gen16b-s390x-cpu,core-id=4,dedicated=on,entitlement=high"
msgstr ""

#: ../../../system/s390x/cpu-topology.rst:245
msgid ""
"The entitlement defined for the CPU 4 will only be used after the guest "
"successfully enables vertical polarization by using the PTF instruction."
msgstr ""
