# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 10:00+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../devel/bitops.rst:3
msgid "Bitwise operations"
msgstr ""

#: ../../../devel/bitops.rst:5
msgid ""
"The header ``qemu/bitops.h`` provides utility functions for performing "
"bitwise operations."
msgstr ""

#: ../../../../include/qemu/bitops.h:32
msgid "Set a bit in memory"
msgstr ""

#: ../../../../include/qemu/bitops.h:34 ../../../../include/qemu/bitops.h:47
#: ../../../../include/qemu/bitops.h:60 ../../../../include/qemu/bitops.h:73
#: ../../../../include/qemu/bitops.h:86 ../../../../include/qemu/bitops.h:101
#: ../../../../include/qemu/bitops.h:116 ../../../../include/qemu/bitops.h:131
#: ../../../../include/qemu/bitops.h:141 ../../../../include/qemu/bitops.h:151
#: ../../../../include/qemu/bitops.h:161 ../../../../include/qemu/bitops.h:172
#: ../../../../include/qemu/bitops.h:195 ../../../../include/qemu/bitops.h:208
#: ../../../../include/qemu/bitops.h:218 ../../../../include/qemu/bitops.h:228
#: ../../../../include/qemu/bitops.h:238 ../../../../include/qemu/bitops.h:248
#: ../../../../include/qemu/bitops.h:258 ../../../../include/qemu/bitops.h:268
#: ../../../../include/qemu/bitops.h:278 ../../../../include/qemu/bitops.h:287
#: ../../../../include/qemu/bitops.h:306 ../../../../include/qemu/bitops.h:325
#: ../../../../include/qemu/bitops.h:344 ../../../../include/qemu/bitops.h:363
#: ../../../../include/qemu/bitops.h:388 ../../../../include/qemu/bitops.h:413
#: ../../../../include/qemu/bitops.h:439 ../../../../include/qemu/bitops.h:465
#: ../../../../include/qemu/bitops.h:494 ../../../../include/qemu/bitops.h:524
#: ../../../../include/qemu/bitops.h:554
msgid "**Parameters**"
msgstr ""

#: ../../../../include/qemu/bitops.h:36 ../../../../include/qemu/bitops.h:49
#: ../../../../include/qemu/bitops.h:62 ../../../../include/qemu/bitops.h:75
#: ../../../../include/qemu/bitops.h:88 ../../../../include/qemu/bitops.h:103
#: ../../../../include/qemu/bitops.h:118 ../../../../include/qemu/bitops.h:133
msgid "``long nr``"
msgstr ""

#: ../../../../include/qemu/bitops.h:33 ../../../../include/qemu/bitops.h:46
msgid "the bit to set"
msgstr ""

#: ../../../../include/qemu/bitops.h:35 ../../../../include/qemu/bitops.h:48
#: ../../../../include/qemu/bitops.h:61 ../../../../include/qemu/bitops.h:74
#: ../../../../include/qemu/bitops.h:87 ../../../../include/qemu/bitops.h:102
#: ../../../../include/qemu/bitops.h:117
msgid "``unsigned long * addr``"
msgstr ""

#: ../../../../include/qemu/bitops.h:34 ../../../../include/qemu/bitops.h:47
msgid "the address to start counting from"
msgstr ""

#: ../../../../include/qemu/bitops.h:45
msgid "Set a bit in memory atomically"
msgstr ""

#: ../../../../include/qemu/bitops.h:58
msgid "Clears a bit in memory"
msgstr ""

#: ../../../../include/qemu/bitops.h:59 ../../../../include/qemu/bitops.h:100
msgid "Bit to clear"
msgstr ""

#: ../../../../include/qemu/bitops.h:60 ../../../../include/qemu/bitops.h:73
#: ../../../../include/qemu/bitops.h:131
msgid "Address to start counting from"
msgstr ""

#: ../../../../include/qemu/bitops.h:71
msgid "Toggle a bit in memory"
msgstr ""

#: ../../../../include/qemu/bitops.h:72 ../../../../include/qemu/bitops.h:115
msgid "Bit to change"
msgstr ""

#: ../../../../include/qemu/bitops.h:84
msgid "Set a bit and return its old value"
msgstr ""

#: ../../../../include/qemu/bitops.h:85
msgid "Bit to set"
msgstr ""

#: ../../../../include/qemu/bitops.h:86 ../../../../include/qemu/bitops.h:101
#: ../../../../include/qemu/bitops.h:116
msgid "Address to count from"
msgstr ""

#: ../../../../include/qemu/bitops.h:99
msgid "Clear a bit and return its old value"
msgstr ""

#: ../../../../include/qemu/bitops.h:114
msgid "Change a bit and return its old value"
msgstr ""

#: ../../../../include/qemu/bitops.h:129
msgid "Determine whether a bit is set"
msgstr ""

#: ../../../../include/qemu/bitops.h:130
msgid "bit number to test"
msgstr ""

#: ../../../../include/qemu/bitops.h:132 ../../../../include/qemu/bitops.h:143
#: ../../../../include/qemu/bitops.h:153 ../../../../include/qemu/bitops.h:163
#: ../../../../include/qemu/bitops.h:174 ../../../../include/qemu/bitops.h:197
msgid "``const unsigned long * addr``"
msgstr ""

#: ../../../../include/qemu/bitops.h:139
msgid "find the last set bit in a memory region"
msgstr ""

#: ../../../../include/qemu/bitops.h:140 ../../../../include/qemu/bitops.h:171
#: ../../../../include/qemu/bitops.h:194
msgid "The address to start the search at"
msgstr ""

#: ../../../../include/qemu/bitops.h:142 ../../../../include/qemu/bitops.h:152
#: ../../../../include/qemu/bitops.h:162 ../../../../include/qemu/bitops.h:173
#: ../../../../include/qemu/bitops.h:196
msgid "``unsigned long size``"
msgstr ""

#: ../../../../include/qemu/bitops.h:141 ../../../../include/qemu/bitops.h:172
#: ../../../../include/qemu/bitops.h:195
msgid "The maximum size to search"
msgstr ""

#: ../../../../include/qemu/bitops.h:143 ../../../../include/qemu/bitops.h:174
#: ../../../../include/qemu/bitops.h:197 ../../../../include/qemu/bitops.h:291
#: ../../../../include/qemu/bitops.h:310 ../../../../include/qemu/bitops.h:329
#: ../../../../include/qemu/bitops.h:348 ../../../../include/qemu/bitops.h:367
#: ../../../../include/qemu/bitops.h:392 ../../../../include/qemu/bitops.h:418
#: ../../../../include/qemu/bitops.h:444 ../../../../include/qemu/bitops.h:467
#: ../../../../include/qemu/bitops.h:496 ../../../../include/qemu/bitops.h:526
#: ../../../../include/qemu/bitops.h:556
msgid "**Description**"
msgstr ""

#: ../../../../include/qemu/bitops.h:142
msgid "Returns the bit number of the first set bit, or size."
msgstr ""

#: ../../../../include/qemu/bitops.h:149
msgid "find the next set bit in a memory region"
msgstr ""

#: ../../../../include/qemu/bitops.h:150 ../../../../include/qemu/bitops.h:160
msgid "The address to base the search on"
msgstr ""

#: ../../../../include/qemu/bitops.h:152 ../../../../include/qemu/bitops.h:162
msgid "The bitmap size in bits"
msgstr ""

#: ../../../../include/qemu/bitops.h:154 ../../../../include/qemu/bitops.h:164
msgid "``unsigned long offset``"
msgstr ""

#: ../../../../include/qemu/bitops.h:151 ../../../../include/qemu/bitops.h:161
msgid "The bitnumber to start searching at"
msgstr ""

#: ../../../../include/qemu/bitops.h:159
msgid "find the next cleared bit in a memory region"
msgstr ""

#: ../../../../include/qemu/bitops.h:170
msgid "find the first set bit in a memory region"
msgstr ""

#: ../../../../include/qemu/bitops.h:173
msgid "Returns the bit number of the first set bit."
msgstr ""

#: ../../../../include/qemu/bitops.h:193
msgid "find the first cleared bit in a memory region"
msgstr ""

#: ../../../../include/qemu/bitops.h:196
msgid "Returns the bit number of the first cleared bit."
msgstr ""

#: ../../../../include/qemu/bitops.h:206
msgid "rotate an 8-bit value left"
msgstr ""

#: ../../../../include/qemu/bitops.h:210 ../../../../include/qemu/bitops.h:220
msgid "``uint8_t word``"
msgstr ""

#: ../../../../include/qemu/bitops.h:207 ../../../../include/qemu/bitops.h:217
#: ../../../../include/qemu/bitops.h:227 ../../../../include/qemu/bitops.h:237
#: ../../../../include/qemu/bitops.h:247 ../../../../include/qemu/bitops.h:257
#: ../../../../include/qemu/bitops.h:267 ../../../../include/qemu/bitops.h:277
msgid "value to rotate"
msgstr ""

#: ../../../../include/qemu/bitops.h:209 ../../../../include/qemu/bitops.h:219
#: ../../../../include/qemu/bitops.h:229 ../../../../include/qemu/bitops.h:239
#: ../../../../include/qemu/bitops.h:249 ../../../../include/qemu/bitops.h:259
#: ../../../../include/qemu/bitops.h:269 ../../../../include/qemu/bitops.h:279
msgid "``unsigned int shift``"
msgstr ""

#: ../../../../include/qemu/bitops.h:208 ../../../../include/qemu/bitops.h:218
#: ../../../../include/qemu/bitops.h:228 ../../../../include/qemu/bitops.h:238
#: ../../../../include/qemu/bitops.h:248 ../../../../include/qemu/bitops.h:258
#: ../../../../include/qemu/bitops.h:268 ../../../../include/qemu/bitops.h:278
msgid "bits to roll"
msgstr ""

#: ../../../../include/qemu/bitops.h:216
msgid "rotate an 8-bit value right"
msgstr ""

#: ../../../../include/qemu/bitops.h:226
msgid "rotate a 16-bit value left"
msgstr ""

#: ../../../../include/qemu/bitops.h:230 ../../../../include/qemu/bitops.h:240
msgid "``uint16_t word``"
msgstr ""

#: ../../../../include/qemu/bitops.h:236
msgid "rotate a 16-bit value right"
msgstr ""

#: ../../../../include/qemu/bitops.h:246
msgid "rotate a 32-bit value left"
msgstr ""

#: ../../../../include/qemu/bitops.h:250 ../../../../include/qemu/bitops.h:260
msgid "``uint32_t word``"
msgstr ""

#: ../../../../include/qemu/bitops.h:256
msgid "rotate a 32-bit value right"
msgstr ""

#: ../../../../include/qemu/bitops.h:266
msgid "rotate a 64-bit value left"
msgstr ""

#: ../../../../include/qemu/bitops.h:270 ../../../../include/qemu/bitops.h:280
msgid "``uint64_t word``"
msgstr ""

#: ../../../../include/qemu/bitops.h:276
msgid "rotate a 64-bit value right"
msgstr ""

#: ../../../../include/qemu/bitops.h:289 ../../../../include/qemu/bitops.h:365
#: ../../../../include/qemu/bitops.h:415
msgid "``uint32_t value``"
msgstr ""

#: ../../../../include/qemu/bitops.h:287 ../../../../include/qemu/bitops.h:306
#: ../../../../include/qemu/bitops.h:325 ../../../../include/qemu/bitops.h:344
#: ../../../../include/qemu/bitops.h:363 ../../../../include/qemu/bitops.h:388
msgid "the value to extract the bit field from"
msgstr ""

#: ../../../../include/qemu/bitops.h:289 ../../../../include/qemu/bitops.h:308
#: ../../../../include/qemu/bitops.h:327 ../../../../include/qemu/bitops.h:346
#: ../../../../include/qemu/bitops.h:365 ../../../../include/qemu/bitops.h:390
#: ../../../../include/qemu/bitops.h:415 ../../../../include/qemu/bitops.h:441
msgid "``int start``"
msgstr ""

#: ../../../../include/qemu/bitops.h:288 ../../../../include/qemu/bitops.h:307
#: ../../../../include/qemu/bitops.h:326 ../../../../include/qemu/bitops.h:345
#: ../../../../include/qemu/bitops.h:364 ../../../../include/qemu/bitops.h:389
#: ../../../../include/qemu/bitops.h:414 ../../../../include/qemu/bitops.h:440
msgid "the lowest bit in the bit field (numbered from 0)"
msgstr ""

#: ../../../../include/qemu/bitops.h:290 ../../../../include/qemu/bitops.h:309
#: ../../../../include/qemu/bitops.h:328 ../../../../include/qemu/bitops.h:347
#: ../../../../include/qemu/bitops.h:366 ../../../../include/qemu/bitops.h:391
#: ../../../../include/qemu/bitops.h:416 ../../../../include/qemu/bitops.h:442
msgid "``int length``"
msgstr ""

#: ../../../../include/qemu/bitops.h:289 ../../../../include/qemu/bitops.h:308
#: ../../../../include/qemu/bitops.h:327 ../../../../include/qemu/bitops.h:346
#: ../../../../include/qemu/bitops.h:365 ../../../../include/qemu/bitops.h:390
#: ../../../../include/qemu/bitops.h:415 ../../../../include/qemu/bitops.h:441
msgid "the length of the bit field"
msgstr ""

#: ../../../../include/qemu/bitops.h:290
msgid ""
"Extract from the 32 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it. The bit field must lie "
"entirely within the 32 bit word. It is valid to request that all 32 bits are "
"returned (ie **length** 32 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:295 ../../../../include/qemu/bitops.h:314
#: ../../../../include/qemu/bitops.h:333 ../../../../include/qemu/bitops.h:352
#: ../../../../include/qemu/bitops.h:373 ../../../../include/qemu/bitops.h:398
#: ../../../../include/qemu/bitops.h:425 ../../../../include/qemu/bitops.h:451
#: ../../../../include/qemu/bitops.h:477 ../../../../include/qemu/bitops.h:506
#: ../../../../include/qemu/bitops.h:536 ../../../../include/qemu/bitops.h:566
msgid "**Return**"
msgstr ""

#: ../../../../include/qemu/bitops.h:296 ../../../../include/qemu/bitops.h:315
#: ../../../../include/qemu/bitops.h:334 ../../../../include/qemu/bitops.h:353
msgid "the value of the bit field extracted from the input value."
msgstr ""

#: ../../../../include/qemu/bitops.h:308
msgid "``uint8_t value``"
msgstr ""

#: ../../../../include/qemu/bitops.h:309
msgid ""
"Extract from the 8 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it. The bit field must lie "
"entirely within the 8 bit word. It is valid to request that all 8 bits are "
"returned (ie **length** 8 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:327
msgid "``uint16_t value``"
msgstr ""

#: ../../../../include/qemu/bitops.h:328
msgid ""
"Extract from the 16 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it. The bit field must lie "
"entirely within the 16 bit word. It is valid to request that all 16 bits are "
"returned (ie **length** 16 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:346 ../../../../include/qemu/bitops.h:390
#: ../../../../include/qemu/bitops.h:441
msgid "``uint64_t value``"
msgstr ""

#: ../../../../include/qemu/bitops.h:347
msgid ""
"Extract from the 64 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it. The bit field must lie "
"entirely within the 64 bit word. It is valid to request that all 64 bits are "
"returned (ie **length** 64 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:366
msgid ""
"Extract from the 32 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it, sign extended to an "
"int32_t (ie with the most significant bit of the field propagated to all the "
"upper bits of the return value). The bit field must lie entirely within the "
"32 bit word. It is valid to request that all 32 bits are returned (ie "
"**length** 32 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:374 ../../../../include/qemu/bitops.h:399
msgid ""
"the sign extended value of the bit field extracted from the input value."
msgstr ""

#: ../../../../include/qemu/bitops.h:391
msgid ""
"Extract from the 64 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it, sign extended to an "
"int64_t (ie with the most significant bit of the field propagated to all the "
"upper bits of the return value). The bit field must lie entirely within the "
"64 bit word. It is valid to request that all 64 bits are returned (ie "
"**length** 64 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:413 ../../../../include/qemu/bitops.h:439
msgid "initial value to insert bit field into"
msgstr ""

#: ../../../../include/qemu/bitops.h:417
msgid "``uint32_t fieldval``"
msgstr ""

#: ../../../../include/qemu/bitops.h:416 ../../../../include/qemu/bitops.h:442
msgid "the value to insert into the bit field"
msgstr ""

#: ../../../../include/qemu/bitops.h:417
msgid ""
"Deposit **fieldval** into the 32 bit **value** at the bit field specified by "
"the **start** and **length** parameters, and return the modified **value**. "
"Bits of **value** outside the bit field are not modified. Bits of "
"**fieldval** above the least significant **length** bits are ignored. The "
"bit field must lie entirely within the 32 bit word. It is valid to request "
"that all 32 bits are modified (ie **length** 32 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:426 ../../../../include/qemu/bitops.h:452
msgid "the modified **value**."
msgstr ""

#: ../../../../include/qemu/bitops.h:443
msgid "``uint64_t fieldval``"
msgstr ""

#: ../../../../include/qemu/bitops.h:443
msgid ""
"Deposit **fieldval** into the 64 bit **value** at the bit field specified by "
"the **start** and **length** parameters, and return the modified **value**. "
"Bits of **value** outside the bit field are not modified. Bits of "
"**fieldval** above the least significant **length** bits are ignored. The "
"bit field must lie entirely within the 64 bit word. It is valid to request "
"that all 64 bits are modified (ie **length** 64 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:467 ../../../../include/qemu/bitops.h:526
msgid "``uint32_t x``"
msgstr ""

#: ../../../../include/qemu/bitops.h:465
msgid "32-bit value (of which only the bottom 16 bits are of interest)"
msgstr ""

#: ../../../../include/qemu/bitops.h:466 ../../../../include/qemu/bitops.h:495
#: ../../../../include/qemu/bitops.h:525 ../../../../include/qemu/bitops.h:555
msgid "Given an input value::"
msgstr ""

#: ../../../../include/qemu/bitops.h:468
msgid "xxxx xxxx xxxx xxxx ABCD EFGH IJKL MNOP"
msgstr ""

#: ../../../../include/qemu/bitops.h:470
msgid ""
"return the value where the bottom 16 bits are spread out into the odd bits "
"in the word, and the even bits are zeroed::"
msgstr ""

#: ../../../../include/qemu/bitops.h:473
msgid "0A0B 0C0D 0E0F 0G0H 0I0J 0K0L 0M0N 0O0P"
msgstr ""

#: ../../../../include/qemu/bitops.h:475 ../../../../include/qemu/bitops.h:504
msgid "Any bits set in the top half of the input are ignored."
msgstr ""

#: ../../../../include/qemu/bitops.h:478 ../../../../include/qemu/bitops.h:507
msgid "the shuffled bits."
msgstr ""

#: ../../../../include/qemu/bitops.h:496 ../../../../include/qemu/bitops.h:556
msgid "``uint64_t x``"
msgstr ""

#: ../../../../include/qemu/bitops.h:494
msgid "64-bit value (of which only the bottom 32 bits are of interest)"
msgstr ""

#: ../../../../include/qemu/bitops.h:497
msgid "xxxx xxxx xxxx .... xxxx xxxx ABCD EFGH IJKL MNOP QRST UVWX YZab cdef"
msgstr ""

#: ../../../../include/qemu/bitops.h:499
msgid ""
"return the value where the bottom 32 bits are spread out into the odd bits "
"in the word, and the even bits are zeroed::"
msgstr ""

#: ../../../../include/qemu/bitops.h:502
msgid "0A0B 0C0D 0E0F 0G0H 0I0J 0K0L 0M0N .... 0U0V 0W0X 0Y0Z 0a0b 0c0d 0e0f"
msgstr ""

#: ../../../../include/qemu/bitops.h:524
msgid "32-bit value (of which only the odd bits are of interest)"
msgstr ""

#: ../../../../include/qemu/bitops.h:527
msgid "xAxB xCxD xExF xGxH xIxJ xKxL xMxN xOxP"
msgstr ""

#: ../../../../include/qemu/bitops.h:529 ../../../../include/qemu/bitops.h:559
msgid ""
"return the value where all the odd bits are compressed down into the low "
"half of the word, and the high half is zeroed::"
msgstr ""

#: ../../../../include/qemu/bitops.h:532
msgid "0000 0000 0000 0000 ABCD EFGH IJKL MNOP"
msgstr ""

#: ../../../../include/qemu/bitops.h:534 ../../../../include/qemu/bitops.h:564
msgid "Any even bits set in the input are ignored."
msgstr ""

#: ../../../../include/qemu/bitops.h:537 ../../../../include/qemu/bitops.h:567
msgid "the unshuffled bits."
msgstr ""

#: ../../../../include/qemu/bitops.h:554
msgid "64-bit value (of which only the odd bits are of interest)"
msgstr ""

#: ../../../../include/qemu/bitops.h:557
msgid "xAxB xCxD xExF xGxH xIxJ xKxL xMxN .... xUxV xWxX xYxZ xaxb xcxd xexf"
msgstr ""

#: ../../../../include/qemu/bitops.h:562
msgid "0000 0000 0000 .... 0000 0000 ABCD EFGH IJKL MNOP QRST UVWX YZab cdef"
msgstr ""
