# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 7.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 10:00+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../devel/tcg-plugins.rst:7
msgid "QEMU TCG Plugins"
msgstr ""

#: ../../../devel/tcg-plugins.rst:9
msgid ""
"QEMU TCG plugins provide a way for users to run experiments taking advantage "
"of the total system control emulation can have over a guest. It provides a "
"mechanism for plugins to subscribe to events during translation and "
"execution and optionally callback into the plugin during these events. TCG "
"plugins are unable to change the system state only monitor it passively. "
"However they can do this down to an individual instruction granularity "
"including potentially subscribing to all load and store operations."
msgstr ""

#: ../../../devel/tcg-plugins.rst:19
msgid "Usage"
msgstr ""

#: ../../../devel/tcg-plugins.rst:21
msgid ""
"Any QEMU binary with TCG support has plugins enabled by default. Earlier "
"releases needed to be explicitly enabled with::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:24
msgid "configure --enable-plugins"
msgstr ""

#: ../../../devel/tcg-plugins.rst:26
msgid ""
"Once built a program can be run with multiple plugins loaded each with their "
"own arguments::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:29
msgid ""
"$QEMU $OTHER_QEMU_ARGS \\\n"
"    -plugin contrib/plugin/libhowvec.so,inline=on,count=hint \\\n"
"    -plugin contrib/plugin/libhotblocks.so"
msgstr ""

#: ../../../devel/tcg-plugins.rst:33
msgid ""
"Arguments are plugin specific and can be used to modify their behaviour. In "
"this case the howvec plugin is being asked to use inline ops to count and "
"break down the hint instructions by type."
msgstr ""

#: ../../../devel/tcg-plugins.rst:37
msgid ""
"Linux user-mode emulation also evaluates the environment variable "
"``QEMU_PLUGIN``::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:40
msgid ""
"QEMU_PLUGIN=\"file=contrib/plugins/libhowvec.so,inline=on,count=hint\" $QEMU"
msgstr ""

#: ../../../devel/tcg-plugins.rst:43
msgid "Writing plugins"
msgstr ""

#: ../../../devel/tcg-plugins.rst:46
msgid "API versioning"
msgstr ""

#: ../../../devel/tcg-plugins.rst:48
msgid ""
"This is a new feature for QEMU and it does allow people to develop out-of-"
"tree plugins that can be dynamically linked into a running QEMU process. "
"However the project reserves the right to change or break the API should it "
"need to do so. The best way to avoid this is to submit your plugin upstream "
"so they can be updated if/when the API changes."
msgstr ""

#: ../../../devel/tcg-plugins.rst:54
msgid ""
"All plugins need to declare a symbol which exports the plugin API version "
"they were built against. This can be done simply by::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:57
msgid "QEMU_PLUGIN_EXPORT int qemu_plugin_version = QEMU_PLUGIN_VERSION;"
msgstr ""

#: ../../../devel/tcg-plugins.rst:59
msgid ""
"The core code will refuse to load a plugin that doesn't export a "
"``qemu_plugin_version`` symbol or if plugin version is outside of QEMU's "
"supported range of API versions."
msgstr ""

#: ../../../devel/tcg-plugins.rst:63
msgid ""
"Additionally the ``qemu_info_t`` structure which is passed to the "
"``qemu_plugin_install`` method of a plugin will detail the minimum and "
"current API versions supported by QEMU. The API version will be incremented "
"if new APIs are added. The minimum API version will be incremented if "
"existing APIs are changed or removed."
msgstr ""

#: ../../../devel/tcg-plugins.rst:70
msgid "Lifetime of the query handle"
msgstr ""

#: ../../../devel/tcg-plugins.rst:72
msgid ""
"Each callback provides an opaque anonymous information handle which can "
"usually be further queried to find out information about a translation, "
"instruction or operation. The handles themselves are only valid during the "
"lifetime of the callback so it is important that any information that is "
"needed is extracted during the callback and saved by the plugin."
msgstr ""

#: ../../../devel/tcg-plugins.rst:80
msgid "Plugin life cycle"
msgstr ""

#: ../../../devel/tcg-plugins.rst:82
msgid ""
"First the plugin is loaded and the public qemu_plugin_install function is "
"called. The plugin will then register callbacks for various plugin events. "
"Generally plugins will register a handler for the *atexit* if they want to "
"dump a summary of collected information once the program/system has finished "
"running."
msgstr ""

#: ../../../devel/tcg-plugins.rst:88
msgid ""
"When a registered event occurs the plugin callback is invoked. The callbacks "
"may provide additional information. In the case of a translation event the "
"plugin has an option to enumerate the instructions in a block of "
"instructions and optionally register callbacks to some or all instructions "
"when they are executed."
msgstr ""

#: ../../../devel/tcg-plugins.rst:94
msgid ""
"There is also a facility to add an inline event where code to increment a "
"counter can be directly inlined with the translation. Currently only a "
"simple increment is supported. This is not atomic so can miss counts. If you "
"want absolute precision you should use a callback which can then ensure "
"atomicity itself."
msgstr ""

#: ../../../devel/tcg-plugins.rst:100
msgid ""
"Finally when QEMU exits all the registered *atexit* callbacks are invoked."
msgstr ""

#: ../../../devel/tcg-plugins.rst:104
msgid "Exposure of QEMU internals"
msgstr ""

#: ../../../devel/tcg-plugins.rst:106
msgid ""
"The plugin architecture actively avoids leaking implementation details about "
"how QEMU's translation works to the plugins. While there are conceptions "
"such as translation time and translation blocks the details are opaque to "
"plugins. The plugin is able to query select details of instructions and "
"system configuration only through the exported *qemu_plugin* functions."
msgstr ""

#: ../../../devel/tcg-plugins.rst:114
msgid "API"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:36
msgid "Unique plugin ID"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:56
msgid "system information for plugins"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:58
msgid "**Definition**"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:62
msgid ""
"struct qemu_info_t {\n"
"  const char *target_name;\n"
"  struct {\n"
"    int min;\n"
"    int cur;\n"
"  } version;\n"
"  bool system_emulation;\n"
"  union {\n"
"    struct {\n"
"      int smp_vcpus;\n"
"      int max_vcpus;\n"
"    } system;\n"
"  };\n"
"};"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:77
msgid "**Members**"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:63
msgid "``target_name``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:64
msgid "string describing architecture"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:0
msgid "``version``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:1
msgid "minimum and current plugin API level"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:0
msgid "``system_emulation``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:1
msgid "is this a full system emulation?"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:3
msgid "``{unnamed_union}``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:4
msgid "anonymous"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:0
msgid "``system``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:1
msgid "information relevant to system emulation"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:4
#: ../../../../include/qemu/qemu-plugin.h:91
#: ../../../../include/qemu/qemu-plugin.h:109
#: ../../../../include/qemu/qemu-plugin.h:143
#: ../../../../include/qemu/qemu-plugin.h:156
#: ../../../../include/qemu/qemu-plugin.h:169
#: ../../../../include/qemu/qemu-plugin.h:181
#: ../../../../include/qemu/qemu-plugin.h:193
#: ../../../../include/qemu/qemu-plugin.h:203
#: ../../../../include/qemu/qemu-plugin.h:248
#: ../../../../include/qemu/qemu-plugin.h:265
#: ../../../../include/qemu/qemu-plugin.h:291
#: ../../../../include/qemu/qemu-plugin.h:309
#: ../../../../include/qemu/qemu-plugin.h:323
#: ../../../../include/qemu/qemu-plugin.h:351
#: ../../../../include/qemu/qemu-plugin.h:399
#: ../../../../include/qemu/qemu-plugin.h:440
#: ../../../../include/qemu/qemu-plugin.h:461
#: ../../../../include/qemu/qemu-plugin.h:470
#: ../../../../include/qemu/qemu-plugin.h:523
#: ../../../../include/qemu/qemu-plugin.h:532
#: ../../../../include/qemu/qemu-plugin.h:542
#: ../../../../include/qemu/qemu-plugin.h:558
#: ../../../../include/qemu/qemu-plugin.h:588
#: ../../../../include/qemu/qemu-plugin.h:601
#: ../../../../include/qemu/qemu-plugin.h:611
#: ../../../../include/qemu/qemu-plugin.h:619
#: ../../../../include/qemu/qemu-plugin.h:627
msgid "**Description**"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:58
msgid ""
"This structure provides for some limited information about the system to "
"allow the plugin to make decisions on how to proceed. For example it might "
"only be suitable for running on some guest architectures or when under full "
"system emulation."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:85
msgid "Install a plugin"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:87
#: ../../../../include/qemu/qemu-plugin.h:113
#: ../../../../include/qemu/qemu-plugin.h:121
#: ../../../../include/qemu/qemu-plugin.h:129
#: ../../../../include/qemu/qemu-plugin.h:137
#: ../../../../include/qemu/qemu-plugin.h:141
#: ../../../../include/qemu/qemu-plugin.h:154
#: ../../../../include/qemu/qemu-plugin.h:167
#: ../../../../include/qemu/qemu-plugin.h:179
#: ../../../../include/qemu/qemu-plugin.h:191
#: ../../../../include/qemu/qemu-plugin.h:201
#: ../../../../include/qemu/qemu-plugin.h:243
#: ../../../../include/qemu/qemu-plugin.h:246
#: ../../../../include/qemu/qemu-plugin.h:261
#: ../../../../include/qemu/qemu-plugin.h:287
#: ../../../../include/qemu/qemu-plugin.h:305
#: ../../../../include/qemu/qemu-plugin.h:319
#: ../../../../include/qemu/qemu-plugin.h:333
#: ../../../../include/qemu/qemu-plugin.h:341
#: ../../../../include/qemu/qemu-plugin.h:349
#: ../../../../include/qemu/qemu-plugin.h:363
#: ../../../../include/qemu/qemu-plugin.h:375
#: ../../../../include/qemu/qemu-plugin.h:383
#: ../../../../include/qemu/qemu-plugin.h:391
#: ../../../../include/qemu/qemu-plugin.h:409
#: ../../../../include/qemu/qemu-plugin.h:416
#: ../../../../include/qemu/qemu-plugin.h:423
#: ../../../../include/qemu/qemu-plugin.h:430
#: ../../../../include/qemu/qemu-plugin.h:438
#: ../../../../include/qemu/qemu-plugin.h:460
#: ../../../../include/qemu/qemu-plugin.h:469
#: ../../../../include/qemu/qemu-plugin.h:522
#: ../../../../include/qemu/qemu-plugin.h:531
#: ../../../../include/qemu/qemu-plugin.h:540
#: ../../../../include/qemu/qemu-plugin.h:555
#: ../../../../include/qemu/qemu-plugin.h:577
#: ../../../../include/qemu/qemu-plugin.h:583
#: ../../../../include/qemu/qemu-plugin.h:596
#: ../../../../include/qemu/qemu-plugin.h:606
#: ../../../../include/qemu/qemu-plugin.h:614
#: ../../../../include/qemu/qemu-plugin.h:622
msgid "**Parameters**"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:89
#: ../../../../include/qemu/qemu-plugin.h:115
#: ../../../../include/qemu/qemu-plugin.h:123
#: ../../../../include/qemu/qemu-plugin.h:131
#: ../../../../include/qemu/qemu-plugin.h:143
#: ../../../../include/qemu/qemu-plugin.h:156
#: ../../../../include/qemu/qemu-plugin.h:169
#: ../../../../include/qemu/qemu-plugin.h:181
#: ../../../../include/qemu/qemu-plugin.h:193
#: ../../../../include/qemu/qemu-plugin.h:203
#: ../../../../include/qemu/qemu-plugin.h:245
#: ../../../../include/qemu/qemu-plugin.h:248
#: ../../../../include/qemu/qemu-plugin.h:542
#: ../../../../include/qemu/qemu-plugin.h:557
msgid "``qemu_plugin_id_t id``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:86
#: ../../../../include/qemu/qemu-plugin.h:140
#: ../../../../include/qemu/qemu-plugin.h:153
msgid "this plugin's opaque ID"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:88
msgid "``const qemu_info_t *info``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:87
msgid "a block describing some details about the guest"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:89
msgid "``int argc``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:88
msgid "number of arguments"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:90
msgid "``char **argv``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:89
msgid "array of arguments (**argc** elements)"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:91
msgid ""
"All plugins must export this symbol which is called when the plugin is first "
"loaded. Calling qemu_plugin_uninstall() from this function is a bug."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:95
#: ../../../../include/qemu/qemu-plugin.h:147
#: ../../../../include/qemu/qemu-plugin.h:227
#: ../../../../include/qemu/qemu-plugin.h:280
#: ../../../../include/qemu/qemu-plugin.h:295
#: ../../../../include/qemu/qemu-plugin.h:364
msgid "**Note**"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:95
msgid ""
"**info** is only live during the call. Copy any information we want to keep. "
"**argv** remains valid throughout the lifetime of the loaded plugin."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:99
#: ../../../../include/qemu/qemu-plugin.h:334
#: ../../../../include/qemu/qemu-plugin.h:342
#: ../../../../include/qemu/qemu-plugin.h:355
#: ../../../../include/qemu/qemu-plugin.h:367
#: ../../../../include/qemu/qemu-plugin.h:376
#: ../../../../include/qemu/qemu-plugin.h:384
#: ../../../../include/qemu/qemu-plugin.h:392
#: ../../../../include/qemu/qemu-plugin.h:410
#: ../../../../include/qemu/qemu-plugin.h:417
#: ../../../../include/qemu/qemu-plugin.h:424
#: ../../../../include/qemu/qemu-plugin.h:431
msgid "**Return**"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:99
msgid "0 on successful loading, !0 for an error."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:106
msgid "**Typedef**: simple callback"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:109
#: ../../../../include/qemu/qemu-plugin.h:117
#: ../../../../include/qemu/qemu-plugin.h:125
#: ../../../../include/qemu/qemu-plugin.h:133
#: ../../../../include/qemu/qemu-plugin.h:239
msgid "**Syntax**"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:111
msgid "``void qemu_plugin_simple_cb_t (qemu_plugin_id_t id)``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:107
#: ../../../../include/qemu/qemu-plugin.h:115
#: ../../../../include/qemu/qemu-plugin.h:123
msgid "the unique qemu_plugin_id_t"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:109
msgid "This callback passes no information aside from the unique **id**."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:114
msgid "**Typedef**: callback with user data"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:119
msgid "``void qemu_plugin_udata_cb_t (qemu_plugin_id_t id, void *userdata)``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:117
#: ../../../../include/qemu/qemu-plugin.h:133
#: ../../../../include/qemu/qemu-plugin.h:264
#: ../../../../include/qemu/qemu-plugin.h:308
#: ../../../../include/qemu/qemu-plugin.h:557
msgid "``void *userdata``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:116
#: ../../../../include/qemu/qemu-plugin.h:132
msgid "a pointer to some user data supplied when the callback was registered."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:122
#: ../../../../include/qemu/qemu-plugin.h:130
msgid "**Typedef**: vcpu callback"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:127
msgid ""
"``void qemu_plugin_vcpu_simple_cb_t (qemu_plugin_id_t id, unsigned int "
"vcpu_index)``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:125
#: ../../../../include/qemu/qemu-plugin.h:139
msgid "``unsigned int vcpu_index``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:124
#: ../../../../include/qemu/qemu-plugin.h:131
msgid "the current vcpu context"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:135
msgid ""
"``void qemu_plugin_vcpu_udata_cb_t (unsigned int vcpu_index, void "
"*userdata)``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:139
msgid "Uninstall a plugin"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:142
#: ../../../../include/qemu/qemu-plugin.h:155
msgid "``qemu_plugin_simple_cb_t cb``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:141
msgid "callback to be called once the plugin has been removed"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:143
msgid ""
"Do NOT assume that the plugin has been uninstalled once this function "
"returns. Plugins are uninstalled asynchronously, and therefore the given "
"plugin receives callbacks until **cb** is called."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:147
msgid "Calling this function from qemu_plugin_install() is a bug."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:152
msgid "Reset a plugin"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:154
msgid "callback to be called once the plugin has been reset"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:156
msgid "Unregisters all callbacks for the plugin given by **id**."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:158
msgid ""
"Do NOT assume that the plugin has been reset once this function returns. "
"Plugins are reset asynchronously, and therefore the given plugin receives "
"callbacks until **cb** is called."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:165
msgid "register a vCPU initialization callback"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:166
#: ../../../../include/qemu/qemu-plugin.h:178
#: ../../../../include/qemu/qemu-plugin.h:190
#: ../../../../include/qemu/qemu-plugin.h:200
#: ../../../../include/qemu/qemu-plugin.h:245
#: ../../../../include/qemu/qemu-plugin.h:539
#: ../../../../include/qemu/qemu-plugin.h:554
msgid "plugin ID"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:168
#: ../../../../include/qemu/qemu-plugin.h:180
#: ../../../../include/qemu/qemu-plugin.h:192
#: ../../../../include/qemu/qemu-plugin.h:202
#: ../../../../include/qemu/qemu-plugin.h:541
msgid "``qemu_plugin_vcpu_simple_cb_t cb``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:167
#: ../../../../include/qemu/qemu-plugin.h:179
#: ../../../../include/qemu/qemu-plugin.h:191
#: ../../../../include/qemu/qemu-plugin.h:201
#: ../../../../include/qemu/qemu-plugin.h:246
#: ../../../../include/qemu/qemu-plugin.h:261
#: ../../../../include/qemu/qemu-plugin.h:305
#: ../../../../include/qemu/qemu-plugin.h:540
msgid "callback function"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:169
msgid "The **cb** function is called every time a vCPU is initialized."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:171
msgid "See also: qemu_plugin_register_vcpu_exit_cb()"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:177
msgid "register a vCPU exit callback"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:181
msgid "The **cb** function is called every time a vCPU exits."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:183
#: ../../../../include/qemu/qemu-plugin.h:544
msgid "See also: qemu_plugin_register_vcpu_init_cb()"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:189
msgid "register a vCPU idle callback"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:193
msgid "The **cb** function is called every time a vCPU idles."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:199
msgid "register a vCPU resume callback"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:203
msgid "The **cb** function is called every time a vCPU resumes execution."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:214
msgid "type of callback"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:216
#: ../../../../include/qemu/qemu-plugin.h:275
msgid "**Constants**"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:218
msgid "``QEMU_PLUGIN_CB_NO_REGS``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:219
msgid "callback does not access the CPU's regs"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:221
msgid "``QEMU_PLUGIN_CB_R_REGS``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:222
msgid "callback reads the CPU's regs"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:224
msgid "``QEMU_PLUGIN_CB_RW_REGS``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:225
msgid "callback reads and writes the CPU's regs"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:220
msgid "currently unused, plugins cannot read or change system register state."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:236
msgid "**Typedef**: translation callback"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:241
msgid ""
"``void qemu_plugin_vcpu_tb_trans_cb_t (qemu_plugin_id_t id, struct "
"qemu_plugin_tb *tb)``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:237
msgid "unique plugin id"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:239
#: ../../../../include/qemu/qemu-plugin.h:263
#: ../../../../include/qemu/qemu-plugin.h:289
msgid "``struct qemu_plugin_tb *tb``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:238
msgid "opaque handle used for querying and instrumenting a block."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:244
msgid "register a translate cb"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:247
msgid "``qemu_plugin_vcpu_tb_trans_cb_t cb``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:248
msgid ""
"The **cb** function is called every time a translation occurs. The **cb** "
"function is passed an opaque qemu_plugin_type which it can query for "
"additional information including the list of translated instructions. At "
"this point the plugin can register further callbacks to be triggered when "
"the block or individual instruction executes."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:259
msgid "register execution callback"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:260
#: ../../../../include/qemu/qemu-plugin.h:286
msgid "the opaque qemu_plugin_tb handle for the translation"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:262
#: ../../../../include/qemu/qemu-plugin.h:306
msgid "``qemu_plugin_vcpu_udata_cb_t cb``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:263
#: ../../../../include/qemu/qemu-plugin.h:307
msgid "``enum qemu_plugin_cb_flags flags``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:262
#: ../../../../include/qemu/qemu-plugin.h:306
msgid "does the plugin read or write the CPU's registers?"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:263
#: ../../../../include/qemu/qemu-plugin.h:307
msgid "any plugin data to pass to the **cb**?"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:265
msgid "The **cb** function is called every time a translated unit executes."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:273
msgid "describes an inline op"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:277
msgid "``QEMU_PLUGIN_INLINE_ADD_U64``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:278
msgid "add an immediate value uint64_t"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:277
msgid "currently only a single inline op is supported."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:285
msgid "execution inline op"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:288
#: ../../../../include/qemu/qemu-plugin.h:320
msgid "``enum qemu_plugin_op op``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:287
#: ../../../../include/qemu/qemu-plugin.h:319
msgid "the type of qemu_plugin_op (e.g. ADD_U64)"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:289
#: ../../../../include/qemu/qemu-plugin.h:321
msgid "``void *ptr``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:288
#: ../../../../include/qemu/qemu-plugin.h:320
msgid "the target memory location for the op"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:290
#: ../../../../include/qemu/qemu-plugin.h:322
msgid "``uint64_t imm``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:289
#: ../../../../include/qemu/qemu-plugin.h:321
msgid "the op data (e.g. 1)"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:291
msgid ""
"Insert an inline op to every time a translated unit executes. Useful if you "
"just want to increment a single counter somewhere in memory."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:295
msgid ""
"ops are not atomic so in multi-threaded/multi-smp situations you will get "
"inexact results."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:303
msgid "register insn execution cb"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:307
#: ../../../../include/qemu/qemu-plugin.h:321
msgid "``struct qemu_plugin_insn *insn``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:304
#: ../../../../include/qemu/qemu-plugin.h:318
msgid "the opaque qemu_plugin_insn handle for an instruction"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:309
msgid "The **cb** function is called every time an instruction is executed"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:317
msgid "insn execution inline op"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:323
msgid ""
"Insert an inline op to every time an instruction executes. Useful if you "
"just want to increment a single counter somewhere in memory."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:331
msgid "query helper for number of insns in TB"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:335
#: ../../../../include/qemu/qemu-plugin.h:343
#: ../../../../include/qemu/qemu-plugin.h:351
msgid "``const struct qemu_plugin_tb *tb``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:332
#: ../../../../include/qemu/qemu-plugin.h:340
#: ../../../../include/qemu/qemu-plugin.h:348
msgid "opaque handle to TB passed to callback"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:334
msgid "number of instructions in this block"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:339
msgid "query helper for vaddr of TB start"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:342
msgid "virtual address of block start"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:347
msgid "retrieve handle for instruction"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:350
msgid "``size_t idx``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:349
msgid "instruction number, 0 indexed"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:351
msgid ""
"The returned handle can be used in follow up helper queries as well as when "
"instrumenting an instruction. It is only valid for the lifetime of the "
"callback."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:355
msgid "opaque handle to instruction"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:361
msgid "return ptr to instruction data"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:365
#: ../../../../include/qemu/qemu-plugin.h:377
#: ../../../../include/qemu/qemu-plugin.h:385
#: ../../../../include/qemu/qemu-plugin.h:393
#: ../../../../include/qemu/qemu-plugin.h:524
#: ../../../../include/qemu/qemu-plugin.h:533
msgid "``const struct qemu_plugin_insn *insn``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:362
#: ../../../../include/qemu/qemu-plugin.h:374
#: ../../../../include/qemu/qemu-plugin.h:382
#: ../../../../include/qemu/qemu-plugin.h:390
msgid "opaque instruction handle from qemu_plugin_tb_get_insn()"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:364
msgid ""
"data is only valid for duration of callback. See qemu_plugin_insn_size() to "
"calculate size of stream."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:367
msgid ""
"pointer to a stream of bytes containing the value of this instructions "
"opcode."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:373
msgid "return size of instruction"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:376
msgid "size of instruction in bytes"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:381
msgid "return vaddr of instruction"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:384
msgid "virtual address of instruction"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:389
msgid "return hardware addr of instruction"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:392
msgid "hardware (physical) target address of instruction"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:397
#: ../../../../include/qemu/qemu-plugin.h:408
#: ../../../../include/qemu/qemu-plugin.h:415
#: ../../../../include/qemu/qemu-plugin.h:422
#: ../../../../include/qemu/qemu-plugin.h:429
msgid "opaque memory transaction handle"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:399
msgid ""
"This can be further queried using the qemu_plugin_mem_* query functions."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:407
msgid "get size of access"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:411
#: ../../../../include/qemu/qemu-plugin.h:418
#: ../../../../include/qemu/qemu-plugin.h:425
#: ../../../../include/qemu/qemu-plugin.h:432
#: ../../../../include/qemu/qemu-plugin.h:440
msgid "``qemu_plugin_meminfo_t info``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:410
msgid "size of access in ^2 (0=byte, 1=16bit, 2=32bit etc...)"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:414
msgid "was the access sign extended"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:417
#: ../../../../include/qemu/qemu-plugin.h:424
#: ../../../../include/qemu/qemu-plugin.h:431
msgid "true if it was, otherwise false"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:421
msgid "was the access big endian"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:428
msgid "was the access a store"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:436
msgid "return handle for memory operation"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:437
msgid "opaque memory info structure"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:439
msgid "``uint64_t vaddr``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:438
msgid "the virtual address of the memory operation"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:440
msgid ""
"For system emulation returns a qemu_plugin_hwaddr handle to query details "
"about the actual physical address backing the virtual address. For linux-"
"user guests it just returns NULL."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:444
msgid ""
"This handle is *only* valid for the duration of the callback. Any "
"information about the handle should be recovered before the callback returns."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:458
msgid "query whether memory operation is IO"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:462
#: ../../../../include/qemu/qemu-plugin.h:471
msgid "``const struct qemu_plugin_hwaddr *haddr``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:459
#: ../../../../include/qemu/qemu-plugin.h:468
msgid "address handle from qemu_plugin_get_hwaddr()"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:461
msgid ""
"Returns true if the handle's memory operation is to memory-mapped IO, or "
"false if it is to RAM"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:467
msgid "query physical address for memory operation"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:470
msgid "Returns the physical address associated with the memory operation"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:472
msgid ""
"Note that the returned physical address may not be unique if you are dealing "
"with multiple address spaces."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:520
msgid "return disassembly string for instruction"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:521
#: ../../../../include/qemu/qemu-plugin.h:530
msgid "instruction reference"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:523
msgid "Returns an allocated string containing the disassembly"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:529
msgid "best effort symbol lookup"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:532
msgid ""
"Return a static string referring to the symbol. This is dependent on the "
"binary QEMU is running having provided a symbol table."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:538
msgid "iterate over the existing vCPU"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:542
msgid "The **cb** function is called once for each existing vCPU."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:553
msgid "register exit callback"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:556
msgid "``qemu_plugin_udata_cb_t cb``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:555
msgid "callback"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:556
msgid "user data for callback"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:558
msgid ""
"The **cb** function is called once execution has finished. Plugins should be "
"able to free all their resources at this point much like after a reset/"
"uninstall callback is called."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:562
msgid ""
"In user-mode it is possible a few un-instrumented instructions from child "
"threads may run before the host kernel reaps the threads."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:575
msgid "output string via QEMU's logging system"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:579
msgid "``const char *string``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:576
msgid "a string"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:581
msgid ""
"parses a boolean argument in the form of \"<argname>=[on|yes|true|off|no|"
"false]\""
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:585
msgid "``const char *name``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:584
msgid "argument name, the part before the equals sign"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:586
msgid "``const char *val``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:585
msgid "argument value, what's after the equals sign"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:587
msgid "``bool *ret``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:586
msgid "output return value"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:588
msgid ""
"returns true if the combination **name**=**val** parses correctly to a "
"boolean argument, and false otherwise"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:594
msgid "path to binary file being executed"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:598
#: ../../../../include/qemu/qemu-plugin.h:608
#: ../../../../include/qemu/qemu-plugin.h:616
#: ../../../../include/qemu/qemu-plugin.h:624
msgid "``void``"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:599
#: ../../../../include/qemu/qemu-plugin.h:609
#: ../../../../include/qemu/qemu-plugin.h:617
#: ../../../../include/qemu/qemu-plugin.h:625
msgid "no arguments"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:596
msgid ""
"Return a string representing the path to the binary. For user-mode this is "
"the main executable. For system emulation we currently return NULL. The user "
"should g_free() the string once no longer needed."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:604
msgid "returns start of text segment"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:606
msgid ""
"Returns the nominal start address of the main text segment in user-mode. "
"Currently returns 0 for system emulation."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:612
msgid "returns end of text segment"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:614
msgid ""
"Returns the nominal end address of the main text segment in user-mode. "
"Currently returns 0 for system emulation."
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:620
msgid "returns start address for module"
msgstr ""

#: ../../../../include/qemu/qemu-plugin.h:622
msgid ""
"Returns the nominal entry address of the main text segment in user-mode. "
"Currently returns 0 for system emulation."
msgstr ""

#: ../../../devel/tcg-plugins.rst:119
msgid "Internals"
msgstr ""

#: ../../../devel/tcg-plugins.rst:122
msgid "Locking"
msgstr ""

#: ../../../devel/tcg-plugins.rst:124
msgid ""
"We have to ensure we cannot deadlock, particularly under MTTCG. For this we "
"acquire a lock when called from plugin code. We also keep the list of "
"callbacks under RCU so that we do not have to hold the lock when calling the "
"callbacks. This is also for performance, since some callbacks (e.g. memory "
"access callbacks) might be called very frequently."
msgstr ""

#: ../../../devel/tcg-plugins.rst:131
msgid ""
"A consequence of this is that we keep our own list of CPUs, so that we do "
"not have to worry about locking order wrt cpu_list_lock."
msgstr ""

#: ../../../devel/tcg-plugins.rst:133
msgid ""
"Use a recursive lock, since we can get registration calls from callbacks."
msgstr ""

#: ../../../devel/tcg-plugins.rst:136
msgid ""
"As a result registering/unregistering callbacks is \"slow\", since it takes "
"a lock. But this is very infrequent; we want performance when calling (or "
"not calling) callbacks, not when registering them. Using RCU is great for "
"this."
msgstr ""

#: ../../../devel/tcg-plugins.rst:141
msgid ""
"We support the uninstallation of a plugin at any time (e.g. from plugin "
"callbacks). This allows plugins to remove themselves if they no longer want "
"to instrument the code. This operation is asynchronous which means callbacks "
"may still occur after the uninstall operation is requested. The plugin isn't "
"completely uninstalled until the safe work has executed while all vCPUs are "
"quiescent."
msgstr ""

#: ../../../devel/tcg-plugins.rst:149
msgid "Example Plugins"
msgstr ""

#: ../../../devel/tcg-plugins.rst:151
msgid ""
"There are a number of plugins included with QEMU and you are encouraged to "
"contribute your own plugins plugins upstream. There is a ``contrib/plugins`` "
"directory where they can go."
msgstr ""

#: ../../../devel/tcg-plugins.rst:155
msgid "tests/plugins"
msgstr ""

#: ../../../devel/tcg-plugins.rst:157
msgid ""
"These are some basic plugins that are used to test and exercise the API "
"during the ``make check-tcg`` target."
msgstr ""

#: ../../../devel/tcg-plugins.rst:160
msgid "contrib/plugins/hotblocks.c"
msgstr ""

#: ../../../devel/tcg-plugins.rst:162
msgid ""
"The hotblocks plugin allows you to examine the where hot paths of execution "
"are in your program. Once the program has finished you will get a sorted "
"list of blocks reporting the starting PC, translation count, number of "
"instructions and execution count. This will work best with linux-user "
"execution as system emulation tends to generate re-translations as blocks "
"from different programs get swapped in and out of system memory."
msgstr ""

#: ../../../devel/tcg-plugins.rst:170
msgid ""
"If your program is single-threaded you can use the ``inline`` option for "
"slightly faster (but not thread safe) counters."
msgstr ""

#: ../../../devel/tcg-plugins.rst:173
msgid "Example::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:175
msgid ""
"./aarch64-linux-user/qemu-aarch64 \\\n"
"  -plugin contrib/plugins/libhotblocks.so -d plugin \\\n"
"  ./tests/tcg/aarch64-linux-user/sha1\n"
"SHA1=15dd99a1991e0b3826fede3deffc1feba42278e6\n"
"collected 903 entries in the hash table\n"
"pc, tcount, icount, ecount\n"
"0x0000000041ed10, 1, 5, 66087\n"
"0x000000004002b0, 1, 4, 66087\n"
"..."
msgstr ""

#: ../../../devel/tcg-plugins.rst:185
msgid "contrib/plugins/hotpages.c"
msgstr ""

#: ../../../devel/tcg-plugins.rst:187
msgid "Similar to hotblocks but this time tracks memory accesses::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:189
msgid ""
"./aarch64-linux-user/qemu-aarch64 \\\n"
"  -plugin contrib/plugins/libhotpages.so -d plugin \\\n"
"  ./tests/tcg/aarch64-linux-user/sha1\n"
"SHA1=15dd99a1991e0b3826fede3deffc1feba42278e6\n"
"Addr, RCPUs, Reads, WCPUs, Writes\n"
"0x000055007fe000, 0x0001, 31747952, 0x0001, 8835161\n"
"0x000055007ff000, 0x0001, 29001054, 0x0001, 8780625\n"
"0x00005500800000, 0x0001, 687465, 0x0001, 335857\n"
"0x0000000048b000, 0x0001, 130594, 0x0001, 355\n"
"0x0000000048a000, 0x0001, 1826, 0x0001, 11"
msgstr ""

#: ../../../devel/tcg-plugins.rst:200
msgid "The hotpages plugin can be configured using the following arguments:"
msgstr ""

#: ../../../devel/tcg-plugins.rst:202
msgid "sortby=reads|writes|address"
msgstr ""

#: ../../../devel/tcg-plugins.rst:204
msgid ""
"Log the data sorted by either the number of reads, the number of writes, or "
"memory address. (Default: entries are sorted by the sum of reads and writes)"
msgstr ""

#: ../../../devel/tcg-plugins.rst:207
msgid "io=on"
msgstr ""

#: ../../../devel/tcg-plugins.rst:209
msgid ""
"Track IO addresses. Only relevant to full system emulation. (Default: off)"
msgstr ""

#: ../../../devel/tcg-plugins.rst:211
msgid "pagesize=N"
msgstr ""

#: ../../../devel/tcg-plugins.rst:213
msgid "The page size used. (Default: N = 4096)"
msgstr ""

#: ../../../devel/tcg-plugins.rst:215
msgid "contrib/plugins/howvec.c"
msgstr ""

#: ../../../devel/tcg-plugins.rst:217
msgid ""
"This is an instruction classifier so can be used to count different types of "
"instructions. It has a number of options to refine which get counted. You "
"can give a value to the ``count`` argument for a class of instructions to "
"break it down fully, so for example to see all the system registers "
"accesses::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:223
msgid ""
"./aarch64-softmmu/qemu-system-aarch64 $(QEMU_ARGS) \\\n"
"  -append \"root=/dev/sda2 systemd.unit=benchmark.service\" \\\n"
"  -smp 4 -plugin ./contrib/plugins/libhowvec.so,count=sreg -d plugin"
msgstr ""

#: ../../../devel/tcg-plugins.rst:227
msgid "which will lead to a sorted list after the class breakdown::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:229
msgid ""
"Instruction Classes:\n"
"Class:   UDEF                   not counted\n"
"Class:   SVE                    (68 hits)\n"
"Class:   PCrel addr             (47789483 hits)\n"
"Class:   Add/Sub (imm)          (192817388 hits)\n"
"Class:   Logical (imm)          (93852565 hits)\n"
"Class:   Move Wide (imm)        (76398116 hits)\n"
"Class:   Bitfield               (44706084 hits)\n"
"Class:   Extract                (5499257 hits)\n"
"Class:   Cond Branch (imm)      (147202932 hits)\n"
"Class:   Exception Gen          (193581 hits)\n"
"Class:     NOP                  not counted\n"
"Class:   Hints                  (6652291 hits)\n"
"Class:   Barriers               (8001661 hits)\n"
"Class:   PSTATE                 (1801695 hits)\n"
"Class:   System Insn            (6385349 hits)\n"
"Class:   System Reg             counted individually\n"
"Class:   Branch (reg)           (69497127 hits)\n"
"Class:   Branch (imm)           (84393665 hits)\n"
"Class:   Cmp & Branch           (110929659 hits)\n"
"Class:   Tst & Branch           (44681442 hits)\n"
"Class:   AdvSimd ldstmult       (736 hits)\n"
"Class:   ldst excl              (9098783 hits)\n"
"Class:   Load Reg (lit)         (87189424 hits)\n"
"Class:   ldst noalloc pair      (3264433 hits)\n"
"Class:   ldst pair              (412526434 hits)\n"
"Class:   ldst reg (imm)         (314734576 hits)\n"
"Class: Loads & Stores           (2117774 hits)\n"
"Class: Data Proc Reg            (223519077 hits)\n"
"Class: Scalar FP                (31657954 hits)\n"
"Individual Instructions:\n"
"Instr: mrs x0, sp_el0           (2682661 hits)  (op=0xd5384100/  System "
"Reg)\n"
"Instr: mrs x1, tpidr_el2        (1789339 hits)  (op=0xd53cd041/  System "
"Reg)\n"
"Instr: mrs x2, tpidr_el2        (1513494 hits)  (op=0xd53cd042/  System "
"Reg)\n"
"Instr: mrs x0, tpidr_el2        (1490823 hits)  (op=0xd53cd040/  System "
"Reg)\n"
"Instr: mrs x1, sp_el0           (933793 hits)   (op=0xd5384101/  System "
"Reg)\n"
"Instr: mrs x2, sp_el0           (699516 hits)   (op=0xd5384102/  System "
"Reg)\n"
"Instr: mrs x4, tpidr_el2        (528437 hits)   (op=0xd53cd044/  System "
"Reg)\n"
"Instr: mrs x30, ttbr1_el1       (480776 hits)   (op=0xd538203e/  System "
"Reg)\n"
"Instr: msr ttbr1_el1, x30       (480713 hits)   (op=0xd518203e/  System "
"Reg)\n"
"Instr: msr vbar_el1, x30        (480671 hits)   (op=0xd518c01e/  System "
"Reg)\n"
"..."
msgstr ""

#: ../../../devel/tcg-plugins.rst:272
msgid ""
"To find the argument shorthand for the class you need to examine the source "
"code of the plugin at the moment, specifically the ``*opt`` argument in the "
"InsnClassExecCount tables."
msgstr ""

#: ../../../devel/tcg-plugins.rst:276
msgid "contrib/plugins/lockstep.c"
msgstr ""

#: ../../../devel/tcg-plugins.rst:278
msgid ""
"This is a debugging tool for developers who want to find out when and where "
"execution diverges after a subtle change to TCG code generation. It is not "
"an exact science and results are likely to be mixed once asynchronous events "
"are introduced. While the use of -icount can introduce determinism to the "
"execution flow it doesn't always follow the translation sequence will be "
"exactly the same. Typically this is caused by a timer firing to service the "
"GUI causing a block to end early. However in some cases it has proved to be "
"useful in pointing people at roughly where execution diverges. The only "
"argument you need for the plugin is a path for the socket the two instances "
"will communicate over::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:291
msgid ""
"./sparc-softmmu/qemu-system-sparc -monitor none -parallel none \\\n"
"  -net none -M SS-20 -m 256 -kernel day11/zImage.elf \\\n"
"  -plugin ./contrib/plugins/liblockstep.so,sockpath=lockstep-sparc.sock \\\n"
"-d plugin,nochain"
msgstr ""

#: ../../../devel/tcg-plugins.rst:296
msgid "which will eventually report::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:298
msgid ""
"qemu-system-sparc: warning: nic lance.0 has no peer\n"
"@ 0x000000ffd06678 vs 0x000000ffd001e0 (2/1 since last)\n"
"@ 0x000000ffd07d9c vs 0x000000ffd06678 (3/1 since last)\n"
"Δ insn_count @ 0x000000ffd07d9c (809900609) vs 0x000000ffd06678 (809900612)\n"
"  previously @ 0x000000ffd06678/10 (809900609 insns)\n"
"  previously @ 0x000000ffd001e0/4 (809900599 insns)\n"
"  previously @ 0x000000ffd080ac/2 (809900595 insns)\n"
"  previously @ 0x000000ffd08098/5 (809900593 insns)\n"
"  previously @ 0x000000ffd080c0/1 (809900588 insns)"
msgstr ""

#: ../../../devel/tcg-plugins.rst:308
msgid "contrib/plugins/hwprofile.c"
msgstr ""

#: ../../../devel/tcg-plugins.rst:310
msgid ""
"The hwprofile tool can only be used with system emulation and allows the "
"user to see what hardware is accessed how often. It has a number of options:"
msgstr ""

#: ../../../devel/tcg-plugins.rst:313
msgid "track=read or track=write"
msgstr ""

#: ../../../devel/tcg-plugins.rst:315
msgid ""
"By default the plugin tracks both reads and writes. You can use one of these "
"options to limit the tracking to just one class of accesses."
msgstr ""

#: ../../../devel/tcg-plugins.rst:318
msgid "source"
msgstr ""

#: ../../../devel/tcg-plugins.rst:320
msgid ""
"Will include a detailed break down of what the guest PC that made the access "
"was. Not compatible with the pattern option. Example output::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:323
msgid ""
"cirrus-low-memory @ 0xfffffd00000a0000\n"
" pc:fffffc0000005cdc, 1, 256\n"
" pc:fffffc0000005ce8, 1, 256\n"
" pc:fffffc0000005cec, 1, 256"
msgstr ""

#: ../../../devel/tcg-plugins.rst:328
msgid "pattern"
msgstr ""

#: ../../../devel/tcg-plugins.rst:330
msgid ""
"Instead break down the accesses based on the offset into the HW region. This "
"can be useful for seeing the most used registers of a device. Example "
"output::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:334
msgid ""
"pci0-conf @ 0xfffffd01fe000000\n"
"  off:00000004, 1, 1\n"
"  off:00000010, 1, 3\n"
"  off:00000014, 1, 3\n"
"  off:00000018, 1, 2\n"
"  off:0000001c, 1, 2\n"
"  off:00000020, 1, 2\n"
"  ..."
msgstr ""

#: ../../../devel/tcg-plugins.rst:343
msgid "contrib/plugins/execlog.c"
msgstr ""

#: ../../../devel/tcg-plugins.rst:345
msgid ""
"The execlog tool traces executed instructions with memory access. It can be "
"used for debugging and security analysis purposes. Please be aware that this "
"will generate a lot of output."
msgstr ""

#: ../../../devel/tcg-plugins.rst:349
msgid "The plugin takes no argument::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:351
msgid ""
"qemu-system-arm $(QEMU_ARGS) \\\n"
"  -plugin ./contrib/plugins/libexeclog.so -d plugin"
msgstr ""

#: ../../../devel/tcg-plugins.rst:354
msgid "which will output an execution trace following this structure::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:356
msgid ""
"# vCPU, vAddr, opcode, disassembly[, load/store, memory addr, device]...\n"
"0, 0xa12, 0xf8012400, \"movs r4, #0\"\n"
"0, 0xa14, 0xf87f42b4, \"cmp r4, r6\"\n"
"0, 0xa16, 0xd206, \"bhs #0xa26\"\n"
"0, 0xa18, 0xfff94803, \"ldr r0, [pc, #0xc]\", load, 0x00010a28, RAM\n"
"0, 0xa1a, 0xf989f000, \"bl #0xd30\"\n"
"0, 0xd30, 0xfff9b510, \"push {r4, lr}\", store, 0x20003ee0, RAM, store, "
"0x20003ee4, RAM\n"
"0, 0xd32, 0xf9893014, \"adds r0, #0x14\"\n"
"0, 0xd34, 0xf9c8f000, \"bl #0x10c8\"\n"
"0, 0x10c8, 0xfff96c43, \"ldr r3, [r0, #0x44]\", load, 0x200000e4, RAM"
msgstr ""

#: ../../../devel/tcg-plugins.rst:367
msgid "contrib/plugins/cache.c"
msgstr ""

#: ../../../devel/tcg-plugins.rst:369
msgid ""
"Cache modelling plugin that measures the performance of a given L1 cache "
"configuration, and optionally a unified L2 per-core cache when a given "
"working set is run::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:373
msgid ""
"qemu-x86_64 -plugin ./contrib/plugins/libcache.so \\\n"
"  -d plugin -D cache.log ./tests/tcg/x86_64-linux-user/float_convs"
msgstr ""

#: ../../../devel/tcg-plugins.rst:376
msgid "will report the following::"
msgstr ""

#: ../../../devel/tcg-plugins.rst:378
msgid ""
"core #, data accesses, data misses, dmiss rate, insn accesses, insn misses, "
"imiss rate\n"
"0       996695         508             0.0510%  2642799        "
"18617           0.7044%\n"
"\n"
"address, data misses, instruction\n"
"0x424f1e (_int_malloc), 109, movq %rax, 8(%rcx)\n"
"0x41f395 (_IO_default_xsputn), 49, movb %dl, (%rdi, %rax)\n"
"0x42584d (ptmalloc_init.part.0), 33, movaps %xmm0, (%rax)\n"
"0x454d48 (__tunables_init), 20, cmpb $0, (%r8)\n"
"...\n"
"\n"
"address, fetch misses, instruction\n"
"0x4160a0 (__vfprintf_internal), 744, movl $1, %ebx\n"
"0x41f0a0 (_IO_setb), 744, endbr64\n"
"0x415882 (__vfprintf_internal), 744, movq %r12, %rdi\n"
"0x4268a0 (__malloc), 696, andq $0xfffffffffffffff0, %rax\n"
"..."
msgstr ""

#: ../../../devel/tcg-plugins.rst:395
msgid "The plugin has a number of arguments, all of them are optional:"
msgstr ""

#: ../../../devel/tcg-plugins.rst:397
msgid "limit=N"
msgstr ""

#: ../../../devel/tcg-plugins.rst:399
msgid ""
"Print top N icache and dcache thrashing instructions along with their "
"address, number of misses, and its disassembly. (default: 32)"
msgstr ""

#: ../../../devel/tcg-plugins.rst:402
msgid "icachesize=N"
msgstr ""

#: ../../../devel/tcg-plugins.rst:403
msgid "iblksize=B"
msgstr ""

#: ../../../devel/tcg-plugins.rst:404
msgid "iassoc=A"
msgstr ""

#: ../../../devel/tcg-plugins.rst:406
msgid ""
"Instruction cache configuration arguments. They specify the cache size, "
"block size, and associativity of the instruction cache, respectively. "
"(default: N = 16384, B = 64, A = 8)"
msgstr ""

#: ../../../devel/tcg-plugins.rst:410
msgid "dcachesize=N"
msgstr ""

#: ../../../devel/tcg-plugins.rst:411
msgid "dblksize=B"
msgstr ""

#: ../../../devel/tcg-plugins.rst:412
msgid "dassoc=A"
msgstr ""

#: ../../../devel/tcg-plugins.rst:414
msgid ""
"Data cache configuration arguments. They specify the cache size, block size, "
"and associativity of the data cache, respectively. (default: N = 16384, B = "
"64, A = 8)"
msgstr ""

#: ../../../devel/tcg-plugins.rst:418
msgid "evict=POLICY"
msgstr ""

#: ../../../devel/tcg-plugins.rst:420
msgid ""
"Sets the eviction policy to POLICY. Available policies are: :code:`lru`, :"
"code:`fifo`, and :code:`rand`. The plugin will use the specified policy for "
"both instruction and data caches. (default: POLICY = :code:`lru`)"
msgstr ""

#: ../../../devel/tcg-plugins.rst:424
msgid "cores=N"
msgstr ""

#: ../../../devel/tcg-plugins.rst:426
msgid ""
"Sets the number of cores for which we maintain separate icache and dcache. "
"(default: for linux-user, N = 1, for full system emulation: N = cores "
"available to guest)"
msgstr ""

#: ../../../devel/tcg-plugins.rst:430
msgid "l2=on"
msgstr ""

#: ../../../devel/tcg-plugins.rst:432
msgid ""
"Simulates a unified L2 cache (stores blocks for both instructions and data) "
"using the default L2 configuration (cache size = 2MB, associativity = 16-"
"way, block size = 64B)."
msgstr ""

#: ../../../devel/tcg-plugins.rst:436
msgid "l2cachesize=N"
msgstr ""

#: ../../../devel/tcg-plugins.rst:437
msgid "l2blksize=B"
msgstr ""

#: ../../../devel/tcg-plugins.rst:438
msgid "l2assoc=A"
msgstr ""

#: ../../../devel/tcg-plugins.rst:440
msgid ""
"L2 cache configuration arguments. They specify the cache size, block size, "
"and associativity of the L2 cache, respectively. Setting any of the L2 "
"configuration arguments implies ``l2=on``. (default: N = 2097152 (2MB), B = "
"64, A = 16)"
msgstr ""
