# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 9.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 10:00+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../devel/bitops.rst:3
msgid "Bitwise operations"
msgstr ""

#: ../../../devel/bitops.rst:5
msgid ""
"The header ``qemu/bitops.h`` provides utility functions for performing "
"bitwise operations."
msgstr ""

#: ../../../../include/qemu/bitops.h:32
msgid "Set a bit in memory"
msgstr ""

#: ../../../../include/qemu/bitops.h:34 ../../../../include/qemu/bitops.h:47
#: ../../../../include/qemu/bitops.h:60 ../../../../include/qemu/bitops.h:73
#: ../../../../include/qemu/bitops.h:86 ../../../../include/qemu/bitops.h:99
#: ../../../../include/qemu/bitops.h:114 ../../../../include/qemu/bitops.h:129
#: ../../../../include/qemu/bitops.h:144 ../../../../include/qemu/bitops.h:154
#: ../../../../include/qemu/bitops.h:165 ../../../../include/qemu/bitops.h:178
#: ../../../../include/qemu/bitops.h:192 ../../../../include/qemu/bitops.h:216
#: ../../../../include/qemu/bitops.h:230 ../../../../include/qemu/bitops.h:240
#: ../../../../include/qemu/bitops.h:250 ../../../../include/qemu/bitops.h:260
#: ../../../../include/qemu/bitops.h:270 ../../../../include/qemu/bitops.h:280
#: ../../../../include/qemu/bitops.h:290 ../../../../include/qemu/bitops.h:300
#: ../../../../include/qemu/bitops.h:310 ../../../../include/qemu/bitops.h:319
#: ../../../../include/qemu/bitops.h:330 ../../../../include/qemu/bitops.h:338
#: ../../../../include/qemu/bitops.h:357 ../../../../include/qemu/bitops.h:376
#: ../../../../include/qemu/bitops.h:395 ../../../../include/qemu/bitops.h:414
#: ../../../../include/qemu/bitops.h:439 ../../../../include/qemu/bitops.h:464
#: ../../../../include/qemu/bitops.h:490 ../../../../include/qemu/bitops.h:516
#: ../../../../include/qemu/bitops.h:545 ../../../../include/qemu/bitops.h:575
#: ../../../../include/qemu/bitops.h:605
msgid "**Parameters**"
msgstr ""

#: ../../../../include/qemu/bitops.h:36 ../../../../include/qemu/bitops.h:49
#: ../../../../include/qemu/bitops.h:62 ../../../../include/qemu/bitops.h:75
#: ../../../../include/qemu/bitops.h:88 ../../../../include/qemu/bitops.h:101
#: ../../../../include/qemu/bitops.h:116 ../../../../include/qemu/bitops.h:131
#: ../../../../include/qemu/bitops.h:146
msgid "``long nr``"
msgstr ""

#: ../../../../include/qemu/bitops.h:33 ../../../../include/qemu/bitops.h:46
msgid "the bit to set"
msgstr ""

#: ../../../../include/qemu/bitops.h:35 ../../../../include/qemu/bitops.h:48
#: ../../../../include/qemu/bitops.h:61 ../../../../include/qemu/bitops.h:74
#: ../../../../include/qemu/bitops.h:87 ../../../../include/qemu/bitops.h:100
#: ../../../../include/qemu/bitops.h:115 ../../../../include/qemu/bitops.h:130
msgid "``unsigned long *addr``"
msgstr ""

#: ../../../../include/qemu/bitops.h:34 ../../../../include/qemu/bitops.h:47
msgid "the address to start counting from"
msgstr ""

#: ../../../../include/qemu/bitops.h:45
msgid "Set a bit in memory atomically"
msgstr ""

#: ../../../../include/qemu/bitops.h:58
msgid "Clears a bit in memory"
msgstr ""

#: ../../../../include/qemu/bitops.h:59 ../../../../include/qemu/bitops.h:72
#: ../../../../include/qemu/bitops.h:113
msgid "Bit to clear"
msgstr ""

#: ../../../../include/qemu/bitops.h:60 ../../../../include/qemu/bitops.h:73
#: ../../../../include/qemu/bitops.h:86 ../../../../include/qemu/bitops.h:144
msgid "Address to start counting from"
msgstr ""

#: ../../../../include/qemu/bitops.h:71
msgid "Clears a bit in memory atomically"
msgstr ""

#: ../../../../include/qemu/bitops.h:84
msgid "Toggle a bit in memory"
msgstr ""

#: ../../../../include/qemu/bitops.h:85 ../../../../include/qemu/bitops.h:128
msgid "Bit to change"
msgstr ""

#: ../../../../include/qemu/bitops.h:97
msgid "Set a bit and return its old value"
msgstr ""

#: ../../../../include/qemu/bitops.h:98
msgid "Bit to set"
msgstr ""

#: ../../../../include/qemu/bitops.h:99 ../../../../include/qemu/bitops.h:114
#: ../../../../include/qemu/bitops.h:129
msgid "Address to count from"
msgstr ""

#: ../../../../include/qemu/bitops.h:112
msgid "Clear a bit and return its old value"
msgstr ""

#: ../../../../include/qemu/bitops.h:127
msgid "Change a bit and return its old value"
msgstr ""

#: ../../../../include/qemu/bitops.h:142
msgid "Determine whether a bit is set"
msgstr ""

#: ../../../../include/qemu/bitops.h:143
msgid "bit number to test"
msgstr ""

#: ../../../../include/qemu/bitops.h:145 ../../../../include/qemu/bitops.h:156
#: ../../../../include/qemu/bitops.h:167 ../../../../include/qemu/bitops.h:180
#: ../../../../include/qemu/bitops.h:194 ../../../../include/qemu/bitops.h:218
msgid "``const unsigned long *addr``"
msgstr ""

#: ../../../../include/qemu/bitops.h:152
msgid "find the last set bit in a memory region"
msgstr ""

#: ../../../../include/qemu/bitops.h:153 ../../../../include/qemu/bitops.h:191
#: ../../../../include/qemu/bitops.h:215
msgid "The address to start the search at"
msgstr ""

#: ../../../../include/qemu/bitops.h:155 ../../../../include/qemu/bitops.h:166
#: ../../../../include/qemu/bitops.h:179 ../../../../include/qemu/bitops.h:193
#: ../../../../include/qemu/bitops.h:217
msgid "``unsigned long size``"
msgstr ""

#: ../../../../include/qemu/bitops.h:154 ../../../../include/qemu/bitops.h:192
#: ../../../../include/qemu/bitops.h:216
msgid "The maximum size to search"
msgstr ""

#: ../../../../include/qemu/bitops.h:156 ../../../../include/qemu/bitops.h:167
#: ../../../../include/qemu/bitops.h:180 ../../../../include/qemu/bitops.h:194
#: ../../../../include/qemu/bitops.h:218 ../../../../include/qemu/bitops.h:342
#: ../../../../include/qemu/bitops.h:361 ../../../../include/qemu/bitops.h:380
#: ../../../../include/qemu/bitops.h:399 ../../../../include/qemu/bitops.h:418
#: ../../../../include/qemu/bitops.h:443 ../../../../include/qemu/bitops.h:469
#: ../../../../include/qemu/bitops.h:495 ../../../../include/qemu/bitops.h:518
#: ../../../../include/qemu/bitops.h:547 ../../../../include/qemu/bitops.h:577
#: ../../../../include/qemu/bitops.h:607
msgid "**Description**"
msgstr ""

#: ../../../../include/qemu/bitops.h:156
msgid ""
"Returns the bit number of the last set bit, or **size** if there is no set "
"bit in the bitmap."
msgstr ""

#: ../../../../include/qemu/bitops.h:163
msgid "find the next set bit in a memory region"
msgstr ""

#: ../../../../include/qemu/bitops.h:164 ../../../../include/qemu/bitops.h:177
msgid "The address to base the search on"
msgstr ""

#: ../../../../include/qemu/bitops.h:166 ../../../../include/qemu/bitops.h:179
msgid "The bitmap size in bits"
msgstr ""

#: ../../../../include/qemu/bitops.h:168 ../../../../include/qemu/bitops.h:181
msgid "``unsigned long offset``"
msgstr ""

#: ../../../../include/qemu/bitops.h:165 ../../../../include/qemu/bitops.h:178
msgid "The bitnumber to start searching at"
msgstr ""

#: ../../../../include/qemu/bitops.h:168
msgid ""
"Returns the bit number of the next set bit, or **size** if there are no "
"further set bits in the bitmap."
msgstr ""

#: ../../../../include/qemu/bitops.h:176
msgid "find the next cleared bit in a memory region"
msgstr ""

#: ../../../../include/qemu/bitops.h:181
msgid ""
"Returns the bit number of the next cleared bit, or **size** if there are no "
"further clear bits in the bitmap."
msgstr ""

#: ../../../../include/qemu/bitops.h:190
msgid "find the first set bit in a memory region"
msgstr ""

#: ../../../../include/qemu/bitops.h:194
msgid ""
"Returns the bit number of the first set bit, or **size** if there is no set "
"bit in the bitmap."
msgstr ""

#: ../../../../include/qemu/bitops.h:214
msgid "find the first cleared bit in a memory region"
msgstr ""

#: ../../../../include/qemu/bitops.h:218
msgid ""
"Returns the bit number of the first cleared bit, or **size** if there is no "
"clear bit in the bitmap."
msgstr ""

#: ../../../../include/qemu/bitops.h:228
msgid "rotate an 8-bit value left"
msgstr ""

#: ../../../../include/qemu/bitops.h:232 ../../../../include/qemu/bitops.h:242
msgid "``uint8_t word``"
msgstr ""

#: ../../../../include/qemu/bitops.h:229 ../../../../include/qemu/bitops.h:239
#: ../../../../include/qemu/bitops.h:249 ../../../../include/qemu/bitops.h:259
#: ../../../../include/qemu/bitops.h:269 ../../../../include/qemu/bitops.h:279
#: ../../../../include/qemu/bitops.h:289 ../../../../include/qemu/bitops.h:299
msgid "value to rotate"
msgstr ""

#: ../../../../include/qemu/bitops.h:231 ../../../../include/qemu/bitops.h:241
#: ../../../../include/qemu/bitops.h:251 ../../../../include/qemu/bitops.h:261
#: ../../../../include/qemu/bitops.h:271 ../../../../include/qemu/bitops.h:281
#: ../../../../include/qemu/bitops.h:291 ../../../../include/qemu/bitops.h:301
msgid "``unsigned int shift``"
msgstr ""

#: ../../../../include/qemu/bitops.h:230 ../../../../include/qemu/bitops.h:240
#: ../../../../include/qemu/bitops.h:250 ../../../../include/qemu/bitops.h:260
#: ../../../../include/qemu/bitops.h:270 ../../../../include/qemu/bitops.h:280
#: ../../../../include/qemu/bitops.h:290 ../../../../include/qemu/bitops.h:300
msgid "bits to roll"
msgstr ""

#: ../../../../include/qemu/bitops.h:238
msgid "rotate an 8-bit value right"
msgstr ""

#: ../../../../include/qemu/bitops.h:248
msgid "rotate a 16-bit value left"
msgstr ""

#: ../../../../include/qemu/bitops.h:252 ../../../../include/qemu/bitops.h:262
msgid "``uint16_t word``"
msgstr ""

#: ../../../../include/qemu/bitops.h:258
msgid "rotate a 16-bit value right"
msgstr ""

#: ../../../../include/qemu/bitops.h:268
msgid "rotate a 32-bit value left"
msgstr ""

#: ../../../../include/qemu/bitops.h:272 ../../../../include/qemu/bitops.h:282
msgid "``uint32_t word``"
msgstr ""

#: ../../../../include/qemu/bitops.h:278
msgid "rotate a 32-bit value right"
msgstr ""

#: ../../../../include/qemu/bitops.h:288
msgid "rotate a 64-bit value left"
msgstr ""

#: ../../../../include/qemu/bitops.h:292 ../../../../include/qemu/bitops.h:302
msgid "``uint64_t word``"
msgstr ""

#: ../../../../include/qemu/bitops.h:298
msgid "rotate a 64-bit value right"
msgstr ""

#: ../../../../include/qemu/bitops.h:308
msgid "swap 16-bit halfwords within a 32-bit value"
msgstr ""

#: ../../../../include/qemu/bitops.h:312
msgid "``uint32_t h``"
msgstr ""

#: ../../../../include/qemu/bitops.h:309 ../../../../include/qemu/bitops.h:318
#: ../../../../include/qemu/bitops.h:329
msgid "value to swap"
msgstr ""

#: ../../../../include/qemu/bitops.h:317
msgid "swap 16-bit halfwords within a 64-bit value"
msgstr ""

#: ../../../../include/qemu/bitops.h:321 ../../../../include/qemu/bitops.h:332
msgid "``uint64_t h``"
msgstr ""

#: ../../../../include/qemu/bitops.h:328
msgid "swap 32-bit words within a 64-bit value"
msgstr ""

#: ../../../../include/qemu/bitops.h:340 ../../../../include/qemu/bitops.h:416
#: ../../../../include/qemu/bitops.h:466
msgid "``uint32_t value``"
msgstr ""

#: ../../../../include/qemu/bitops.h:338 ../../../../include/qemu/bitops.h:357
#: ../../../../include/qemu/bitops.h:376 ../../../../include/qemu/bitops.h:395
#: ../../../../include/qemu/bitops.h:414 ../../../../include/qemu/bitops.h:439
msgid "the value to extract the bit field from"
msgstr ""

#: ../../../../include/qemu/bitops.h:340 ../../../../include/qemu/bitops.h:359
#: ../../../../include/qemu/bitops.h:378 ../../../../include/qemu/bitops.h:397
#: ../../../../include/qemu/bitops.h:416 ../../../../include/qemu/bitops.h:441
#: ../../../../include/qemu/bitops.h:466 ../../../../include/qemu/bitops.h:492
msgid "``int start``"
msgstr ""

#: ../../../../include/qemu/bitops.h:339 ../../../../include/qemu/bitops.h:358
#: ../../../../include/qemu/bitops.h:377 ../../../../include/qemu/bitops.h:396
#: ../../../../include/qemu/bitops.h:415 ../../../../include/qemu/bitops.h:440
#: ../../../../include/qemu/bitops.h:465 ../../../../include/qemu/bitops.h:491
msgid "the lowest bit in the bit field (numbered from 0)"
msgstr ""

#: ../../../../include/qemu/bitops.h:341 ../../../../include/qemu/bitops.h:360
#: ../../../../include/qemu/bitops.h:379 ../../../../include/qemu/bitops.h:398
#: ../../../../include/qemu/bitops.h:417 ../../../../include/qemu/bitops.h:442
#: ../../../../include/qemu/bitops.h:467 ../../../../include/qemu/bitops.h:493
msgid "``int length``"
msgstr ""

#: ../../../../include/qemu/bitops.h:340 ../../../../include/qemu/bitops.h:359
#: ../../../../include/qemu/bitops.h:378 ../../../../include/qemu/bitops.h:397
#: ../../../../include/qemu/bitops.h:416 ../../../../include/qemu/bitops.h:441
#: ../../../../include/qemu/bitops.h:466 ../../../../include/qemu/bitops.h:492
msgid "the length of the bit field"
msgstr ""

#: ../../../../include/qemu/bitops.h:342
msgid ""
"Extract from the 32 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it. The bit field must lie "
"entirely within the 32 bit word. It is valid to request that all 32 bits are "
"returned (ie **length** 32 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:347 ../../../../include/qemu/bitops.h:366
#: ../../../../include/qemu/bitops.h:385 ../../../../include/qemu/bitops.h:404
#: ../../../../include/qemu/bitops.h:425 ../../../../include/qemu/bitops.h:450
#: ../../../../include/qemu/bitops.h:477 ../../../../include/qemu/bitops.h:503
#: ../../../../include/qemu/bitops.h:529 ../../../../include/qemu/bitops.h:558
#: ../../../../include/qemu/bitops.h:588 ../../../../include/qemu/bitops.h:618
msgid "**Return**"
msgstr ""

#: ../../../../include/qemu/bitops.h:347 ../../../../include/qemu/bitops.h:366
#: ../../../../include/qemu/bitops.h:385 ../../../../include/qemu/bitops.h:404
msgid "the value of the bit field extracted from the input value."
msgstr ""

#: ../../../../include/qemu/bitops.h:359
msgid "``uint8_t value``"
msgstr ""

#: ../../../../include/qemu/bitops.h:361
msgid ""
"Extract from the 8 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it. The bit field must lie "
"entirely within the 8 bit word. It is valid to request that all 8 bits are "
"returned (ie **length** 8 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:378
msgid "``uint16_t value``"
msgstr ""

#: ../../../../include/qemu/bitops.h:380
msgid ""
"Extract from the 16 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it. The bit field must lie "
"entirely within the 16 bit word. It is valid to request that all 16 bits are "
"returned (ie **length** 16 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:397 ../../../../include/qemu/bitops.h:441
#: ../../../../include/qemu/bitops.h:492
msgid "``uint64_t value``"
msgstr ""

#: ../../../../include/qemu/bitops.h:399
msgid ""
"Extract from the 64 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it. The bit field must lie "
"entirely within the 64 bit word. It is valid to request that all 64 bits are "
"returned (ie **length** 64 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:418
msgid ""
"Extract from the 32 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it, sign extended to an "
"int32_t (ie with the most significant bit of the field propagated to all the "
"upper bits of the return value). The bit field must lie entirely within the "
"32 bit word. It is valid to request that all 32 bits are returned (ie "
"**length** 32 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:425 ../../../../include/qemu/bitops.h:450
msgid ""
"the sign extended value of the bit field extracted from the input value."
msgstr ""

#: ../../../../include/qemu/bitops.h:443
msgid ""
"Extract from the 64 bit input **value** the bit field specified by the "
"**start** and **length** parameters, and return it, sign extended to an "
"int64_t (ie with the most significant bit of the field propagated to all the "
"upper bits of the return value). The bit field must lie entirely within the "
"64 bit word. It is valid to request that all 64 bits are returned (ie "
"**length** 64 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:464 ../../../../include/qemu/bitops.h:490
msgid "initial value to insert bit field into"
msgstr ""

#: ../../../../include/qemu/bitops.h:468
msgid "``uint32_t fieldval``"
msgstr ""

#: ../../../../include/qemu/bitops.h:467 ../../../../include/qemu/bitops.h:493
msgid "the value to insert into the bit field"
msgstr ""

#: ../../../../include/qemu/bitops.h:469
msgid ""
"Deposit **fieldval** into the 32 bit **value** at the bit field specified by "
"the **start** and **length** parameters, and return the modified **value**. "
"Bits of **value** outside the bit field are not modified. Bits of "
"**fieldval** above the least significant **length** bits are ignored. The "
"bit field must lie entirely within the 32 bit word. It is valid to request "
"that all 32 bits are modified (ie **length** 32 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:477 ../../../../include/qemu/bitops.h:503
msgid "the modified **value**."
msgstr ""

#: ../../../../include/qemu/bitops.h:494
msgid "``uint64_t fieldval``"
msgstr ""

#: ../../../../include/qemu/bitops.h:495
msgid ""
"Deposit **fieldval** into the 64 bit **value** at the bit field specified by "
"the **start** and **length** parameters, and return the modified **value**. "
"Bits of **value** outside the bit field are not modified. Bits of "
"**fieldval** above the least significant **length** bits are ignored. The "
"bit field must lie entirely within the 64 bit word. It is valid to request "
"that all 64 bits are modified (ie **length** 64 and **start** 0)."
msgstr ""

#: ../../../../include/qemu/bitops.h:518 ../../../../include/qemu/bitops.h:577
msgid "``uint32_t x``"
msgstr ""

#: ../../../../include/qemu/bitops.h:516
msgid "32-bit value (of which only the bottom 16 bits are of interest)"
msgstr ""

#: ../../../../include/qemu/bitops.h:518 ../../../../include/qemu/bitops.h:547
#: ../../../../include/qemu/bitops.h:577 ../../../../include/qemu/bitops.h:607
msgid "Given an input value::"
msgstr ""

#: ../../../../include/qemu/bitops.h:520
msgid "xxxx xxxx xxxx xxxx ABCD EFGH IJKL MNOP"
msgstr ""

#: ../../../../include/qemu/bitops.h:522
msgid ""
"return the value where the bottom 16 bits are spread out into the odd bits "
"in the word, and the even bits are zeroed::"
msgstr ""

#: ../../../../include/qemu/bitops.h:525
msgid "0A0B 0C0D 0E0F 0G0H 0I0J 0K0L 0M0N 0O0P"
msgstr ""

#: ../../../../include/qemu/bitops.h:527 ../../../../include/qemu/bitops.h:556
msgid "Any bits set in the top half of the input are ignored."
msgstr ""

#: ../../../../include/qemu/bitops.h:529 ../../../../include/qemu/bitops.h:558
msgid "the shuffled bits."
msgstr ""

#: ../../../../include/qemu/bitops.h:547 ../../../../include/qemu/bitops.h:607
msgid "``uint64_t x``"
msgstr ""

#: ../../../../include/qemu/bitops.h:545
msgid "64-bit value (of which only the bottom 32 bits are of interest)"
msgstr ""

#: ../../../../include/qemu/bitops.h:549
msgid "xxxx xxxx xxxx .... xxxx xxxx ABCD EFGH IJKL MNOP QRST UVWX YZab cdef"
msgstr ""

#: ../../../../include/qemu/bitops.h:551
msgid ""
"return the value where the bottom 32 bits are spread out into the odd bits "
"in the word, and the even bits are zeroed::"
msgstr ""

#: ../../../../include/qemu/bitops.h:554
msgid "0A0B 0C0D 0E0F 0G0H 0I0J 0K0L 0M0N .... 0U0V 0W0X 0Y0Z 0a0b 0c0d 0e0f"
msgstr ""

#: ../../../../include/qemu/bitops.h:575
msgid "32-bit value (of which only the odd bits are of interest)"
msgstr ""

#: ../../../../include/qemu/bitops.h:579
msgid "xAxB xCxD xExF xGxH xIxJ xKxL xMxN xOxP"
msgstr ""

#: ../../../../include/qemu/bitops.h:581 ../../../../include/qemu/bitops.h:611
msgid ""
"return the value where all the odd bits are compressed down into the low "
"half of the word, and the high half is zeroed::"
msgstr ""

#: ../../../../include/qemu/bitops.h:584
msgid "0000 0000 0000 0000 ABCD EFGH IJKL MNOP"
msgstr ""

#: ../../../../include/qemu/bitops.h:586 ../../../../include/qemu/bitops.h:616
msgid "Any even bits set in the input are ignored."
msgstr ""

#: ../../../../include/qemu/bitops.h:588 ../../../../include/qemu/bitops.h:618
msgid "the unshuffled bits."
msgstr ""

#: ../../../../include/qemu/bitops.h:605
msgid "64-bit value (of which only the odd bits are of interest)"
msgstr ""

#: ../../../../include/qemu/bitops.h:609
msgid "xAxB xCxD xExF xGxH xIxJ xKxL xMxN .... xUxV xWxX xYxZ xaxb xcxd xexf"
msgstr ""

#: ../../../../include/qemu/bitops.h:614
msgid "0000 0000 0000 .... 0000 0000 ABCD EFGH IJKL MNOP QRST UVWX YZab cdef"
msgstr ""
