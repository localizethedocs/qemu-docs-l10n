# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 10:00+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../system/arm/vmapple.rst:4
msgid "VMApple machine emulation"
msgstr ""

#: ../../../system/arm/vmapple.rst:6
msgid ""
"VMApple is the device model that the macOS built-in hypervisor called "
"\"Virtualization.framework\" exposes to Apple Silicon macOS guests. The "
"\"vmapple\" machine model in QEMU implements the same device model, but does "
"not use any code from Virtualization.Framework."
msgstr ""

#: ../../../system/arm/vmapple.rst:11
msgid "Prerequisites"
msgstr ""

#: ../../../system/arm/vmapple.rst:13
msgid "To run the vmapple machine model, you need to"
msgstr ""

#: ../../../system/arm/vmapple.rst:15
msgid "Run on Apple Silicon"
msgstr ""

#: ../../../system/arm/vmapple.rst:16
msgid "Run on macOS 12.0 or above"
msgstr ""

#: ../../../system/arm/vmapple.rst:17
msgid ""
"Have an already installed copy of a Virtualization.Framework macOS 12 "
"virtual machine. Note that newer versions than 12.x are currently NOT "
"supported on the guest side. I will assume that you installed it using the "
"`macosvm <https://github.com/s-u/macosvm>`__ CLI."
msgstr ""

#: ../../../system/arm/vmapple.rst:22
msgid ""
"First, we need to extract the UUID from the virtual machine that you "
"installed. You can do this by running the shell script in contrib/vmapple/"
"uuid.sh on the macosvm.json file."
msgstr ""

#: ../../../system/arm/vmapple.rst:25
msgid "uuid.sh script to extract the UUID from a macosvm.json file"
msgstr ""

#: ../../../system/arm/vmapple.rst:25
msgid "$ contrib/vmapple/uuid.sh \"path/to/macosvm.json\""
msgstr ""

#: ../../../system/arm/vmapple.rst:30
msgid ""
"Now we also need to trim the aux partition. It contains metadata that we can "
"just discard:"
msgstr ""

#: ../../../system/arm/vmapple.rst:32
msgid "Command to trim the aux file"
msgstr ""

#: ../../../system/arm/vmapple.rst:32
msgid "$ dd if=\"aux.img\" of=\"aux.img.trimmed\" bs=$(( 0x4000 )) skip=1"
msgstr ""

#: ../../../system/arm/vmapple.rst:38
msgid "How to run"
msgstr ""

#: ../../../system/arm/vmapple.rst:40
msgid ""
"Then, we can launch QEMU with the Virtualization.Framework pre-boot "
"environment and the readily installed target disk images. I recommend to "
"port forward the VM's ssh and vnc ports to the host to get better "
"interactive access into the target system:"
msgstr ""

#: ../../../system/arm/vmapple.rst:44
msgid "Example execution command line"
msgstr ""

#: ../../../system/arm/vmapple.rst:44
msgid ""
"$ UUID=\"$(contrib/vmapple/uuid.sh 'macosvm.json')\"\n"
"$ AVPBOOTER=\"/System/Library/Frameworks/Virtualization.framework/Resources/"
"AVPBooter.vmapple2.bin\"\n"
"$ AUX=\"aux.img.trimmed\"\n"
"$ DISK=\"disk.img\"\n"
"$ qemu-system-aarch64 \\\n"
"     -serial mon:stdio \\\n"
"     -m 4G \\\n"
"     -accel hvf \\\n"
"     -M vmapple,uuid=\"$UUID\" \\\n"
"     -bios \"$AVPBOOTER\" \\\n"
"     -drive file=\"$AUX\",if=pflash,format=raw \\\n"
"     -drive file=\"$DISK\",if=pflash,format=raw \\\n"
"     -drive file=\"$AUX\",if=none,id=aux,format=raw \\\n"
"     -drive file=\"$DISK\",if=none,id=root,format=raw \\\n"
"     -device vmapple-virtio-blk-pci,variant=aux,drive=aux \\\n"
"     -device vmapple-virtio-blk-pci,variant=root,drive=root \\\n"
"     -netdev user,id=net0,ipv6=off,hostfwd=tcp::2222-:22,"
"hostfwd=tcp::5901-:5900 \\\n"
"     -device virtio-net-pci,netdev=net0"
msgstr ""
