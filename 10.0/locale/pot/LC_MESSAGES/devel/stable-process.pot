# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 10:00+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../devel/stable-process.rst:4
msgid "QEMU and the stable process"
msgstr ""

#: ../../../devel/stable-process.rst:7
msgid "QEMU stable releases"
msgstr ""

#: ../../../devel/stable-process.rst:9
msgid ""
"QEMU stable releases are based upon the last released QEMU version and "
"marked by an additional version number, e.g. 2.10.1. Occasionally, a four-"
"number version is released, if a single urgent fix needs to go on top."
msgstr ""

#: ../../../devel/stable-process.rst:14
msgid ""
"Usually, stable releases are only provided for the last major QEMU release. "
"For example, when QEMU 2.11.0 is released, 2.11.x or 2.11.x.y stable "
"releases are produced only until QEMU 2.12.0 is released, at which point the "
"stable process moves to producing 2.12.x/2.12.x.y releases."
msgstr ""

#: ../../../devel/stable-process.rst:20
msgid "What should go into a stable release?"
msgstr ""

#: ../../../devel/stable-process.rst:22
msgid "Generally, the following patches are considered stable material:"
msgstr ""

#: ../../../devel/stable-process.rst:24
msgid "Patches that fix severe issues, like fixes for CVEs"
msgstr ""

#: ../../../devel/stable-process.rst:26
msgid "Patches that fix regressions"
msgstr ""

#: ../../../devel/stable-process.rst:28
msgid ""
"If you think the patch would be important for users of the current release "
"(or for a distribution picking fixes), it is usually a good candidate for "
"stable."
msgstr ""

#: ../../../devel/stable-process.rst:34
msgid "How to get a patch into QEMU stable"
msgstr ""

#: ../../../devel/stable-process.rst:36
msgid "There are various ways to get a patch into stable:"
msgstr ""

#: ../../../devel/stable-process.rst:38
msgid ""
"Preferred: Make sure that the stable maintainers are on copy when you send "
"the patch by adding"
msgstr ""

#: ../../../devel/stable-process.rst:41
msgid "Cc: qemu-stable@nongnu.org"
msgstr ""

#: ../../../devel/stable-process.rst:45
msgid ""
"to the patch description. By default, this will send a copy of the patch to "
"``qemu-stable@nongnu.org`` if you use git send-email, which is where patches "
"that are stable candidates are tracked by the maintainers."
msgstr ""

#: ../../../devel/stable-process.rst:49
msgid ""
"You can also reply to a patch and put ``qemu-stable@nongnu.org`` on copy "
"directly in your mail client if you think a previously submitted patch "
"should be considered for a stable release."
msgstr ""

#: ../../../devel/stable-process.rst:53
msgid ""
"If a maintainer judges the patch appropriate for stable later on (or you "
"notify them), they will add the same line to the patch, meaning that the "
"stable maintainers will be on copy on the maintainer's pull request."
msgstr ""

#: ../../../devel/stable-process.rst:57
msgid ""
"If you judge an already merged patch suitable for stable, send a mail "
"(preferably as a reply to the most recent patch submission) to ``qemu-"
"stable@nongnu.org`` along with ``qemu-devel@nongnu.org`` and appropriate "
"other people (like the patch author or the relevant maintainer) on copy."
msgstr ""

#: ../../../devel/stable-process.rst:64
msgid "Stable release process"
msgstr ""

#: ../../../devel/stable-process.rst:66
msgid ""
"When the stable maintainers prepare a new stable release, they will prepare "
"a git branch with a release candidate and send the patches out to ``qemu-"
"devel@nongnu.org`` for review. If any of your patches are included, please "
"verify that they look fine, especially if the maintainer had to tweak the "
"patch as part of back-porting things across branches. You may also nominate "
"other patches that you think are suitable for inclusion. After review is "
"complete (may involve more release candidates), a new stable release is made "
"available."
msgstr ""
