# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 10:00+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../system/devices/net.rst:4
msgid "Network emulation"
msgstr ""

#: ../../../system/devices/net.rst:6
msgid ""
"QEMU can simulate several network cards (e.g. PCI or ISA cards on the PC "
"target) and can connect them to a network backend on the host or an emulated "
"hub. The various host network backends can either be used to connect the NIC "
"of the guest to a real network (e.g. by using a TAP devices or the non-"
"privileged user mode network stack), or to other guest instances running in "
"another QEMU process (e.g. by using the socket host network backend)."
msgstr ""

#: ../../../system/devices/net.rst:15
msgid "Using TAP network interfaces"
msgstr ""

#: ../../../system/devices/net.rst:17
msgid ""
"This is the standard way to connect QEMU to a real network. QEMU adds a "
"virtual network device on your host (called ``tapN``), and you can then "
"configure it as if it was a real ethernet card."
msgstr ""

#: ../../../system/devices/net.rst:22
msgid "Linux host"
msgstr ""

#: ../../../system/devices/net.rst:24
msgid ""
"As an example, you can download the ``linux-test-xxx.tar.gz`` archive and "
"copy the script ``qemu-ifup`` in ``/etc`` and configure properly ``sudo`` so "
"that the command ``ifconfig`` contained in ``qemu-ifup`` can be executed as "
"root. You must verify that your host kernel supports the TAP network "
"interfaces: the device ``/dev/net/tun`` must be present."
msgstr ""

#: ../../../system/devices/net.rst:30
msgid ""
"See :ref:`sec_005finvocation` to have examples of command lines using the "
"TAP network interfaces."
msgstr ""

#: ../../../system/devices/net.rst:34
msgid "Windows host"
msgstr ""

#: ../../../system/devices/net.rst:36
msgid ""
"There is a virtual ethernet driver for Windows 2000/XP systems, called TAP-"
"Win32. But it is not included in standard QEMU for Windows, so you will need "
"to get it separately. It is part of OpenVPN package, so download OpenVPN "
"from : https://openvpn.net/."
msgstr ""

#: ../../../system/devices/net.rst:42
msgid "Using the user mode network stack"
msgstr ""

#: ../../../system/devices/net.rst:44
msgid ""
"By using the option ``-net user`` (default configuration if no ``-net`` "
"option is specified), QEMU uses a completely user mode network stack (you "
"don't need root privilege to use the virtual network). The virtual network "
"configuration is the following::"
msgstr ""

#: ../../../system/devices/net.rst:49
msgid ""
"guest (10.0.2.15)  <------>  Firewall/DHCP server <-----> Internet\n"
"                      |          (10.0.2.2)\n"
"                      |\n"
"                      ---->  DNS server (10.0.2.3)\n"
"                      |\n"
"                      ---->  SMB server (10.0.2.4)"
msgstr ""

#: ../../../system/devices/net.rst:56
msgid ""
"The QEMU VM behaves as if it was behind a firewall which blocks all incoming "
"connections. You can use a DHCP client to automatically configure the "
"network in the QEMU VM. The DHCP server assign addresses to the hosts "
"starting from 10.0.2.15."
msgstr ""

#: ../../../system/devices/net.rst:61
msgid ""
"In order to check that the user mode network is working, you can ping the "
"address 10.0.2.2 and verify that you got an address in the range 10.0.2.x "
"from the QEMU virtual DHCP server."
msgstr ""

#: ../../../system/devices/net.rst:65
msgid ""
"Note that ICMP traffic in general does not work with user mode networking. "
"``ping``, aka. ICMP echo, to the local router (10.0.2.2) shall work, "
"however. If you're using QEMU on Linux >= 3.0, it can use unprivileged ICMP "
"ping sockets to allow ``ping`` to the Internet. The host admin has to set "
"the ping_group_range in order to grant access to those sockets. To allow "
"ping for GID 100 (usually users group)::"
msgstr ""

#: ../../../system/devices/net.rst:72
msgid "echo 100 100 > /proc/sys/net/ipv4/ping_group_range"
msgstr ""

#: ../../../system/devices/net.rst:74
msgid ""
"When using the built-in TFTP server, the router is also the TFTP server."
msgstr ""

#: ../../../system/devices/net.rst:76
msgid ""
"When using the ``'-netdev user,hostfwd=...'`` option, TCP or UDP connections "
"can be redirected from the host to the guest. It allows for example to "
"redirect X11, telnet or SSH connections."
msgstr ""

#: ../../../system/devices/net.rst:81
msgid "Using passt as the user mode network stack"
msgstr ""

#: ../../../system/devices/net.rst:83
msgid ""
"passt_ can be used as a simple replacement for SLIRP (``-net user``). passt "
"doesn't require any capability or privilege. passt has better performance "
"than ``-net user``, full IPv6 support and better security as it's a daemon "
"that is not executed in QEMU context."
msgstr ""

#: ../../../system/devices/net.rst:88
msgid ""
"passt can be connected to QEMU either by using a socket (``-netdev stream``) "
"or using the vhost-user interface (``-netdev vhost-user``). See `passt(1)`_ "
"for more details on passt."
msgstr ""

#: ../../../system/devices/net.rst:96
msgid "To use socket based passt interface:"
msgstr ""

#: ../../../system/devices/net.rst:98
msgid "Start passt as a daemon::"
msgstr ""

#: ../../../system/devices/net.rst:100
msgid "passt --socket ~/passt.socket"
msgstr ""

#: ../../../system/devices/net.rst:102
msgid ""
"If ``--socket`` is not provided, passt will print the path of the UNIX "
"domain socket QEMU can connect to (``/tmp/passt_1.socket``, ``/tmp/passt_2."
"socket``, ...). Then you can connect your QEMU instance to passt:"
msgstr ""

#: ../../../system/devices/net.rst:106
msgid ""
"|qemu_system| [...OPTIONS...] -device virtio-net-pci,netdev=netdev0 -netdev "
"stream,id=netdev0,server=off,addr.type=unix,addr.path=~/passt.socket"
msgstr ""

#: ../../../system/devices/net.rst:108
msgid ""
"Where ``~/passt.socket`` is the UNIX socket created by passt to communicate "
"with QEMU."
msgstr ""

#: ../../../system/devices/net.rst:112
msgid "To use vhost-based interface:"
msgstr ""

#: ../../../system/devices/net.rst:114
msgid "Start passt with ``--vhost-user``::"
msgstr ""

#: ../../../system/devices/net.rst:116
msgid "passt --vhost-user --socket ~/passt.socket"
msgstr ""

#: ../../../system/devices/net.rst:118
msgid "Then to connect QEMU:"
msgstr ""

#: ../../../system/devices/net.rst:121
msgid ""
"|qemu_system| [...OPTIONS...] -m $RAMSIZE -chardev socket,id=chr0,path=~/"
"passt.socket -netdev vhost-user,id=netdev0,chardev=chr0 -device virtio-net,"
"netdev=netdev0 -object memory-backend-memfd,id=memfd0,share=on,size=$RAMSIZE "
"-numa node,memdev=memfd0"
msgstr ""

#: ../../../system/devices/net.rst:123
msgid ""
"Where ``$RAMSIZE`` is the memory size of your VM ``-m`` and ``-object memory-"
"backend-memfd,size=`` must match."
msgstr ""

#: ../../../system/devices/net.rst:126
msgid "Migration of passt:"
msgstr ""

#: ../../../system/devices/net.rst:128
msgid ""
"When passt is connected to QEMU using the vhost-user interface it can be "
"migrated with QEMU and the network connections are not interrupted."
msgstr ""

#: ../../../system/devices/net.rst:131
msgid ""
"As passt runs with no privileges, it relies on passt-repair to save and load "
"the TCP connections state, using the TCP_REPAIR socket option. The passt-"
"repair helper needs to have the CAP_NET_ADMIN capability, or run as root. If "
"passt-repair is not available, TCP connections will not be preserved."
msgstr ""

#: ../../../system/devices/net.rst:136
msgid "Example of migration of a guest on the same host"
msgstr ""

#: ../../../system/devices/net.rst:138
msgid ""
"Before being able to run passt-repair, the CAP_NET_ADMIN capability must be "
"set on the file, run as root::"
msgstr ""

#: ../../../system/devices/net.rst:141
msgid "setcap cap_net_admin+eip ./passt-repair"
msgstr ""

#: ../../../system/devices/net.rst:143
msgid "Start passt for the source side::"
msgstr ""

#: ../../../system/devices/net.rst:145
msgid ""
"passt --vhost-user --socket ~/passt_src.socket --repair-path ~/passt-"
"repair_src.socket"
msgstr ""

#: ../../../system/devices/net.rst:147
msgid ""
"Where ``~/passt-repair_src.socket`` is the UNIX socket created by passt to "
"communicate with passt-repair. The default value is the ``--socket`` path "
"appended with ``.repair``."
msgstr ""

#: ../../../system/devices/net.rst:151 ../../../system/devices/net.rst:164
msgid "Start passt-repair::"
msgstr ""

#: ../../../system/devices/net.rst:153
msgid "passt-repair ~/passt-repair_src.socket"
msgstr ""

#: ../../../system/devices/net.rst:155
msgid ""
"Start source side QEMU with a monitor to be able to send the migrate command:"
msgstr ""

#: ../../../system/devices/net.rst:158
msgid "|qemu_system| [...OPTIONS...] [...VHOST USER OPTIONS...] -monitor stdio"
msgstr ""

#: ../../../system/devices/net.rst:160
msgid "Start passt for the destination side::"
msgstr ""

#: ../../../system/devices/net.rst:162
msgid ""
"passt --vhost-user --socket ~/passt_dst.socket --repair-path ~/passt-"
"repair_dst.socket"
msgstr ""

#: ../../../system/devices/net.rst:166
msgid "passt-repair ~/passt-repair_dst.socket"
msgstr ""

#: ../../../system/devices/net.rst:168
msgid "Start QEMU with the ``-incoming`` parameter:"
msgstr ""

#: ../../../system/devices/net.rst:171
msgid ""
"|qemu_system| [...OPTIONS...] [...VHOST USER OPTIONS...] -incoming tcp:"
"localhost:4444"
msgstr ""

#: ../../../system/devices/net.rst:173
msgid "Then in the source guest monitor the migration can be started::"
msgstr ""

#: ../../../system/devices/net.rst:175
msgid "(qemu) migrate tcp:localhost:4444"
msgstr ""

#: ../../../system/devices/net.rst:177
msgid ""
"A separate passt-repair instance must be started for every migration. In the "
"case of a failed migration, passt-repair also needs to be restarted before "
"trying again."
msgstr ""

#: ../../../system/devices/net.rst:181
msgid "Hubs"
msgstr ""

#: ../../../system/devices/net.rst:183
msgid ""
"QEMU can simulate several hubs. A hub can be thought of as a virtual "
"connection between several network devices. These devices can be for example "
"QEMU virtual ethernet cards or virtual Host ethernet devices (TAP devices). "
"You can connect guest NICs or host network backends to such a hub using the "
"``-netdev hubport`` or ``-nic hubport`` options. The legacy ``-net`` option "
"also connects the given device to the emulated hub with ID 0 (i.e. the "
"default hub) unless you specify a netdev with ``-net nic,netdev=xxx`` here."
msgstr ""

#: ../../../system/devices/net.rst:194
msgid "Connecting emulated networks between QEMU instances"
msgstr ""

#: ../../../system/devices/net.rst:196
msgid ""
"Using the ``-netdev socket`` (or ``-nic socket`` or ``-net socket``) option, "
"it is possible to create emulated networks that span several QEMU instances. "
"See the description of the ``-netdev socket`` option in :ref:"
"`sec_005finvocation` to have a basic example."
msgstr ""
