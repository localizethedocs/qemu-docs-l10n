# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 6.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 10:00+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../devel/ui.rst:3
msgid "Qemu UI subsystem"
msgstr ""

#: ../../../devel/ui.rst:6
msgid "Qemu Clipboard"
msgstr ""

#: ../../../../include/ui/clipboard.h:1
msgid "**Introduction**"
msgstr ""

#: ../../../../include/ui/clipboard.h:8
msgid "The header ``ui/clipboard.h`` declares the qemu clipboard interface."
msgstr ""

#: ../../../../include/ui/clipboard.h:10
msgid ""
"All qemu elements which want use the clipboard can register as clipboard "
"peer.  Subsequently they can set the clipboard content and get notifications "
"for clipboard updates."
msgstr ""

#: ../../../../include/ui/clipboard.h:14
msgid ""
"Typical users are user interfaces (gtk), remote access protocols (vnc) and "
"devices talking to the guest (vdagent)."
msgstr ""

#: ../../../../include/ui/clipboard.h:17
msgid ""
"Even though the design allows different data types only plain text is "
"supported for now."
msgstr ""

#: ../../../../include/ui/clipboard.h:29 ../../../../include/ui/clipboard.h:41
msgid "**Constants**"
msgstr ""

#: ../../../../include/ui/clipboard.h:31
msgid "``QEMU_CLIPBOARD_TYPE_TEXT``"
msgstr ""

#: ../../../../include/ui/clipboard.h:32
msgid "text/plain; charset=utf-8"
msgstr ""

#: ../../../../include/ui/clipboard.h:34
msgid "``QEMU_CLIPBOARD_TYPE__COUNT``"
msgstr ""

#: ../../../../include/ui/clipboard.h:35
msgid "type count."
msgstr ""

#: ../../../../include/ui/clipboard.h:43
msgid "``QEMU_CLIPBOARD_SELECTION_CLIPBOARD``"
msgstr ""

#: ../../../../include/ui/clipboard.h:44
msgid "clipboard (explitcit cut+paste)."
msgstr ""

#: ../../../../include/ui/clipboard.h:46
msgid "``QEMU_CLIPBOARD_SELECTION_PRIMARY``"
msgstr ""

#: ../../../../include/ui/clipboard.h:47
msgid "primary selection (select + middle mouse button)."
msgstr ""

#: ../../../../include/ui/clipboard.h:49
msgid "``QEMU_CLIPBOARD_SELECTION_SECONDARY``"
msgstr ""

#: ../../../../include/ui/clipboard.h:50
msgid "secondary selection (dunno)."
msgstr ""

#: ../../../../include/ui/clipboard.h:52
msgid "``QEMU_CLIPBOARD_SELECTION__COUNT``"
msgstr ""

#: ../../../../include/ui/clipboard.h:53
msgid "selection count."
msgstr ""

#: ../../../../include/ui/clipboard.h:56 ../../../../include/ui/clipboard.h:72
msgid "**Definition**"
msgstr ""

#: ../../../../include/ui/clipboard.h:60
msgid ""
"struct QemuClipboardPeer {\n"
"  const char *name;\n"
"  Notifier update;\n"
"  void (*request)(QemuClipboardInfo *info, QemuClipboardType type);\n"
"};"
msgstr ""

#: ../../../../include/ui/clipboard.h:66 ../../../../include/ui/clipboard.h:88
msgid "**Members**"
msgstr ""

#: ../../../../include/ui/clipboard.h:57
msgid "``name``"
msgstr ""

#: ../../../../include/ui/clipboard.h:58
msgid "peer name."
msgstr ""

#: ../../../../include/ui/clipboard.h:58
msgid "``update``"
msgstr ""

#: ../../../../include/ui/clipboard.h:59
msgid "notifier for clipboard updates."
msgstr ""

#: ../../../../include/ui/clipboard.h:59
msgid "``request``"
msgstr ""

#: ../../../../include/ui/clipboard.h:60
msgid "callback for clipboard data requests."
msgstr ""

#: ../../../../include/ui/clipboard.h:63 ../../../../include/ui/clipboard.h:80
#: ../../../../include/ui/clipboard.h:97 ../../../../include/ui/clipboard.h:108
#: ../../../../include/ui/clipboard.h:118
#: ../../../../include/ui/clipboard.h:132
#: ../../../../include/ui/clipboard.h:141
#: ../../../../include/ui/clipboard.h:151
#: ../../../../include/ui/clipboard.h:166
#: ../../../../include/ui/clipboard.h:183
msgid "**Description**"
msgstr ""

#: ../../../../include/ui/clipboard.h:61
msgid "Clipboard peer description."
msgstr ""

#: ../../../../include/ui/clipboard.h:76
msgid ""
"struct QemuClipboardInfo {\n"
"  uint32_t refcount;\n"
"  QemuClipboardPeer *owner;\n"
"  QemuClipboardSelection selection;\n"
"  struct {\n"
"    bool available;\n"
"    bool requested;\n"
"    size_t size;\n"
"    void *data;\n"
"  } types[QEMU_CLIPBOARD_TYPE__COUNT];\n"
"};"
msgstr ""

#: ../../../../include/ui/clipboard.h:73
msgid "``refcount``"
msgstr ""

#: ../../../../include/ui/clipboard.h:74
msgid "reference counter."
msgstr ""

#: ../../../../include/ui/clipboard.h:74
msgid "``owner``"
msgstr ""

#: ../../../../include/ui/clipboard.h:75 ../../../../include/ui/clipboard.h:115
msgid "clipboard owner."
msgstr ""

#: ../../../../include/ui/clipboard.h:75
msgid "``selection``"
msgstr ""

#: ../../../../include/ui/clipboard.h:76 ../../../../include/ui/clipboard.h:116
msgid "clipboard selection."
msgstr ""

#: ../../../../include/ui/clipboard.h:76
msgid "``types``"
msgstr ""

#: ../../../../include/ui/clipboard.h:77
msgid "clipboard data array (one entry per type)."
msgstr ""

#: ../../../../include/ui/clipboard.h:78
msgid "Clipboard content data and metadata."
msgstr ""

#: ../../../../include/ui/clipboard.h:94 ../../../../include/ui/clipboard.h:105
#: ../../../../include/ui/clipboard.h:114
#: ../../../../include/ui/clipboard.h:129
#: ../../../../include/ui/clipboard.h:138
#: ../../../../include/ui/clipboard.h:148
#: ../../../../include/ui/clipboard.h:162
#: ../../../../include/ui/clipboard.h:175
msgid "**Parameters**"
msgstr ""

#: ../../../../include/ui/clipboard.h:96 ../../../../include/ui/clipboard.h:107
#: ../../../../include/ui/clipboard.h:177
msgid "``QemuClipboardPeer *peer``"
msgstr ""

#: ../../../../include/ui/clipboard.h:95 ../../../../include/ui/clipboard.h:106
msgid "peer information."
msgstr ""

#: ../../../../include/ui/clipboard.h:97
msgid ""
"Register clipboard peer.  Registering is needed for both active (set+grab "
"clipboard) and passive (watch clipboard for updates) interaction with the "
"qemu clipboard."
msgstr ""

#: ../../../../include/ui/clipboard.h:108
msgid "Unregister clipboard peer."
msgstr ""

#: ../../../../include/ui/clipboard.h:116
msgid "``QemuClipboardPeer *owner``"
msgstr ""

#: ../../../../include/ui/clipboard.h:117
msgid "``QemuClipboardSelection selection``"
msgstr ""

#: ../../../../include/ui/clipboard.h:118
msgid ""
"Allocate a new QemuClipboardInfo and initialize it with the given **owner** "
"and **selection**."
msgstr ""

#: ../../../../include/ui/clipboard.h:121
msgid ""
"QemuClipboardInfo is a reference-counted struct.  The new struct is returned "
"with a reference already taken (i.e. reference count is one)."
msgstr ""

#: ../../../../include/ui/clipboard.h:131
#: ../../../../include/ui/clipboard.h:140
#: ../../../../include/ui/clipboard.h:150
#: ../../../../include/ui/clipboard.h:164
#: ../../../../include/ui/clipboard.h:178
msgid "``QemuClipboardInfo *info``"
msgstr ""

#: ../../../../include/ui/clipboard.h:130
#: ../../../../include/ui/clipboard.h:139
#: ../../../../include/ui/clipboard.h:149
#: ../../../../include/ui/clipboard.h:163
#: ../../../../include/ui/clipboard.h:177
msgid "clipboard info."
msgstr ""

#: ../../../../include/ui/clipboard.h:132
msgid "Increase **info** reference count."
msgstr ""

#: ../../../../include/ui/clipboard.h:141
msgid ""
"Decrease **info** reference count.  When the count goes down to zero free "
"the **info** struct itself and all clipboard data."
msgstr ""

#: ../../../../include/ui/clipboard.h:151
msgid ""
"Update the qemu clipboard.  Notify all registered peers (including the "
"clipboard owner) that the qemu clipboard has been updated."
msgstr ""

#: ../../../../include/ui/clipboard.h:154
msgid ""
"This is used for both new completely clipboard content and for clipboard "
"data updates in response to qemu_clipboard_request() calls."
msgstr ""

#: ../../../../include/ui/clipboard.h:165
#: ../../../../include/ui/clipboard.h:179
msgid "``QemuClipboardType type``"
msgstr ""

#: ../../../../include/ui/clipboard.h:164
#: ../../../../include/ui/clipboard.h:178
msgid "clipboard data type."
msgstr ""

#: ../../../../include/ui/clipboard.h:166
msgid ""
"Request clipboard content.  Typically the clipboard owner only advertises "
"the available data types and provides the actual data only on request."
msgstr ""

#: ../../../../include/ui/clipboard.h:176
msgid "clipboard peer."
msgstr ""

#: ../../../../include/ui/clipboard.h:180
msgid "``uint32_t size``"
msgstr ""

#: ../../../../include/ui/clipboard.h:179
msgid "data size."
msgstr ""

#: ../../../../include/ui/clipboard.h:181
msgid "``const void *data``"
msgstr ""

#: ../../../../include/ui/clipboard.h:180
msgid "data blob."
msgstr ""

#: ../../../../include/ui/clipboard.h:182
msgid "``bool update``"
msgstr ""

#: ../../../../include/ui/clipboard.h:181
msgid "notify peers about the update."
msgstr ""

#: ../../../../include/ui/clipboard.h:183
msgid ""
"Set clipboard content for the given **type**.  This function will make a "
"copy of the content data and store that."
msgstr ""
