# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 05:37+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../system/i386/xen.rst:2
msgid "Xen HVM guest support"
msgstr ""

#: ../../../system/i386/xen.rst:6
msgid "Description"
msgstr ""

#: ../../../system/i386/xen.rst:8
msgid ""
"KVM has support for hosting Xen guests, intercepting Xen hypercalls and "
"event channel (Xen PV interrupt) delivery. This allows guests which expect "
"to be run under Xen to be hosted in QEMU under Linux/KVM instead."
msgstr ""

#: ../../../system/i386/xen.rst:12
msgid "Using the split irqchip is mandatory for Xen support."
msgstr ""

#: ../../../system/i386/xen.rst:15
msgid "Setup"
msgstr ""

#: ../../../system/i386/xen.rst:17
msgid ""
"Xen mode is enabled by setting the ``xen-version`` property of the KVM "
"accelerator, for example for Xen 4.17:"
msgstr ""

#: ../../../system/i386/xen.rst:22
msgid "|qemu_system| --accel kvm,xen-version=0x40011,kernel-irqchip=split"
msgstr ""

#: ../../../system/i386/xen.rst:24
msgid ""
"Additionally, virtual APIC support can be advertised to the guest through "
"the ``xen-vapic`` CPU flag:"
msgstr ""

#: ../../../system/i386/xen.rst:29
msgid ""
"|qemu_system| --accel kvm,xen-version=0x40011,kernel-irqchip=split --cpu "
"host,+xen-vapic"
msgstr ""

#: ../../../system/i386/xen.rst:31
msgid ""
"When Xen support is enabled, QEMU changes hypervisor identification (CPUID "
"0x40000000..0x4000000A) to Xen. The KVM identification and features are not "
"advertised to a Xen guest. If Hyper-V is also enabled, the Xen "
"identification moves to leaves 0x40000100..0x4000010A."
msgstr ""

#: ../../../system/i386/xen.rst:37
msgid "Properties"
msgstr ""

#: ../../../system/i386/xen.rst:39
msgid "The following properties exist on the KVM accelerator object:"
msgstr ""

#: ../../../system/i386/xen.rst:41
msgid "``xen-version``"
msgstr ""

#: ../../../system/i386/xen.rst:42
msgid ""
"This property contains the Xen version in ``XENVER_version`` form, with the "
"major version in the top 16 bits and the minor version in the low 16 bits. "
"Setting this property enables the Xen guest support. If Xen version 4.5 or "
"greater is specified, the HVM leaf in Xen CPUID is populated. Xen version "
"4.6 enables the vCPU ID in CPUID, and version 4.17 advertises vCPU upcall "
"vector support to the guest."
msgstr ""

#: ../../../system/i386/xen.rst:49
msgid "``xen-evtchn-max-pirq``"
msgstr ""

#: ../../../system/i386/xen.rst:50
msgid ""
"Xen PIRQs represent an emulated physical interrupt, either GSI or MSI, which "
"can be routed to an event channel instead of to the emulated I/O or local "
"APIC. By default, QEMU permits only 256 PIRQs because this allows maximum "
"compatibility with 32-bit MSI where the higher bits of the PIRQ# would need "
"to be in the upper 64 bits of the MSI message. For guests with large numbers "
"of PCI devices (and none which are limited to 32-bit addressing) it may be "
"desirable to increase this value."
msgstr ""

#: ../../../system/i386/xen.rst:58
msgid "``xen-gnttab-max-frames``"
msgstr ""

#: ../../../system/i386/xen.rst:59
msgid ""
"Xen grant tables are the means by which a Xen guest grants access to its "
"memory for PV back ends (disk, network, etc.). Since QEMU only supports v1 "
"grant tables which are 8 bytes in size, each page (each frame) of the grant "
"table can reference 512 pages of guest memory. The default number of frames "
"is 64, allowing for 32768 pages of guest memory to be accessed by PV "
"backends through simultaneous grants. For guests with large numbers of PV "
"devices and high throughput, it may be desirable to increase this value."
msgstr ""

#: ../../../system/i386/xen.rst:68
msgid "Xen paravirtual devices"
msgstr ""

#: ../../../system/i386/xen.rst:70
msgid ""
"The Xen PCI platform device is enabled automatically for a Xen guest. This "
"allows a guest to unplug all emulated devices, in order to use paravirtual "
"block and network drivers instead."
msgstr ""

#: ../../../system/i386/xen.rst:74
msgid ""
"Those paravirtual Xen block, network (and console) devices can be created "
"through the command line, and/or hot-plugged."
msgstr ""

#: ../../../system/i386/xen.rst:77
msgid ""
"To provide a Xen console device, define a character device and then a device "
"of type ``xen-console`` to connect to it. For the Xen console equivalent of "
"the handy ``-serial mon:stdio`` option, for example:"
msgstr ""

#: ../../../system/i386/xen.rst:82
msgid ""
"-chardev stdio,mux=on,id=char0,signal=off -mon char0 \\\\\n"
"-device xen-console,chardev=char0"
msgstr ""

#: ../../../system/i386/xen.rst:85
msgid ""
"The Xen network device is ``xen-net-device``, which becomes the default NIC "
"model for emulated Xen guests, meaning that just the default NIC provided by "
"QEMU should automatically work and present a Xen network device to the guest."
msgstr ""

#: ../../../system/i386/xen.rst:90
msgid ""
"Disks can be configured with '``-drive file=${GUEST_IMAGE},if=xen``' and "
"will appear to the guest as ``xvda`` onwards."
msgstr ""

#: ../../../system/i386/xen.rst:93
msgid ""
"Under Xen, the boot disk is typically available both via IDE emulation, and "
"as a PV block device. Guest bootloaders typically use IDE to load the guest "
"kernel, which then unplugs the IDE and continues with the Xen PV block "
"device."
msgstr ""

#: ../../../system/i386/xen.rst:97
msgid "This configuration can be achieved as follows:"
msgstr ""

#: ../../../system/i386/xen.rst:101
msgid ""
"|qemu_system| --accel kvm,xen-version=0x40011,kernel-irqchip=split \\\\\n"
"     -drive file=${GUEST_IMAGE},if=xen \\\\\n"
"     -drive file=${GUEST_IMAGE},file.locking=off,if=ide"
msgstr ""

#: ../../../system/i386/xen.rst:105
msgid ""
"VirtIO devices can also be used; Linux guests may need to be dissuaded from "
"umplugging them by adding '``xen_emul_unplug=never``' on their command line."
msgstr ""

#: ../../../system/i386/xen.rst:109
msgid "Booting Xen PV guests"
msgstr ""

#: ../../../system/i386/xen.rst:111
msgid ""
"Booting PV guest kernels is possible by using the Xen PV shim (a version of "
"Xen itself, designed to run inside a Xen HVM guest and provide memory "
"management services for one guest alone)."
msgstr ""

#: ../../../system/i386/xen.rst:115
msgid ""
"The Xen binary is provided as the ``-kernel`` and the guest kernel itself "
"(or PV Grub image) as the ``-initrd`` image, which actually just means the "
"first multiboot \"module\". For example:"
msgstr ""

#: ../../../system/i386/xen.rst:121
msgid ""
"|qemu_system| --accel kvm,xen-version=0x40011,kernel-irqchip=split \\\\\n"
"     -chardev stdio,id=char0 -device xen-console,chardev=char0 \\\\\n"
"     -display none  -m 1G  -kernel xen -initrd bzImage \\\\\n"
"     -append \"pv-shim console=xen,pv -- console=hvc0 root=/dev/xvda1\" \\"
"\\\n"
"     -drive file=${GUEST_IMAGE},if=xen"
msgstr ""

#: ../../../system/i386/xen.rst:127
msgid ""
"The Xen image must be built with the ``CONFIG_XEN_GUEST`` and "
"``CONFIG_PV_SHIM`` options, and as of Xen 4.17, Xen's PV shim mode does not "
"support using a serial port; it must have a Xen console or it will panic."
msgstr ""

#: ../../../system/i386/xen.rst:131
msgid ""
"The example above provides the guest kernel command line after a separator "
"(\" ``--`` \") on the Xen command line, and does not provide the guest "
"kernel with an actual initramfs, which would need to listed as a second "
"multiboot module. For more complicated alternatives, see the command line :"
"ref:`documentation <system/invocation-qemu-options-initrd>` for the ``-"
"initrd`` option."
msgstr ""

#: ../../../system/i386/xen.rst:139
msgid "Host OS requirements"
msgstr ""

#: ../../../system/i386/xen.rst:141
msgid ""
"The minimal Xen support in the KVM accelerator requires the host to be "
"running Linux v5.12 or newer. Later versions add optimisations: Linux v5.17 "
"added acceleration of interrupt delivery via the Xen PIRQ mechanism, and "
"Linux v5.19 accelerated Xen PV timers and inter-processor interrupts (IPIs)."
msgstr ""
