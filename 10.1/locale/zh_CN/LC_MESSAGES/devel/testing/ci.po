# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 10.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 10:00+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../devel/testing/ci.rst:4
msgid "Continuous Integration (CI)"
msgstr ""

#: ../../../devel/testing/ci.rst:6
msgid ""
"Continuous integration (CI) requires the builds of the entire application "
"and the execution of a comprehensive set of automated tests every time there "
"is a need to commit any set of changes [1]_. The automated tests are "
"composed of unit, functional and other tests."
msgstr ""

#: ../../../devel/testing/ci.rst:11
msgid ""
"Most of QEMU's CI is run on GitLab's infrastructure although a number of "
"other CI services are used for specialised purposes. The most up to date "
"information about them and their status can be found on the `project wiki "
"testing page <https://wiki.qemu.org/Testing/CI>`_."
msgstr ""

#: ../../../devel/testing/ci.rst:16
msgid ""
"These tests are also used as gating tests before merging pull requests. A "
"gating test restricts the move of code from one stage to another on a test/"
"deployment pipeline. The step move is granted with approval. The approval "
"can be a manual intervention or a set of tests succeeding [2]_."
msgstr ""

#: ../../../devel/testing/ci.rst:21
msgid ""
"On QEMU, the gating process happens during the pull request. The approval is "
"done by the project leader running its own set of tests. The pull request "
"gets merged when the tests succeed."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:4
msgid "Custom CI/CD variables"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:6
msgid ""
"QEMU CI pipelines can be tuned by setting some CI environment variables."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:9
msgid "Set variable globally in the user's CI namespace"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:11
msgid "Variables can be set globally in the user's CI namespace setting."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:13
#: ../../../devel/testing/ci-jobs.rst.inc:29
msgid ""
"For further information about how to set these variables, please refer to::"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:15
msgid ""
"https://docs.gitlab.com/ee/ci/variables/#add-a-cicd-variable-to-a-project"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:18
msgid ""
"Set variable manually when pushing a branch or tag to the user's repository"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:20
msgid ""
"Variables can be set manually when pushing a branch or tag, using git-push "
"command line arguments."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:23
msgid "Example setting the QEMU_CI_EXAMPLE_VAR variable:"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:25
msgid "git push -o ci.variable=\"QEMU_CI_EXAMPLE_VAR=value\" myrepo mybranch"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:31
msgid ""
"https://docs.gitlab.com/ee/user/project/push_options.html#push-options-for-"
"gitlab-cicd"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:34
msgid "Setting aliases in your git config"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:36
msgid ""
"You can use aliases to make it easier to push branches with different CI "
"configurations. For example define an alias for triggering CI:"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:39
msgid ""
"git config --local alias.push-ci \"push -o ci.variable=QEMU_CI=1\"\n"
"git config --local alias.push-ci-now \"push -o ci.variable=QEMU_CI=2\""
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:44
msgid "Which lets you run:"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:46
msgid "git push-ci"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:50
msgid "to create the pipeline, or:"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:52
msgid "git push-ci-now"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:56
msgid "to create and run the pipeline"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:60
msgid "Variable naming and grouping"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:62
msgid ""
"The variables used by QEMU's CI configuration are grouped together in a "
"handful of namespaces"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:65
msgid ""
"QEMU_JOB_nnnn - variables to be defined in individual jobs or templates, to "
"influence the shared rules defined in the .base_job_template."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:69
msgid ""
"QEMU_CI_nnn - variables to be set by contributors in their repository CI "
"settings, or as git push variables, to influence which jobs get run in a "
"pipeline"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:73
msgid ""
"QEMU_CI_CONTAINER_TAG - the tag used to publish containers in stage 1, for "
"use by build jobs in stage 2. Defaults to 'latest', but if running pipelines "
"for different branches concurrently, it should be overridden per pipeline."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:78
msgid ""
"QEMU_CI_UPSTREAM - gitlab namespace that is considered to be the 'upstream'. "
"This defaults to 'qemu-project'. Contributors may choose to override this if "
"they are modifying rules in base.yml and need to validate how they will "
"operate when in an upstream context, as opposed to their fork context."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:84
msgid ""
"nnn - other misc variables not falling into the above categories, or using "
"different names for historical reasons and not yet converted."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:89
msgid "Maintainer controlled job variables"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:91
msgid ""
"The following variables may be set when defining a job in the CI "
"configuration file."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:95
msgid "QEMU_JOB_CIRRUS"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:97
msgid ""
"The job makes use of Cirrus CI infrastructure, requiring the configuration "
"setup for cirrus-run to be present in the repository"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:101
msgid "QEMU_JOB_OPTIONAL"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:103
msgid ""
"The job is expected to be successful in general, but is not run by default "
"due to need to conserve limited CI resources. It is available to be started "
"manually by the contributor in the CI pipelines UI."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:109
msgid "QEMU_JOB_ONLY_FORKS"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:111
msgid ""
"The job results are only of interest to contributors prior to submitting "
"code. They are not required as part of the gating CI pipeline."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:116
msgid "QEMU_JOB_SKIPPED"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:118
msgid ""
"The job is not reliably successful in general, so is not currently suitable "
"to be run by default. Ideally this should be a temporary marker until the "
"problems can be addressed, or the job permanently removed."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:124
msgid "QEMU_JOB_PUBLISH"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:126
msgid ""
"The job is for publishing content after a branch has been merged into the "
"upstream default branch."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:130
msgid "QEMU_JOB_FUNCTIONAL"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:132
msgid "The job runs the functional test suite"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:135
msgid "Contributor controlled runtime variables"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:137
msgid ""
"The following variables may be set by contributors to control job execution"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:141
msgid "QEMU_CI"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:143
msgid ""
"By default, no pipelines will be created on contributor forks in order to "
"preserve CI credits"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:146
msgid ""
"Set this variable to 1 to create the pipelines, but leave all the jobs to be "
"manually started from the UI"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:149
msgid ""
"Set this variable to 2 to create the pipelines and run all the jobs "
"immediately, as was the historical behaviour"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:153
msgid "QEMU_CI_FUNCTIONAL"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:154
msgid ""
"By default, tests using the functional framework are not run automatically "
"in the pipelines (because multiple artifacts have to be downloaded, which "
"might cause a lot of network traffic). Set this variable to have the tests "
"using the functional framework run automatically."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:160
msgid "Other misc variables"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:162
msgid ""
"These variables are primarily to control execution of jobs on private runners"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:166
msgid "AARCH64_RUNNER_AVAILABLE"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:167
msgid ""
"If you've got access to an aarch64 host that can be used as a gitlab-CI "
"runner, you can set this variable to enable the tests that require this kind "
"of host. The runner should be tagged with \"aarch64\"."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:172
msgid "AARCH32_RUNNER_AVAILABLE"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:173
msgid ""
"If you've got access to an armhf host or an arch64 host that can run aarch32 "
"EL0 code to be used as a gitlab-CI runner, you can set this variable to "
"enable the tests that require this kind of host. The runner should be tagged "
"with \"aarch32\"."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:179
msgid "S390X_RUNNER_AVAILABLE"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:180
msgid ""
"If you've got access to an IBM Z host that can be used as a gitlab-CI "
"runner, you can set this variable to enable the tests that require this kind "
"of host. The runner should be tagged with \"s390x\"."
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:185
msgid "CCACHE_DISABLE"
msgstr ""

#: ../../../devel/testing/ci-jobs.rst.inc:186
msgid ""
"The jobs are configured to use \"ccache\" by default since this typically "
"reduces compilation time, at the cost of increased storage. If the use of "
"\"ccache\" is suspected to be hurting the overall job execution time, "
"setting the \"CCACHE_DISABLE=1\" env variable to disable it."
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:2
msgid "Jobs on Custom Runners"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:4
msgid ""
"Besides the jobs run under the various CI systems listed before, there are a "
"number additional jobs that will run before an actual merge. These use the "
"same GitLab CI's service/framework already used for all other GitLab based "
"CI jobs, but rely on additional systems, not the ones provided by GitLab as "
"\"shared runners\"."
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:10
msgid ""
"The architecture of GitLab's CI service allows different machines to be set "
"up with GitLab's \"agent\", called gitlab-runner, which will take care of "
"running jobs created by events such as a push to a branch. Here, the "
"combination of a machine, properly configured with GitLab's gitlab-runner, "
"is called a \"custom runner\"."
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:16
msgid ""
"The GitLab CI jobs definition for the custom runners are located under::"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:18
msgid ".gitlab-ci.d/custom-runners.yml"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:20
msgid ""
"Custom runners entail custom machines.  To see a list of the machines "
"currently deployed in the QEMU GitLab CI and their maintainers, please refer "
"to the QEMU `wiki <https://wiki.qemu.org/AdminContacts>`__."
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:25
msgid "Machine Setup Howto"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:27
msgid ""
"For all Linux based systems, the setup can be mostly automated by the "
"execution of two Ansible playbooks.  Create an ``inventory`` file under "
"``scripts/ci/setup``, such as this::"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:31
msgid ""
"fully.qualified.domain\n"
"other.machine.hostname"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:34
msgid ""
"You may need to set some variables in the inventory file itself.  One very "
"common need is to tell Ansible to use a Python 3 interpreter on those "
"hosts.  This would look like::"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:38
msgid ""
"fully.qualified.domain ansible_python_interpreter=/usr/bin/python3\n"
"other.machine.hostname ansible_python_interpreter=/usr/bin/python3"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:42
msgid "Build environment"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:44
msgid ""
"The ``scripts/ci/setup/$DISTRO/build-environment.yml`` Ansible playbook will "
"set up machines with the environment needed to perform builds and run QEMU "
"tests. This playbook consists on the installation of various required "
"packages (and a general package update while at it)."
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:50
msgid ""
"The minimum required version of Ansible successfully tested in this playbook "
"is 2.8.0 (a version check is embedded within the playbook itself).  To run "
"the playbook, execute::"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:54
msgid ""
"cd scripts/ci/setup\n"
"ansible-playbook -i inventory $DISTRO/build-environment.yml"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:57
msgid ""
"Please note that most of the tasks in the playbook require superuser "
"privileges, such as those from the ``root`` account or those obtained by "
"``sudo``.  If necessary, please refer to ``ansible-playbook`` options such "
"as ``--become``, ``--become-method``, ``--become-user`` and ``--ask-become-"
"pass``."
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:64
msgid "gitlab-runner setup and registration"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:66
msgid ""
"The gitlab-runner agent needs to be installed on each machine that will run "
"jobs.  The association between a machine and a GitLab project happens with a "
"registration token.  To find the registration token for your repository/"
"project, navigate on GitLab's web UI to:"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:71
msgid ""
"Settings (the gears-like icon at the bottom of the left hand side vertical "
"toolbar), then"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:73
#: ../../../devel/testing/ci-runners.rst.inc:92
msgid "CI/CD, then"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:74
#: ../../../devel/testing/ci-runners.rst.inc:93
msgid "Runners, and click on the \"Expand\" button, then"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:75
msgid ""
"Under \"Set up a specific Runner manually\", look for the value under \"And "
"this registration token:\""
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:78
msgid ""
"Copy the ``scripts/ci/setup/vars.yml.template`` file to ``scripts/ci/setup/"
"vars.yml``.  Then, set the ``gitlab_runner_registration_token`` variable to "
"the value obtained earlier."
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:83
msgid "To run the playbook, execute::"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:85
msgid ""
"cd scripts/ci/setup\n"
"ansible-playbook -i inventory gitlab-runner.yml"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:88
msgid ""
"Following the registration, it's necessary to configure the runner tags, and "
"optionally other configurations on the GitLab UI.  Navigate to:"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:91
msgid "Settings (the gears like icon), then"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:94
msgid "\"Runners activated for this project\", then"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:95
msgid "Click on the \"Edit\" icon (next to the \"Lock\" Icon)"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:97
msgid ""
"Tags are very important as they are used to route specific jobs to specific "
"types of runners, so it's a good idea to double check that the automatically "
"created tags are consistent with the OS and architecture.  For instance, an "
"Ubuntu 20.04 aarch64 system should have tags set as::"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:103
msgid "ubuntu_20.04,aarch64"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:105
msgid ""
"Because the job definition at ``.gitlab-ci.d/custom-runners.yml`` would "
"contain::"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:108
msgid ""
"ubuntu-20.04-aarch64-all:\n"
" tags:\n"
" - ubuntu_20.04\n"
" - aarch64"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:113
msgid "It's also recommended to:"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:115
msgid "increase the \"Maximum job timeout\" to something like ``2h``"
msgstr ""

#: ../../../devel/testing/ci-runners.rst.inc:116
msgid "give it a better Description"
msgstr ""

#: ../../../devel/testing/ci.rst:29
msgid "References"
msgstr ""

#: ../../../devel/testing/ci.rst:31
msgid ""
"Humble, Jez & Farley, David (2010). Continuous Delivery: Reliable Software "
"Releases Through Build, Test, and Deployment, p. 55."
msgstr ""

#: ../../../devel/testing/ci.rst:33
msgid ""
"Humble, Jez & Farley, David (2010). Continuous Delivery: Reliable Software "
"Releases Through Build, Test, and Deployment, p. 122."
msgstr ""
