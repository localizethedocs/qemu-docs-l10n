# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 10.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 10:00+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../system/security.rst:2
msgid "Security"
msgstr ""

#: ../../../system/security.rst:5
msgid "Overview"
msgstr ""

#: ../../../system/security.rst:7
msgid ""
"This chapter explains the security requirements that QEMU is designed to "
"meet and principles for securely deploying QEMU."
msgstr ""

#: ../../../system/security.rst:11
msgid "Security Requirements"
msgstr ""

#: ../../../system/security.rst:13
msgid ""
"QEMU supports many different use cases, some of which have stricter security "
"requirements than others.  The community has agreed on the overall security "
"requirements that users may depend on.  These requirements define what is "
"considered supported from a security perspective."
msgstr ""

#: ../../../system/security.rst:19
msgid "Virtualization Use Case"
msgstr ""

#: ../../../system/security.rst:21
msgid ""
"The virtualization use case covers cloud and virtual private server (VPS) "
"hosting, as well as traditional data center and desktop virtualization.  "
"These use cases rely on hardware virtualization extensions to execute guest "
"code safely on the physical CPU at close-to-native speed."
msgstr ""

#: ../../../system/security.rst:26
msgid ""
"The following entities are untrusted, meaning that they may be buggy or "
"malicious:"
msgstr ""

#: ../../../system/security.rst:29
msgid "Guest"
msgstr ""

#: ../../../system/security.rst:30
msgid "User-facing interfaces (e.g. VNC, SPICE, WebSocket)"
msgstr ""

#: ../../../system/security.rst:31
msgid "Network protocols (e.g. NBD, live migration)"
msgstr ""

#: ../../../system/security.rst:32
msgid "User-supplied files (e.g. disk images, kernels, device trees)"
msgstr ""

#: ../../../system/security.rst:33
msgid "Passthrough devices (e.g. PCI, USB)"
msgstr ""

#: ../../../system/security.rst:35
msgid ""
"Bugs affecting these entities are evaluated on whether they can cause damage "
"in real-world use cases and treated as security bugs if this is the case."
msgstr ""

#: ../../../system/security.rst:39
msgid "Non-virtualization Use Case"
msgstr ""

#: ../../../system/security.rst:41
msgid ""
"The non-virtualization use case covers emulation using the Tiny Code "
"Generator (TCG).  In principle the TCG and device emulation code used in "
"conjunction with the non-virtualization use case should meet the same "
"security requirements as the virtualization use case.  However, for "
"historical reasons much of the non-virtualization use case code was not "
"written with these security requirements in mind."
msgstr ""

#: ../../../system/security.rst:48
msgid ""
"Bugs affecting the non-virtualization use case are not considered security "
"bugs at this time.  Users with non-virtualization use cases must not rely on "
"QEMU to provide guest isolation or any security guarantees."
msgstr ""

#: ../../../system/security.rst:53
msgid "Architecture"
msgstr ""

#: ../../../system/security.rst:55
msgid ""
"This section describes the design principles that ensure the security "
"requirements are met."
msgstr ""

#: ../../../system/security.rst:59
msgid "Guest Isolation"
msgstr ""

#: ../../../system/security.rst:61
msgid ""
"Guest isolation is the confinement of guest code to the virtual machine.  "
"When guest code gains control of execution on the host this is called "
"escaping the virtual machine.  Isolation also includes resource limits such "
"as throttling of CPU, memory, disk, or network.  Guests must be unable to "
"exceed their resource limits."
msgstr ""

#: ../../../system/security.rst:67
msgid ""
"QEMU presents an attack surface to the guest in the form of emulated "
"devices. The guest must not be able to gain control of QEMU.  Bugs in "
"emulated devices could allow malicious guests to gain code execution in "
"QEMU.  At this point the guest has escaped the virtual machine and is able "
"to act in the context of the QEMU process on the host."
msgstr ""

#: ../../../system/security.rst:73
msgid ""
"Guests often interact with other guests and share resources with them.  A "
"malicious guest must not gain control of other guests or access their data. "
"Disk image files and network traffic must be protected from other guests "
"unless explicitly shared between them by the user."
msgstr ""

#: ../../../system/security.rst:79
msgid "Principle of Least Privilege"
msgstr ""

#: ../../../system/security.rst:81
msgid ""
"The principle of least privilege states that each component only has access "
"to the privileges necessary for its function.  In the case of QEMU this "
"means that each process only has access to resources belonging to the guest."
msgstr ""

#: ../../../system/security.rst:85
msgid ""
"The QEMU process should not have access to any resources that are "
"inaccessible to the guest.  This way the guest does not gain anything by "
"escaping into the QEMU process since it already has access to those same "
"resources from within the guest."
msgstr ""

#: ../../../system/security.rst:90
msgid ""
"Following the principle of least privilege immediately fulfills guest "
"isolation requirements.  For example, guest A only has access to its own "
"disk image file ``a.img`` and not guest B's disk image file ``b.img``."
msgstr ""

#: ../../../system/security.rst:94
msgid ""
"In reality certain resources are inaccessible to the guest but must be "
"available to QEMU to perform its function.  For example, host system calls "
"are necessary for QEMU but are not exposed to guests.  A guest that escapes "
"into the QEMU process can then begin invoking host system calls."
msgstr ""

#: ../../../system/security.rst:99
msgid ""
"New features must be designed to follow the principle of least privilege. "
"Should this not be possible for technical reasons, the security risk must be "
"clearly documented so users are aware of the trade-off of enabling the "
"feature."
msgstr ""

#: ../../../system/security.rst:104
msgid "Isolation mechanisms"
msgstr ""

#: ../../../system/security.rst:106
msgid ""
"Several isolation mechanisms are available to realize this architecture of "
"guest isolation and the principle of least privilege.  With the exception of "
"Linux seccomp, these mechanisms are all deployed by management tools that "
"launch QEMU, such as libvirt.  They are also platform-specific so they are "
"only described briefly for Linux here."
msgstr ""

#: ../../../system/security.rst:112
msgid ""
"The fundamental isolation mechanism is that QEMU processes must run as "
"unprivileged users.  Sometimes it seems more convenient to launch QEMU as "
"root to give it access to host devices (e.g. ``/dev/net/tun``) but this "
"poses a huge security risk.  File descriptor passing can be used to give an "
"otherwise unprivileged QEMU process access to host devices without running "
"QEMU as root. It is also possible to launch QEMU as a non-root user and "
"configure UNIX groups for access to ``/dev/kvm``, ``/dev/net/tun``, and "
"other device nodes. Some Linux distros already ship with UNIX groups for "
"these devices by default."
msgstr ""

#: ../../../system/security.rst:121
msgid ""
"SELinux and AppArmor make it possible to confine processes beyond the "
"traditional UNIX process and file permissions model.  They restrict the QEMU "
"process from accessing processes and files on the host system that are not "
"needed by QEMU."
msgstr ""

#: ../../../system/security.rst:126
msgid ""
"Resource limits and cgroup controllers provide throughput and utilization "
"limits on key resources such as CPU time, memory, and I/O bandwidth."
msgstr ""

#: ../../../system/security.rst:129
msgid ""
"Linux namespaces can be used to make process, file system, and other system "
"resources unavailable to QEMU.  A namespaced QEMU process is restricted to "
"only those resources that were granted to it."
msgstr ""

#: ../../../system/security.rst:133
msgid ""
"Linux seccomp is available via the QEMU ``--sandbox`` option.  It disables "
"system calls that are not needed by QEMU, thereby reducing the host kernel "
"attack surface."
msgstr ""

#: ../../../system/security.rst:138
msgid "Sensitive configurations"
msgstr ""

#: ../../../system/security.rst:140
msgid ""
"There are aspects of QEMU that can have security implications which users & "
"management applications must be aware of."
msgstr ""

#: ../../../system/security.rst:144
msgid "Monitor console (QMP and HMP)"
msgstr ""

#: ../../../system/security.rst:146
msgid ""
"The monitor console (whether used with QMP or HMP) provides an interface to "
"dynamically control many aspects of QEMU's runtime operation. Many of the "
"commands exposed will instruct QEMU to access content on the host file "
"system and/or trigger spawning of external processes."
msgstr ""

#: ../../../system/security.rst:151
msgid ""
"For example, the ``migrate`` command allows for the spawning of arbitrary "
"processes for the purpose of tunnelling the migration data stream. The "
"``blockdev-add`` command instructs QEMU to open arbitrary files, exposing "
"their content to the guest as a virtual disk."
msgstr ""

#: ../../../system/security.rst:156
msgid ""
"Unless QEMU is otherwise confined using technologies such as SELinux, "
"AppArmor, or Linux namespaces, the monitor console should be considered to "
"have privileges equivalent to those of the user account QEMU is running "
"under."
msgstr ""

#: ../../../system/security.rst:160
msgid ""
"It is further important to consider the security of the character device "
"backend over which the monitor console is exposed. It needs to have "
"protection against malicious third parties which might try to make "
"unauthorized connections, or perform man-in-the-middle attacks. Many of the "
"character device backends do not satisfy this requirement and so must not be "
"used for the monitor console."
msgstr ""

#: ../../../system/security.rst:166
msgid ""
"The general recommendation is that the monitor console should be exposed "
"over a UNIX domain socket backend to the local host only. Use of the TCP "
"based character device backend is inappropriate unless configured to use "
"both TLS encryption and authorization control policy on client connections."
msgstr ""

#: ../../../system/security.rst:171
msgid ""
"In summary, the monitor console is considered a privileged control interface "
"to QEMU and as such should only be made accessible to a trusted management "
"application or user."
msgstr ""
