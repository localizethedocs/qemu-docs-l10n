# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 10.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 10:00+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../system/devices/vfio-user.rst:5
msgid "vfio-user"
msgstr ""

#: ../../../system/devices/vfio-user.rst:7
msgid ""
"QEMU includes a ``vfio-user`` client. The ``vfio-user`` specification allows "
"for implementing (PCI) devices in userspace outside of QEMU; it is similar "
"to ``vhost-user`` in this respect (see :doc:`vhost-user`), but can emulate "
"arbitrary PCI devices, not just ``virtio``. Whereas ``vfio`` is handled by "
"the host kernel, ``vfio-user``, while similar in implementation, is handled "
"entirely in userspace."
msgstr ""

#: ../../../system/devices/vfio-user.rst:14
msgid ""
"For example, SPDK includes a virtual PCI NVMe controller implementation; by "
"setting up a ``vfio-user`` UNIX socket between QEMU and SPDK, a VM can send "
"NVMe I/O to the SPDK process."
msgstr ""

#: ../../../system/devices/vfio-user.rst:18
msgid ""
"Presuming a suitable ``vfio-user`` server has opened a socket at ``/tmp/vfio-"
"user.sock``, a device can be configured with for example:"
msgstr ""

#: ../../../system/devices/vfio-user.rst:23
msgid ""
"-device '{\"driver\": \"vfio-user-pci\",\"socket\": {\"path\": \"/tmp/vfio-"
"user.sock\", \"type\": \"unix\"}}'"
msgstr ""

#: ../../../system/devices/vfio-user.rst:25
msgid ""
"See `libvfio-user <https://github.com/nutanix/libvfio-user/>`_ for further "
"information."
msgstr ""
