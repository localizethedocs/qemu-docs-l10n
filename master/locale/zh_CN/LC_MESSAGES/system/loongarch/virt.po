# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 05:37+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../system/loongarch/virt.rst:5
msgid "loongson3 virt generic platform (``virt``)"
msgstr ""

#: ../../../system/loongarch/virt.rst:7
msgid ""
"The ``virt`` machine use gpex host bridge, and there are some emulated "
"devices on virt board, such as loongson7a RTC device, IOAPIC device, ACPI "
"device and so on."
msgstr ""

#: ../../../system/loongarch/virt.rst:12
msgid "Supported devices"
msgstr ""

#: ../../../system/loongarch/virt.rst:14
msgid "The ``virt`` machine supports:"
msgstr ""

#: ../../../system/loongarch/virt.rst:16
msgid "Gpex host bridge"
msgstr ""

#: ../../../system/loongarch/virt.rst:17
msgid "Ls7a RTC device"
msgstr ""

#: ../../../system/loongarch/virt.rst:18
msgid "Ls7a IOAPIC device"
msgstr ""

#: ../../../system/loongarch/virt.rst:19
msgid "ACPI GED device"
msgstr ""

#: ../../../system/loongarch/virt.rst:20
msgid "Fw_cfg device"
msgstr ""

#: ../../../system/loongarch/virt.rst:21
msgid "PCI/PCIe devices"
msgstr ""

#: ../../../system/loongarch/virt.rst:22
msgid "Memory device"
msgstr ""

#: ../../../system/loongarch/virt.rst:23
msgid "CPU device. Type: la464."
msgstr ""

#: ../../../system/loongarch/virt.rst:26
msgid "CPU and machine Type"
msgstr ""

#: ../../../system/loongarch/virt.rst:28
msgid ""
"The ``qemu-system-loongarch64`` provides emulation for virt machine. You can "
"specify the machine type ``virt`` and cpu type ``la464``."
msgstr ""

#: ../../../system/loongarch/virt.rst:33
msgid "Boot options"
msgstr ""

#: ../../../system/loongarch/virt.rst:35
msgid ""
"We can boot the LoongArch virt machine by specifying the uefi bios, initrd, "
"and linux kernel. And those source codes and binary files can be accessed by "
"following steps."
msgstr ""

#: ../../../system/loongarch/virt.rst:39
msgid "Build qemu-system-loongarch64:"
msgstr ""

#: ../../../system/loongarch/virt.rst:41
msgid ""
"./configure --target-list=\"loongarch64-softmmu\"\n"
"make -j8"
msgstr ""

#: ../../../system/loongarch/virt.rst:46
msgid "Set cross tools:"
msgstr ""

#: ../../../system/loongarch/virt.rst:48
msgid ""
"wget https://github.com/loongson/build-tools/releases/download/2022.09.06/"
"loongarch64-clfs-6.3-cross-tools-gcc-glibc.tar.xz\n"
"tar -vxf loongarch64-clfs-6.3-cross-tools-gcc-glibc.tar.xz  -C /opt\n"
"export PATH=/opt/cross-tools/bin:$PATH\n"
"export LD_LIBRARY_PATH=/opt/cross-tools/lib:$LD_LIBRARY_PATH\n"
"export LD_LIBRARY_PATH=/opt/cross-tools/loongarch64-unknown-linux-gnu/lib/:"
"$LD_LIBRARY_PATH"
msgstr ""

#: ../../../system/loongarch/virt.rst:56
msgid ""
"Note: You need get the latest cross-tools at https://github.com/loongson/"
"build-tools"
msgstr ""

#: ../../../system/loongarch/virt.rst:58
msgid "Build BIOS:"
msgstr ""

#: ../../../system/loongarch/virt.rst:60
msgid ""
"See: https://github.com/tianocore/edk2/tree/master/OvmfPkg/"
"LoongArchVirt#readme"
msgstr ""

#: ../../../system/loongarch/virt.rst:62
msgid ""
"Note: To build the release version of the bios,  set --buildtarget=RELEASE,"
msgstr ""

#: ../../../system/loongarch/virt.rst:63
msgid "the bios file path:  Build/LoongArchQemu/RELEASE_GCC5/FV/QEMU_EFI.fd"
msgstr ""

#: ../../../system/loongarch/virt.rst:65
msgid "Build kernel:"
msgstr ""

#: ../../../system/loongarch/virt.rst:67
msgid ""
"git clone https://github.com/loongson/linux.git\n"
"cd linux\n"
"git checkout loongarch-next\n"
"make ARCH=loongarch CROSS_COMPILE=loongarch64-unknown-linux-gnu- "
"loongson3_defconfig\n"
"make ARCH=loongarch CROSS_COMPILE=loongarch64-unknown-linux-gnu- -j32"
msgstr ""

#: ../../../system/loongarch/virt.rst:75
msgid "Note: The branch of linux source code is loongarch-next."
msgstr ""

#: ../../../system/loongarch/virt.rst:76
msgid "the kernel file: arch/loongarch/boot/vmlinuz.efi"
msgstr ""

#: ../../../system/loongarch/virt.rst:78
msgid "Get initrd:"
msgstr ""

#: ../../../system/loongarch/virt.rst:80
msgid ""
"You can use busybox tool and the linux modules to make a initrd file. Or you "
"can access the binary files: https://github.com/yangxiaojuan-loongson/qemu-"
"binary"
msgstr ""

#: ../../../system/loongarch/virt.rst:83
msgid "git clone https://github.com/yangxiaojuan-loongson/qemu-binary"
msgstr ""

#: ../../../system/loongarch/virt.rst:87
msgid "Note: the initrd file is ramdisk"
msgstr ""

#: ../../../system/loongarch/virt.rst:89
msgid "Booting LoongArch:"
msgstr ""

#: ../../../system/loongarch/virt.rst:91
msgid ""
"$ ./build/qemu-system-loongarch64 -machine virt -m 4G -cpu la464 \\\n"
"    -smp 1 -bios QEMU_EFI.fd -kernel vmlinuz.efi -initrd ramdisk \\\n"
"    -serial stdio   -monitor telnet:localhost:4495,server,nowait \\\n"
"    -append \"root=/dev/ram rdinit=/sbin/init console=ttyS0,115200\" \\\n"
"    --nographic"
msgstr ""
