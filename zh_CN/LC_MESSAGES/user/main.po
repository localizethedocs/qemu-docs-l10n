# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 05:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../user/main.rst:2
msgid "QEMU User space emulator"
msgstr ""

#: ../../../user/main.rst:5
msgid "Supported Operating Systems"
msgstr ""

#: ../../../user/main.rst:7
msgid "The following OS are supported in user space emulation:"
msgstr ""

#: ../../../user/main.rst:9
msgid "Linux (referred as qemu-linux-user)"
msgstr ""

#: ../../../user/main.rst:11
msgid "BSD (referred as qemu-bsd-user)"
msgstr ""

#: ../../../user/main.rst:14
msgid "Features"
msgstr ""

#: ../../../user/main.rst:16
msgid "QEMU user space emulation has the following notable features:"
msgstr ""

#: ../../../user/main.rst:18
msgid "**System call translation:**"
msgstr ""

#: ../../../user/main.rst:19
msgid ""
"QEMU includes a generic system call translator. This means that the "
"parameters of the system calls can be converted to fix endianness and 32/64-"
"bit mismatches between hosts and targets. IOCTLs can be converted too."
msgstr ""

#: ../../../user/main.rst:24
msgid "**POSIX signal handling:**"
msgstr ""

#: ../../../user/main.rst:25
msgid ""
"QEMU can redirect to the running program all signals coming from the host "
"(such as ``SIGALRM``), as well as synthesize signals from virtual CPU "
"exceptions (for example ``SIGFPE`` when the program executes a division by "
"zero)."
msgstr ""

#: ../../../user/main.rst:30
msgid ""
"QEMU relies on the host kernel to emulate most signal system calls, for "
"example to emulate the signal mask. On Linux, QEMU supports both normal and "
"real-time signals."
msgstr ""

#: ../../../user/main.rst:34
msgid "**Threading:**"
msgstr ""

#: ../../../user/main.rst:35
msgid ""
"On Linux, QEMU can emulate the ``clone`` syscall and create a real host "
"thread (with a separate virtual CPU) for each emulated thread. Note that not "
"all targets currently emulate atomic operations correctly. x86 and Arm use a "
"global lock in order to preserve their semantics."
msgstr ""

#: ../../../user/main.rst:41
msgid ""
"QEMU was conceived so that ultimately it can emulate itself. Although it is "
"not very useful, it is an important test to show the power of the emulator."
msgstr ""

#: ../../../user/main.rst:46
msgid "Linux User space emulator"
msgstr ""

#: ../../../user/main.rst:49 ../../../user/main.rst:208
msgid "Command line options"
msgstr ""

#: ../../../user/main.rst:53
msgid ""
"qemu-i386 [-h] [-d] [-L path] [-s size] [-cpu model] [-g port] [-B offset] [-"
"R size] program [arguments...]"
msgstr ""

#: ../../../user/main.rst:55 ../../../user/main.rst:214
msgid "``-h``"
msgstr ""

#: ../../../user/main.rst:56 ../../../user/main.rst:215
msgid "Print the help"
msgstr ""

#: ../../../user/main.rst:58 ../../../user/main.rst:217
msgid "``-L path``"
msgstr ""

#: ../../../user/main.rst:59
msgid "Set the x86 elf interpreter prefix (default=/usr/local/qemu-i386)"
msgstr ""

#: ../../../user/main.rst:61 ../../../user/main.rst:220
msgid "``-s size``"
msgstr ""

#: ../../../user/main.rst:62
msgid "Set the x86 stack size in bytes (default=524288)"
msgstr ""

#: ../../../user/main.rst:64
msgid "``-cpu model``"
msgstr ""

#: ../../../user/main.rst:65
msgid "Select CPU model (-cpu help for list and additional feature selection)"
msgstr ""

#: ../../../user/main.rst:68 ../../../user/main.rst:227
msgid "``-E var=value``"
msgstr ""

#: ../../../user/main.rst:69 ../../../user/main.rst:228
msgid "Set environment var to value."
msgstr ""

#: ../../../user/main.rst:71 ../../../user/main.rst:230
msgid "``-U var``"
msgstr ""

#: ../../../user/main.rst:72 ../../../user/main.rst:231
msgid "Remove var from the environment."
msgstr ""

#: ../../../user/main.rst:74
msgid "``-B offset``"
msgstr ""

#: ../../../user/main.rst:75
msgid ""
"Offset guest address by the specified number of bytes. This is useful when "
"the address region required by guest applications is reserved on the host. "
"This option is currently only supported on some hosts."
msgstr ""

#: ../../../user/main.rst:79
msgid "``-R size``"
msgstr ""

#: ../../../user/main.rst:80
msgid ""
"Pre-allocate a guest virtual address space of the given size (in bytes). \\"
"\"G\\\", \\\"M\\\", and \\\"k\\\" suffixes may be used when specifying the "
"size."
msgstr ""

#: ../../../user/main.rst:84 ../../../user/main.rst:237
msgid "Debug options:"
msgstr ""

#: ../../../user/main.rst:86 ../../../user/main.rst:239
msgid "``-d item1,...``"
msgstr ""

#: ../../../user/main.rst:87 ../../../user/main.rst:240
msgid ""
"Activate logging of the specified items (use '-d help' for a list of log "
"items)"
msgstr ""

#: ../../../user/main.rst:90 ../../../user/main.rst:243
msgid "``-p pagesize``"
msgstr ""

#: ../../../user/main.rst:91 ../../../user/main.rst:244
msgid "Act as if the host page size was 'pagesize' bytes"
msgstr ""

#: ../../../user/main.rst:93
msgid "``-g port``"
msgstr ""

#: ../../../user/main.rst:94
msgid "Wait gdb connection to port"
msgstr ""

#: ../../../user/main.rst:96 ../../../user/main.rst:246
msgid "``-singlestep``"
msgstr ""

#: ../../../user/main.rst:97 ../../../user/main.rst:247
msgid "Run the emulation in single step mode."
msgstr ""

#: ../../../user/main.rst:99
msgid "Environment variables:"
msgstr ""

#: ../../../user/main.rst:101
msgid "QEMU_STRACE"
msgstr ""

#: ../../../user/main.rst:102
msgid ""
"Print system calls and arguments similar to the 'strace' program (NOTE: the "
"actual 'strace' program will not work because the user space emulator hasn't "
"implemented ptrace). At the moment this is incomplete. All system calls that "
"don't have a specific argument format are printed with information for six "
"arguments. Many flag-style arguments don't have decoders and will show up as "
"numbers."
msgstr ""

#: ../../../user/main.rst:110
msgid "Other binaries"
msgstr ""

#: ../../../user/main.rst:112
msgid "user mode (Alpha)"
msgstr ""

#: ../../../user/main.rst:114
msgid "``qemu-alpha`` TODO."
msgstr ""

#: ../../../user/main.rst:116
msgid "user mode (Arm)"
msgstr ""

#: ../../../user/main.rst:118
msgid "``qemu-armeb`` TODO."
msgstr ""

#: ../../../user/main.rst:120
msgid ""
"``qemu-arm`` is also capable of running Arm \\\"Angel\\\" semihosted ELF "
"binaries (as implemented by the arm-elf and arm-eabi Newlib/GDB "
"configurations), and arm-uclinux bFLT format binaries."
msgstr ""

#: ../../../user/main.rst:124
msgid "user mode (ColdFire)"
msgstr ""

#: ../../../user/main.rst:126
msgid "user mode (M68K)"
msgstr ""

#: ../../../user/main.rst:128
msgid ""
"``qemu-m68k`` is capable of running semihosted binaries using the BDM (m5xxx-"
"ram-hosted.ld) or m68k-sim (sim.ld) syscall interfaces, and coldfire uClinux "
"bFLT format binaries."
msgstr ""

#: ../../../user/main.rst:132
msgid "The binary format is detected automatically."
msgstr ""

#: ../../../user/main.rst:134
msgid "user mode (Cris)"
msgstr ""

#: ../../../user/main.rst:136
msgid "``qemu-cris`` TODO."
msgstr ""

#: ../../../user/main.rst:138
msgid "user mode (i386)"
msgstr ""

#: ../../../user/main.rst:140
msgid "``qemu-i386`` TODO."
msgstr ""

#: ../../../user/main.rst:141
msgid "``qemu-x86_64`` TODO."
msgstr ""

#: ../../../user/main.rst:143
msgid "user mode (Microblaze)"
msgstr ""

#: ../../../user/main.rst:145
msgid "``qemu-microblaze`` TODO."
msgstr ""

#: ../../../user/main.rst:147
msgid "user mode (MIPS)"
msgstr ""

#: ../../../user/main.rst:149
msgid "``qemu-mips`` executes 32-bit big endian MIPS binaries (MIPS O32 ABI)."
msgstr ""

#: ../../../user/main.rst:151
msgid ""
"``qemu-mipsel`` executes 32-bit little endian MIPS binaries (MIPS O32 ABI)."
msgstr ""

#: ../../../user/main.rst:153
msgid ""
"``qemu-mips64`` executes 64-bit big endian MIPS binaries (MIPS N64 ABI)."
msgstr ""

#: ../../../user/main.rst:155
msgid ""
"``qemu-mips64el`` executes 64-bit little endian MIPS binaries (MIPS N64 ABI)."
msgstr ""

#: ../../../user/main.rst:158
msgid ""
"``qemu-mipsn32`` executes 32-bit big endian MIPS binaries (MIPS N32 ABI)."
msgstr ""

#: ../../../user/main.rst:160
msgid ""
"``qemu-mipsn32el`` executes 32-bit little endian MIPS binaries (MIPS N32 "
"ABI)."
msgstr ""

#: ../../../user/main.rst:163
msgid "user mode (NiosII)"
msgstr ""

#: ../../../user/main.rst:165
msgid "``qemu-nios2`` TODO."
msgstr ""

#: ../../../user/main.rst:167
msgid "user mode (PowerPC)"
msgstr ""

#: ../../../user/main.rst:169
msgid "``qemu-ppc64abi32`` TODO."
msgstr ""

#: ../../../user/main.rst:170
msgid "``qemu-ppc64`` TODO."
msgstr ""

#: ../../../user/main.rst:171
msgid "``qemu-ppc`` TODO."
msgstr ""

#: ../../../user/main.rst:173
msgid "user mode (SH4)"
msgstr ""

#: ../../../user/main.rst:175
msgid "``qemu-sh4eb`` TODO."
msgstr ""

#: ../../../user/main.rst:176
msgid "``qemu-sh4`` TODO."
msgstr ""

#: ../../../user/main.rst:178
msgid "user mode (SPARC)"
msgstr ""

#: ../../../user/main.rst:180
msgid "``qemu-sparc`` can execute Sparc32 binaries (Sparc32 CPU, 32 bit ABI)."
msgstr ""

#: ../../../user/main.rst:182
msgid ""
"``qemu-sparc32plus`` can execute Sparc32 and SPARC32PLUS binaries (Sparc64 "
"CPU, 32 bit ABI)."
msgstr ""

#: ../../../user/main.rst:185
msgid ""
"``qemu-sparc64`` can execute some Sparc64 (Sparc64 CPU, 64 bit ABI) and "
"SPARC32PLUS binaries (Sparc64 CPU, 32 bit ABI)."
msgstr ""

#: ../../../user/main.rst:189
msgid "BSD User space emulator"
msgstr ""

#: ../../../user/main.rst:192
msgid "BSD Status"
msgstr ""

#: ../../../user/main.rst:194
msgid "target Sparc64 on Sparc64: Some trivial programs work."
msgstr ""

#: ../../../user/main.rst:197
msgid "Quick Start"
msgstr ""

#: ../../../user/main.rst:199
msgid ""
"In order to launch a BSD process, QEMU needs the process executable itself "
"and all the target dynamic libraries used by it."
msgstr ""

#: ../../../user/main.rst:202
msgid ""
"On Sparc64, you can just try to launch any process by using the native "
"libraries::"
msgstr ""

#: ../../../user/main.rst:205
msgid "qemu-sparc64 /bin/ls"
msgstr ""

#: ../../../user/main.rst:212
msgid ""
"qemu-sparc64 [-h] [-d] [-L path] [-s size] [-bsd type] program [arguments...]"
msgstr ""

#: ../../../user/main.rst:218
msgid "Set the library root path (default=/)"
msgstr ""

#: ../../../user/main.rst:221
msgid "Set the stack size in bytes (default=524288)"
msgstr ""

#: ../../../user/main.rst:223
msgid "``-ignore-environment``"
msgstr ""

#: ../../../user/main.rst:224
msgid ""
"Start with an empty environment. Without this option, the initial "
"environment is a copy of the caller's environment."
msgstr ""

#: ../../../user/main.rst:233
msgid "``-bsd type``"
msgstr ""

#: ../../../user/main.rst:234
msgid ""
"Set the type of the emulated BSD Operating system. Valid values are FreeBSD, "
"NetBSD and OpenBSD (default)."
msgstr ""
