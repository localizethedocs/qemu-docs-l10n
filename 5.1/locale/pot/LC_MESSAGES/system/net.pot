# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 10:01+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../system/net.rst:4
msgid "Network emulation"
msgstr ""

#: ../../../system/net.rst:6
msgid ""
"QEMU can simulate several network cards (e.g. PCI or ISA cards on the PC "
"target) and can connect them to a network backend on the host or an emulated "
"hub. The various host network backends can either be used to connect the NIC "
"of the guest to a real network (e.g. by using a TAP devices or the non-"
"privileged user mode network stack), or to other guest instances running in "
"another QEMU process (e.g. by using the socket host network backend)."
msgstr ""

#: ../../../system/net.rst:15
msgid "Using TAP network interfaces"
msgstr ""

#: ../../../system/net.rst:17
msgid ""
"This is the standard way to connect QEMU to a real network. QEMU adds a "
"virtual network device on your host (called ``tapN``), and you can then "
"configure it as if it was a real ethernet card."
msgstr ""

#: ../../../system/net.rst:22
msgid "Linux host"
msgstr ""

#: ../../../system/net.rst:24
msgid ""
"As an example, you can download the ``linux-test-xxx.tar.gz`` archive and "
"copy the script ``qemu-ifup`` in ``/etc`` and configure properly ``sudo`` so "
"that the command ``ifconfig`` contained in ``qemu-ifup`` can be executed as "
"root. You must verify that your host kernel supports the TAP network "
"interfaces: the device ``/dev/net/tun`` must be present."
msgstr ""

#: ../../../system/net.rst:30
msgid ""
"See :ref:`sec_005finvocation` to have examples of command lines using the "
"TAP network interfaces."
msgstr ""

#: ../../../system/net.rst:34
msgid "Windows host"
msgstr ""

#: ../../../system/net.rst:36
msgid ""
"There is a virtual ethernet driver for Windows 2000/XP systems, called TAP-"
"Win32. But it is not included in standard QEMU for Windows, so you will need "
"to get it separately. It is part of OpenVPN package, so download OpenVPN "
"from : https://openvpn.net/."
msgstr ""

#: ../../../system/net.rst:42
msgid "Using the user mode network stack"
msgstr ""

#: ../../../system/net.rst:44
msgid ""
"By using the option ``-net user`` (default configuration if no ``-net`` "
"option is specified), QEMU uses a completely user mode network stack (you "
"don't need root privilege to use the virtual network). The virtual network "
"configuration is the following::"
msgstr ""

#: ../../../system/net.rst:49
msgid ""
"guest (10.0.2.15)  <------>  Firewall/DHCP server <-----> Internet\n"
"                      |          (10.0.2.2)\n"
"                      |\n"
"                      ---->  DNS server (10.0.2.3)\n"
"                      |\n"
"                      ---->  SMB server (10.0.2.4)"
msgstr ""

#: ../../../system/net.rst:56
msgid ""
"The QEMU VM behaves as if it was behind a firewall which blocks all incoming "
"connections. You can use a DHCP client to automatically configure the "
"network in the QEMU VM. The DHCP server assign addresses to the hosts "
"starting from 10.0.2.15."
msgstr ""

#: ../../../system/net.rst:61
msgid ""
"In order to check that the user mode network is working, you can ping the "
"address 10.0.2.2 and verify that you got an address in the range 10.0.2.x "
"from the QEMU virtual DHCP server."
msgstr ""

#: ../../../system/net.rst:65
msgid ""
"Note that ICMP traffic in general does not work with user mode networking. "
"``ping``, aka. ICMP echo, to the local router (10.0.2.2) shall work, "
"however. If you're using QEMU on Linux >= 3.0, it can use unprivileged ICMP "
"ping sockets to allow ``ping`` to the Internet. The host admin has to set "
"the ping_group_range in order to grant access to those sockets. To allow "
"ping for GID 100 (usually users group)::"
msgstr ""

#: ../../../system/net.rst:72
msgid "echo 100 100 > /proc/sys/net/ipv4/ping_group_range"
msgstr ""

#: ../../../system/net.rst:74
msgid ""
"When using the built-in TFTP server, the router is also the TFTP server."
msgstr ""

#: ../../../system/net.rst:76
msgid ""
"When using the ``'-netdev user,hostfwd=...'`` option, TCP or UDP connections "
"can be redirected from the host to the guest. It allows for example to "
"redirect X11, telnet or SSH connections."
msgstr ""

#: ../../../system/net.rst:81
msgid "Hubs"
msgstr ""

#: ../../../system/net.rst:83
msgid ""
"QEMU can simulate several hubs. A hub can be thought of as a virtual "
"connection between several network devices. These devices can be for example "
"QEMU virtual ethernet cards or virtual Host ethernet devices (TAP devices). "
"You can connect guest NICs or host network backends to such a hub using the "
"``-netdev hubport`` or ``-nic hubport`` options. The legacy ``-net`` option "
"also connects the given device to the emulated hub with ID 0 (i.e. the "
"default hub) unless you specify a netdev with ``-net nic,netdev=xxx`` here."
msgstr ""

#: ../../../system/net.rst:94
msgid "Connecting emulated networks between QEMU instances"
msgstr ""

#: ../../../system/net.rst:96
msgid ""
"Using the ``-netdev socket`` (or ``-nic socket`` or ``-net socket``) option, "
"it is possible to create emulated networks that span several QEMU instances. "
"See the description of the ``-netdev socket`` option in :ref:"
"`sec_005finvocation` to have a basic example."
msgstr ""
