# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, The QEMU Project Developers
# This file is distributed under the same license as the QEMU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QEMU 9.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 10:01+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../system/arm/versatile.rst:2
msgid "Arm Versatile boards (``versatileab``, ``versatilepb``)"
msgstr ""

#: ../../../system/arm/versatile.rst:4
msgid "The Arm Versatile baseboard is emulated with the following devices:"
msgstr ""

#: ../../../system/arm/versatile.rst:6
msgid "ARM926E, ARM1136 or Cortex-A8 CPU"
msgstr ""

#: ../../../system/arm/versatile.rst:8
msgid "PL190 Vectored Interrupt Controller"
msgstr ""

#: ../../../system/arm/versatile.rst:10
msgid "Four PL011 UARTs"
msgstr ""

#: ../../../system/arm/versatile.rst:12
msgid "SMC 91c111 Ethernet adapter"
msgstr ""

#: ../../../system/arm/versatile.rst:14
msgid "PL110 LCD controller"
msgstr ""

#: ../../../system/arm/versatile.rst:16
msgid "PL050 KMI with PS/2 keyboard and mouse."
msgstr ""

#: ../../../system/arm/versatile.rst:18
msgid ""
"PCI host bridge. Note the emulated PCI bridge only provides access to PCI "
"memory space. It does not provide access to PCI IO space. This means some "
"devices (eg. ne2k_pci NIC) are not usable, and others (eg. rtl8139 NIC) are "
"only usable when the guest drivers use the memory mapped control registers."
msgstr ""

#: ../../../system/arm/versatile.rst:24
msgid "PCI OHCI USB controller."
msgstr ""

#: ../../../system/arm/versatile.rst:26
msgid "LSI53C895A PCI SCSI Host Bus Adapter with hard disk and CD-ROM devices."
msgstr ""

#: ../../../system/arm/versatile.rst:29
msgid "PL181 MultiMedia Card Interface with SD card."
msgstr ""

#: ../../../system/arm/versatile.rst:32
msgid "Booting a Linux kernel"
msgstr ""

#: ../../../system/arm/versatile.rst:34
msgid ""
"Building a current Linux kernel with ``versatile_defconfig`` should be "
"enough to get something running. Nowadays an out-of-tree build is "
"recommended (and also useful if you build a lot of different targets). In "
"the following example $BLD points to the build directory and $SRC points to "
"the root of the Linux source tree. You can drop $SRC if you are running from "
"there."
msgstr ""

#: ../../../system/arm/versatile.rst:41
msgid ""
"$ make O=$BLD -C $SRC ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- "
"versatile_defconfig\n"
"$ make O=$BLD -C $SRC ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf-"
msgstr ""

#: ../../../system/arm/versatile.rst:46
msgid ""
"You may want to enable some additional modules if you want to boot something "
"from the SCSI interface::"
msgstr ""

#: ../../../system/arm/versatile.rst:49
msgid ""
"CONFIG_PCI=y\n"
"CONFIG_PCI_VERSATILE=y\n"
"CONFIG_SCSI=y\n"
"CONFIG_SCSI_SYM53C8XX_2=y"
msgstr ""

#: ../../../system/arm/versatile.rst:54
msgid "You can then boot with a command line like:"
msgstr ""

#: ../../../system/arm/versatile.rst:56
msgid ""
"$ qemu-system-arm -machine type=versatilepb \\\n"
"    -serial mon:stdio \\\n"
"    -drive if=scsi,driver=file,filename=debian-buster-armel-rootfs.ext4 \\\n"
"    -kernel zImage \\\n"
"    -dtb versatile-pb.dtb  \\\n"
"    -append \"console=ttyAMA0 ro root=/dev/sda\""
msgstr ""
